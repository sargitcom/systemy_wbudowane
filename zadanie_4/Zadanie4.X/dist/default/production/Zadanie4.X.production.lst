

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jun  7 16:16:20 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34  0000                     
    35                           ; Version 2.10
    36                           ; Generated 31/07/2019 GMT
    37                           ; 
    38                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4620 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  001C30                     __pidataCOMRAM:
    72                           	opt callstack 0
    73                           
    74                           ;initializer for _wereSettingsUpdated
    75  001C30  0001               	dw	1
    76  0000                     _TRISE	set	3990
    77  0000                     _TRISD	set	3989
    78  0000                     _TRISC	set	3988
    79  0000                     _TRISB	set	3987
    80  0000                     _TRISA	set	3986
    81  0000                     _ADCON2	set	4032
    82  0000                     _ADCON1	set	4033
    83  0000                     _ADCON0	set	4034
    84  0000                     _PORTBbits	set	3969
    85  0000                     _PORTEbits	set	3972
    86  0000                     _PORTD	set	3971
    87                           
    88                           	psect	smallconst
    89  001000                     __psmallconst:
    90                           	opt callstack 0
    91  001000  00                 	db	0
    92  001001                     STR_1:
    93  001001  30                 	db	48	;'0'
    94  001002  31                 	db	49	;'1'
    95  001003  32                 	db	50	;'2'
    96  001004  33                 	db	51	;'3'
    97  001005  34                 	db	52	;'4'
    98  001006  35                 	db	53	;'5'
    99  001007  36                 	db	54	;'6'
   100  001008  37                 	db	55	;'7'
   101  001009  38                 	db	56	;'8'
   102  00100A  39                 	db	57	;'9'
   103  00100B  41                 	db	65	;'A'
   104  00100C  42                 	db	66	;'B'
   105  00100D  43                 	db	67	;'C'
   106  00100E  44                 	db	68	;'D'
   107  00100F  45                 	db	69	;'E'
   108  001010  46                 	db	70	;'F'
   109  001011  00                 	db	0
   110  001012                     STR_8:
   111  001012  32                 	db	50	;'2'
   112  001013  30                 	db	48	;'0'
   113  001014  30                 	db	48	;'0'
   114  001015  57                 	db	87	;'W'
   115  001016  20                 	db	32
   116  001017  67                 	db	103	;'g'
   117  001018  72                 	db	114	;'r'
   118  001019  7A                 	db	122	;'z'
   119  00101A  61                 	db	97	;'a'
   120  00101B  6E                 	db	110	;'n'
   121  00101C  69                 	db	105	;'i'
   122  00101D  65                 	db	101	;'e'
   123  00101E  00                 	db	0
   124  00101F                     STR_4:
   125  00101F  36                 	db	54	;'6'
   126  001020  30                 	db	48	;'0'
   127  001021  30                 	db	48	;'0'
   128  001022  57                 	db	87	;'W'
   129  001023  20                 	db	32
   130  001024  67                 	db	103	;'g'
   131  001025  72                 	db	114	;'r'
   132  001026  7A                 	db	122	;'z'
   133  001027  61                 	db	97	;'a'
   134  001028  6E                 	db	110	;'n'
   135  001029  69                 	db	105	;'i'
   136  00102A  65                 	db	101	;'e'
   137  00102B  00                 	db	0
   138  00102C                     STR_2:
   139  00102C  38                 	db	56	;'8'
   140  00102D  30                 	db	48	;'0'
   141  00102E  30                 	db	48	;'0'
   142  00102F  57                 	db	87	;'W'
   143  001030  20                 	db	32
   144  001031  67                 	db	103	;'g'
   145  001032  72                 	db	114	;'r'
   146  001033  7A                 	db	122	;'z'
   147  001034  61                 	db	97	;'a'
   148  001035  6E                 	db	110	;'n'
   149  001036  69                 	db	105	;'i'
   150  001037  65                 	db	101	;'e'
   151  001038  00                 	db	0
   152  001039                     STR_6:
   153  001039  33                 	db	51	;'3'
   154  00103A  35                 	db	53	;'5'
   155  00103B  30                 	db	48	;'0'
   156  00103C  57                 	db	87	;'W'
   157  00103D  20                 	db	32
   158  00103E  67                 	db	103	;'g'
   159  00103F  72                 	db	114	;'r'
   160  001040  7A                 	db	122	;'z'
   161  001041  61                 	db	97	;'a'
   162  001042  6E                 	db	110	;'n'
   163  001043  69                 	db	105	;'i'
   164  001044  65                 	db	101	;'e'
   165  001045  00                 	db	0
   166  001046                     STR_9:
   167  001046  32                 	db	50	;'2'
   168  001047  30                 	db	48	;'0'
   169  001048  30                 	db	48	;'0'
   170  001049  57                 	db	87	;'W'
   171  00104A  20                 	db	32
   172  00104B  73                 	db	115	;'s'
   173  00104C  74                 	db	116	;'t'
   174  00104D  6F                 	db	111	;'o'
   175  00104E  70                 	db	112	;'p'
   176  00104F  00                 	db	0
   177  001050                     STR_5:
   178  001050  36                 	db	54	;'6'
   179  001051  30                 	db	48	;'0'
   180  001052  30                 	db	48	;'0'
   181  001053  57                 	db	87	;'W'
   182  001054  20                 	db	32
   183  001055  73                 	db	115	;'s'
   184  001056  74                 	db	116	;'t'
   185  001057  6F                 	db	111	;'o'
   186  001058  70                 	db	112	;'p'
   187  001059  00                 	db	0
   188  00105A                     STR_3:
   189  00105A  38                 	db	56	;'8'
   190  00105B  30                 	db	48	;'0'
   191  00105C  30                 	db	48	;'0'
   192  00105D  57                 	db	87	;'W'
   193  00105E  20                 	db	32
   194  00105F  73                 	db	115	;'s'
   195  001060  74                 	db	116	;'t'
   196  001061  6F                 	db	111	;'o'
   197  001062  70                 	db	112	;'p'
   198  001063  00                 	db	0
   199  001064                     STR_7:
   200  001064  33                 	db	51	;'3'
   201  001065  35                 	db	53	;'5'
   202  001066  30                 	db	48	;'0'
   203  001067  57                 	db	87	;'W'
   204  001068  20                 	db	32
   205  001069  73                 	db	115	;'s'
   206  00106A  74                 	db	116	;'t'
   207  00106B  6F                 	db	111	;'o'
   208  00106C  70                 	db	112	;'p'
   209  00106D  00                 	db	0
   210  00106E                     STR_10:
   211  00106E  20                 	db	32
   212  00106F  4D                 	db	77	;'M'
   213  001070  49                 	db	73	;'I'
   214  001071  4E                 	db	78	;'N'
   215  001072  20                 	db	32
   216  001073  00                 	db	0
   217  001074                     STR_11:
   218  001074  20                 	db	32
   219  001075  53                 	db	83	;'S'
   220  001076  45                 	db	69	;'E'
   221  001077  43                 	db	67	;'C'
   222  001078  00                 	db	0
   223                           
   224                           ; #config settings
   225  001079  00                 	db	0	; dummy byte at the end
   226  0000                     
   227                           	psect	cinit
   228  001BD6                     __pcinit:
   229                           	opt callstack 0
   230  001BD6                     start_initialization:
   231                           	opt callstack 0
   232  001BD6                     __initialization:
   233                           	opt callstack 0
   234                           
   235                           ; Initialize objects allocated to COMRAM (2 bytes)
   236                           ; load TBLPTR registers with __pidataCOMRAM
   237  001BD6  0E30               	movlw	low __pidataCOMRAM
   238  001BD8  6EF6               	movwf	tblptrl,c
   239  001BDA  0E1C               	movlw	high __pidataCOMRAM
   240  001BDC  6EF7               	movwf	tblptrh,c
   241  001BDE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   242  001BE0  6EF8               	movwf	tblptru,c
   243  001BE2  0009               	tblrd		*+	;fetch initializer
   244  001BE4  CFF5 F02C          	movff	tablat,__pdataCOMRAM
   245  001BE8  0009               	tblrd		*+	;fetch initializer
   246  001BEA  CFF5 F02D          	movff	tablat,__pdataCOMRAM+1
   247                           
   248                           ; Clear objects allocated to COMRAM (8 bytes)
   249  001BEE  EE00  F024         	lfsr	0,__pbssCOMRAM
   250  001BF2  0E08               	movlw	8
   251  001BF4                     clear_0:
   252  001BF4  6AEE               	clrf	postinc0,c
   253  001BF6  06E8               	decf	wreg,f,c
   254  001BF8  E1FD               	bnz	clear_0
   255  001BFA                     end_of_initialization:
   256                           	opt callstack 0
   257  001BFA                     __end_of__initialization:
   258                           	opt callstack 0
   259  001BFA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   260  001BFC  6EF8               	movwf	tblptru,c
   261  001BFE  0100               	movlb	0
   262  001C00  EFBD  F00B         	goto	_main	;jump to C main() function
   263                           
   264                           	psect	bssCOMRAM
   265  000024                     __pbssCOMRAM:
   266                           	opt callstack 0
   267  000024                     _isHeatingOn:
   268                           	opt callstack 0
   269  000024                     	ds	2
   270  000026                     _power:
   271                           	opt callstack 0
   272  000026                     	ds	2
   273  000028                     _heatingSeconds:
   274                           	opt callstack 0
   275  000028                     	ds	2
   276  00002A                     _heatingMinutes:
   277                           	opt callstack 0
   278  00002A                     	ds	2
   279                           
   280                           	psect	dataCOMRAM
   281  00002C                     __pdataCOMRAM:
   282                           	opt callstack 0
   283  00002C                     _wereSettingsUpdated:
   284                           	opt callstack 0
   285  00002C                     	ds	2
   286                           
   287                           	psect	cstackCOMRAM
   288  000001                     __pcstackCOMRAM:
   289                           	opt callstack 0
   290  000001                     ?_cprog_strrev:
   291                           	opt callstack 0
   292  000001                     ?___awdiv:
   293                           	opt callstack 0
   294  000001                     ?___awmod:
   295                           	opt callstack 0
   296  000001                     lcd_wr@val:
   297                           	opt callstack 0
   298  000001                     delay@ms:
   299                           	opt callstack 0
   300  000001                     cook@ms:
   301                           	opt callstack 0
   302  000001                     cprog_strrev@s:
   303                           	opt callstack 0
   304  000001                     updatePowerSettings@i:
   305                           	opt callstack 0
   306  000001                     updateMinutes@i:
   307                           	opt callstack 0
   308  000001                     updateSeconds@i:
   309                           	opt callstack 0
   310  000001                     updateSettingsOnReset@i:
   311                           	opt callstack 0
   312  000001                     updateStartHeating@i:
   313                           	opt callstack 0
   314  000001                     ___awdiv@dividend:
   315                           	opt callstack 0
   316  000001                     ___awmod@dividend:
   317                           	opt callstack 0
   318                           
   319                           ; 2 bytes @ 0x0
   320  000001                     	ds	1
   321  000002                     lcd_dat@val:
   322                           	opt callstack 0
   323  000002                     lcd_cmd@val:
   324                           	opt callstack 0
   325                           
   326                           ; 1 bytes @ 0x1
   327  000002                     	ds	1
   328  000003                     lcd_str@str:
   329                           	opt callstack 0
   330  000003                     delay@i:
   331                           	opt callstack 0
   332  000003                     cook@i:
   333                           	opt callstack 0
   334  000003                     cprog_strrev@n:
   335                           	opt callstack 0
   336  000003                     ___awdiv@divisor:
   337                           	opt callstack 0
   338  000003                     ___awmod@divisor:
   339                           	opt callstack 0
   340                           
   341                           ; 2 bytes @ 0x2
   342  000003                     	ds	2
   343  000005                     ??_lcd_str:
   344  000005                     delay@j:
   345                           	opt callstack 0
   346  000005                     cook@j:
   347                           	opt callstack 0
   348  000005                     cprog_strrev@savev:
   349                           	opt callstack 0
   350  000005                     ___awdiv@counter:
   351                           	opt callstack 0
   352  000005                     ___awmod@counter:
   353                           	opt callstack 0
   354                           
   355                           ; 1 bytes @ 0x4
   356  000005                     	ds	1
   357  000006                     ___awdiv@sign:
   358                           	opt callstack 0
   359  000006                     ___awmod@sign:
   360                           	opt callstack 0
   361  000006                     cprog_strrev@i:
   362                           	opt callstack 0
   363                           
   364                           ; 2 bytes @ 0x5
   365  000006                     	ds	1
   366  000007                     ?_abs:
   367                           	opt callstack 0
   368  000007                     lcd_str@i:
   369                           	opt callstack 0
   370  000007                     ___awdiv@quotient:
   371                           	opt callstack 0
   372  000007                     abs@a:
   373                           	opt callstack 0
   374                           
   375                           ; 2 bytes @ 0x6
   376  000007                     	ds	1
   377  000008                     ??_printPowerSettings:
   378  000008                     cprog_strrev@j:
   379                           	opt callstack 0
   380                           
   381                           ; 2 bytes @ 0x7
   382  000008                     	ds	1
   383  000009                     ??_abs:
   384                           
   385                           ; 1 bytes @ 0x8
   386  000009                     	ds	2
   387  00000B                     cprog_itos@buf:
   388                           	opt callstack 0
   389                           
   390                           ; 2 bytes @ 0xA
   391  00000B                     	ds	2
   392  00000D                     cprog_itos@size:
   393                           	opt callstack 0
   394                           
   395                           ; 2 bytes @ 0xC
   396  00000D                     	ds	2
   397  00000F                     cprog_itos@radix:
   398                           	opt callstack 0
   399                           
   400                           ; 2 bytes @ 0xE
   401  00000F                     	ds	2
   402  000011                     ??_cprog_itos:
   403                           
   404                           ; 1 bytes @ 0x10
   405  000011                     	ds	4
   406  000015                     cprog_itos@digits:
   407                           	opt callstack 0
   408                           
   409                           ; 2 bytes @ 0x14
   410  000015                     	ds	2
   411  000017                     cprog_itos@sign:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0x16
   415  000017                     	ds	2
   416  000019                     cprog_itos@value:
   417                           	opt callstack 0
   418                           
   419                           ; 1 bytes @ 0x18
   420  000019                     	ds	1
   421  00001A                     cprog_itos@n:
   422                           	opt callstack 0
   423                           
   424                           ; 2 bytes @ 0x19
   425  00001A                     	ds	2
   426  00001C                     printTime@minutesBuffer:
   427                           	opt callstack 0
   428                           
   429                           ; 5 bytes @ 0x1B
   430  00001C                     	ds	5
   431  000021                     printTime@secondsBuffer:
   432                           	opt callstack 0
   433                           
   434                           ; 3 bytes @ 0x20
   435  000021                     	ds	3
   436  000024                     
   437                           ; 1 bytes @ 0x23
   438 ;;
   439 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   440 ;;
   441 ;; *************** function _main *****************
   442 ;; Defined at:
   443 ;;		line 525 in file "main.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   461 ;;Total ram usage:        0 bytes
   462 ;; Hardware stack levels required when called:    5
   463 ;; This function calls:
   464 ;;		_heating
   465 ;;		_lcd_cmd
   466 ;;		_lcd_init
   467 ;;		_printPowerSettings
   468 ;;		_printTime
   469 ;;		_updateMinutes
   470 ;;		_updatePowerSettings
   471 ;;		_updateSeconds
   472 ;;		_updateSettingsOnReset
   473 ;;		_updateStartHeating
   474 ;; This function is called by:
   475 ;;		Startup code after reset
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           	psect	text0
   480  00177A                     __ptext0:
   481                           	opt callstack 0
   482  00177A                     _main:
   483                           	opt callstack 26
   484  00177A                     
   485                           ;main.c: 527:     ADCON0=0x01;
   486  00177A  0E01               	movlw	1
   487  00177C  6EC2               	movwf	194,c	;volatile
   488                           
   489                           ;main.c: 528:     ADCON1=0x0B;
   490  00177E  0E0B               	movlw	11
   491  001780  6EC1               	movwf	193,c	;volatile
   492                           
   493                           ;main.c: 529:     ADCON2=0x01;
   494  001782  0E01               	movlw	1
   495  001784  6EC0               	movwf	192,c	;volatile
   496                           
   497                           ;main.c: 531:     TRISA=0xC3;
   498  001786  0EC3               	movlw	195
   499  001788  6E92               	movwf	146,c	;volatile
   500                           
   501                           ;main.c: 532:     TRISB=0x3F;
   502  00178A  0E3F               	movlw	63
   503  00178C  6E93               	movwf	147,c	;volatile
   504                           
   505                           ;main.c: 533:     TRISC=0x01;
   506  00178E  0E01               	movlw	1
   507  001790  6E94               	movwf	148,c	;volatile
   508                           
   509                           ;main.c: 534:     TRISD=0x00;
   510  001792  0E00               	movlw	0
   511  001794  6E95               	movwf	149,c	;volatile
   512                           
   513                           ;main.c: 535:     TRISE=0x00;
   514  001796  0E00               	movlw	0
   515  001798  6E96               	movwf	150,c	;volatile
   516  00179A                     
   517                           ;main.c: 537:     lcd_init();
   518  00179A  EC4C  F00D         	call	_lcd_init	;wreg free
   519  00179E                     l1730:
   520                           
   521                           ;main.c: 541:         if (wereSettingsUpdated == 1) {
   522  00179E  042C               	decf	_wereSettingsUpdated^0,w,c
   523  0017A0  102D               	iorwf	(_wereSettingsUpdated+1)^0,w,c
   524  0017A2  A4D8               	btfss	status,2,c
   525  0017A4  EFD6  F00B         	goto	u1441
   526  0017A8  EFD8  F00B         	goto	u1440
   527  0017AC                     u1441:
   528  0017AC  EFE3  F00B         	goto	l1740
   529  0017B0                     u1440:
   530  0017B0                     
   531                           ;main.c: 542:             lcd_cmd(0x01);
   532  0017B0  0E01               	movlw	1
   533  0017B2  EC02  F00E         	call	_lcd_cmd
   534  0017B6                     
   535                           ;main.c: 543:             printPowerSettings();
   536  0017B6  ECD7  F009         	call	_printPowerSettings	;wreg free
   537  0017BA                     
   538                           ;main.c: 544:             printTime();
   539  0017BA  EC79  F00C         	call	_printTime	;wreg free
   540  0017BE                     
   541                           ;main.c: 545:             wereSettingsUpdated = 0;
   542  0017BE  0E00               	movlw	0
   543  0017C0  6E2D               	movwf	(_wereSettingsUpdated+1)^0,c
   544  0017C2  0E00               	movlw	0
   545  0017C4  6E2C               	movwf	_wereSettingsUpdated^0,c
   546  0017C6                     l1740:
   547                           
   548                           ;main.c: 548:         updatePowerSettings();
   549  0017C6  ECB3  F00C         	call	_updatePowerSettings	;wreg free
   550  0017CA                     
   551                           ;main.c: 549:         updateMinutes();
   552  0017CA  ECEB  F00C         	call	_updateMinutes	;wreg free
   553  0017CE                     
   554                           ;main.c: 550:         updateSeconds();
   555  0017CE  EC77  F00B         	call	_updateSeconds	;wreg free
   556  0017D2                     
   557                           ;main.c: 551:         updateSettingsOnReset();
   558  0017D2  EC7A  F00D         	call	_updateSettingsOnReset	;wreg free
   559  0017D6                     
   560                           ;main.c: 552:         updateStartHeating();
   561  0017D6  EC1D  F00D         	call	_updateStartHeating	;wreg free
   562  0017DA                     
   563                           ;main.c: 553:         if (isHeatingOn == 1) {
   564  0017DA  0424               	decf	_isHeatingOn^0,w,c
   565  0017DC  1025               	iorwf	(_isHeatingOn+1)^0,w,c
   566  0017DE  A4D8               	btfss	status,2,c
   567  0017E0  EFF4  F00B         	goto	u1451
   568  0017E4  EFF6  F00B         	goto	u1450
   569  0017E8                     u1451:
   570  0017E8  EFCF  F00B         	goto	l1730
   571  0017EC                     u1450:
   572  0017EC                     
   573                           ;main.c: 554:             heating();
   574  0017EC  ECBE  F00A         	call	_heating	;wreg free
   575  0017F0  EFCF  F00B         	goto	l1730
   576  0017F4  EF00  F000         	goto	start
   577  0017F8                     __end_of_main:
   578                           	opt callstack 0
   579                           
   580 ;; *************** function _updateStartHeating *****************
   581 ;; Defined at:
   582 ;;		line 470 in file "main.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;  i               2    0[COMRAM] unsigned int 
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;Total ram usage:        2 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; This function calls:
   603 ;;		Nothing
   604 ;; This function is called by:
   605 ;;		_main
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text1
   610  001A3A                     __ptext1:
   611                           	opt callstack 0
   612  001A3A                     _updateStartHeating:
   613                           	opt callstack 30
   614  001A3A                     
   615                           ;main.c: 472:     unsigned int i = 6000;
   616  001A3A  0E17               	movlw	23
   617  001A3C  6E02               	movwf	(updateStartHeating@i+1)^0,c
   618  001A3E  0E70               	movlw	112
   619  001A40  6E01               	movwf	updateStartHeating@i^0,c
   620                           
   621                           ;main.c: 474:     while(PORTBbits.RB2 && i > 0)
   622  001A42  EF26  F00D         	goto	l1286
   623  001A46                     l1284:
   624                           
   625                           ;main.c: 475:     {;main.c: 476:         i--;
   626  001A46  0601               	decf	updateStartHeating@i^0,f,c
   627  001A48  A0D8               	btfss	status,0,c
   628  001A4A  0602               	decf	(updateStartHeating@i+1)^0,f,c
   629  001A4C                     l1286:
   630                           
   631                           ;main.c: 474:     while(PORTBbits.RB2 && i > 0)
   632  001A4C  A481               	btfss	129,2,c	;volatile
   633  001A4E  EF2B  F00D         	goto	u711
   634  001A52  EF2D  F00D         	goto	u710
   635  001A56                     u711:
   636  001A56  EF36  F00D         	goto	l176
   637  001A5A                     u710:
   638  001A5A  5001               	movf	updateStartHeating@i^0,w,c
   639  001A5C  1002               	iorwf	(updateStartHeating@i+1)^0,w,c
   640  001A5E  A4D8               	btfss	status,2,c
   641  001A60  EF34  F00D         	goto	u721
   642  001A64  EF36  F00D         	goto	u720
   643  001A68                     u721:
   644  001A68  EF23  F00D         	goto	l1284
   645  001A6C                     u720:
   646  001A6C                     l176:
   647                           
   648                           ;main.c: 479:     if(PORTBbits.RB2 == 0)
   649  001A6C  B481               	btfsc	129,2,c	;volatile
   650  001A6E  EF3B  F00D         	goto	u731
   651  001A72  EF3D  F00D         	goto	u730
   652  001A76                     u731:
   653  001A76  EF4B  F00D         	goto	l178
   654  001A7A                     u730:
   655  001A7A                     
   656                           ;main.c: 480:     {;main.c: 481:         PORTD = 255;
   657  001A7A  6883               	setf	131,c	;volatile
   658  001A7C                     
   659                           ;main.c: 483:         isHeatingOn = isHeatingOn == 0 ? 1 : 0;
   660  001A7C  5024               	movf	_isHeatingOn^0,w,c
   661  001A7E  1025               	iorwf	(_isHeatingOn+1)^0,w,c
   662  001A80  B4D8               	btfsc	status,2,c
   663  001A82  EF45  F00D         	goto	u741
   664  001A86  EF48  F00D         	goto	u740
   665  001A8A                     u741:
   666  001A8A  0E01               	movlw	1
   667  001A8C  EF49  F00D         	goto	u750
   668  001A90                     u740:
   669  001A90  0E00               	movlw	0
   670  001A92                     u750:
   671  001A92  6E24               	movwf	_isHeatingOn^0,c
   672  001A94  6A25               	clrf	(_isHeatingOn+1)^0,c
   673  001A96                     l178:
   674  001A96  0012               	return		;funcret
   675  001A98                     __end_of_updateStartHeating:
   676                           	opt callstack 0
   677                           
   678 ;; *************** function _updateSettingsOnReset *****************
   679 ;; Defined at:
   680 ;;		line 448 in file "main.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  i               2    0[COMRAM] unsigned int 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;Total ram usage:        2 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_main
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text2
   708  001AF4                     __ptext2:
   709                           	opt callstack 0
   710  001AF4                     _updateSettingsOnReset:
   711                           	opt callstack 30
   712  001AF4                     
   713                           ;main.c: 450:     unsigned int i = 6000;
   714  001AF4  0E17               	movlw	23
   715  001AF6  6E02               	movwf	(updateSettingsOnReset@i+1)^0,c
   716  001AF8  0E70               	movlw	112
   717  001AFA  6E01               	movwf	updateSettingsOnReset@i^0,c
   718                           
   719                           ;main.c: 452:     while(PORTBbits.RB1 && i > 0)
   720  001AFC  EF83  F00D         	goto	l1274
   721  001B00                     l1272:
   722                           
   723                           ;main.c: 453:     {;main.c: 454:         i--;
   724  001B00  0601               	decf	updateSettingsOnReset@i^0,f,c
   725  001B02  A0D8               	btfss	status,0,c
   726  001B04  0602               	decf	(updateSettingsOnReset@i+1)^0,f,c
   727  001B06                     l1274:
   728                           
   729                           ;main.c: 452:     while(PORTBbits.RB1 && i > 0)
   730  001B06  A281               	btfss	129,1,c	;volatile
   731  001B08  EF88  F00D         	goto	u681
   732  001B0C  EF8A  F00D         	goto	u680
   733  001B10                     u681:
   734  001B10  EF93  F00D         	goto	l167
   735  001B14                     u680:
   736  001B14  5001               	movf	updateSettingsOnReset@i^0,w,c
   737  001B16  1002               	iorwf	(updateSettingsOnReset@i+1)^0,w,c
   738  001B18  A4D8               	btfss	status,2,c
   739  001B1A  EF91  F00D         	goto	u691
   740  001B1E  EF93  F00D         	goto	u690
   741  001B22                     u691:
   742  001B22  EF80  F00D         	goto	l1272
   743  001B26                     u690:
   744  001B26                     l167:
   745                           
   746                           ;main.c: 457:     if((PORTBbits.RB1 == 0))
   747  001B26  B281               	btfsc	129,1,c	;volatile
   748  001B28  EF98  F00D         	goto	u701
   749  001B2C  EF9A  F00D         	goto	u700
   750  001B30                     u701:
   751  001B30  EFA6  F00D         	goto	l169
   752  001B34                     u700:
   753  001B34                     
   754                           ;main.c: 458:     {;main.c: 459:         wereSettingsUpdated = 1;
   755  001B34  0E00               	movlw	0
   756  001B36  6E2D               	movwf	(_wereSettingsUpdated+1)^0,c
   757  001B38  0E01               	movlw	1
   758  001B3A  6E2C               	movwf	_wereSettingsUpdated^0,c
   759                           
   760                           ;main.c: 461:         heatingMinutes = 0;
   761  001B3C  0E00               	movlw	0
   762  001B3E  6E2B               	movwf	(_heatingMinutes+1)^0,c
   763  001B40  0E00               	movlw	0
   764  001B42  6E2A               	movwf	_heatingMinutes^0,c
   765                           
   766                           ;main.c: 462:         heatingSeconds = 0;
   767  001B44  0E00               	movlw	0
   768  001B46  6E29               	movwf	(_heatingSeconds+1)^0,c
   769  001B48  0E00               	movlw	0
   770  001B4A  6E28               	movwf	_heatingSeconds^0,c
   771  001B4C                     l169:
   772  001B4C  0012               	return		;funcret
   773  001B4E                     __end_of_updateSettingsOnReset:
   774                           	opt callstack 0
   775                           
   776 ;; *************** function _updateSeconds *****************
   777 ;; Defined at:
   778 ;;		line 407 in file "main.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;		None
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  i               2    0[COMRAM] unsigned int 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  2  148[None  ] int 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;Total ram usage:        2 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; This function calls:
   799 ;;		Nothing
   800 ;; This function is called by:
   801 ;;		_main
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text3
   806  0016EE                     __ptext3:
   807                           	opt callstack 0
   808  0016EE                     _updateSeconds:
   809                           	opt callstack 30
   810  0016EE                     
   811                           ;main.c: 409:     unsigned int i = 6000;
   812  0016EE  0E17               	movlw	23
   813  0016F0  6E02               	movwf	(updateSeconds@i+1)^0,c
   814  0016F2  0E70               	movlw	112
   815  0016F4  6E01               	movwf	updateSeconds@i^0,c
   816                           
   817                           ;main.c: 411:     while(PORTBbits.RB3 && i > 0)
   818  0016F6  EF80  F00B         	goto	l1252
   819  0016FA                     l1250:
   820                           
   821                           ;main.c: 412:     {;main.c: 413:         i--;
   822  0016FA  0601               	decf	updateSeconds@i^0,f,c
   823  0016FC  A0D8               	btfss	status,0,c
   824  0016FE  0602               	decf	(updateSeconds@i+1)^0,f,c
   825  001700                     l1252:
   826                           
   827                           ;main.c: 411:     while(PORTBbits.RB3 && i > 0)
   828  001700  A681               	btfss	129,3,c	;volatile
   829  001702  EF85  F00B         	goto	u631
   830  001706  EF87  F00B         	goto	u630
   831  00170A                     u631:
   832  00170A  EF90  F00B         	goto	l153
   833  00170E                     u630:
   834  00170E  5001               	movf	updateSeconds@i^0,w,c
   835  001710  1002               	iorwf	(updateSeconds@i+1)^0,w,c
   836  001712  A4D8               	btfss	status,2,c
   837  001714  EF8E  F00B         	goto	u641
   838  001718  EF90  F00B         	goto	u640
   839  00171C                     u641:
   840  00171C  EF7D  F00B         	goto	l1250
   841  001720                     u640:
   842  001720                     l153:
   843                           
   844                           ;main.c: 416:     if((PORTBbits.RB3 == 0))
   845  001720  B681               	btfsc	129,3,c	;volatile
   846  001722  EF95  F00B         	goto	u651
   847  001726  EF97  F00B         	goto	u650
   848  00172A                     u651:
   849  00172A  EFBC  F00B         	goto	l157
   850  00172E                     u650:
   851  00172E                     
   852                           ;main.c: 417:     {;main.c: 418:         wereSettingsUpdated = 1;
   853  00172E  0E00               	movlw	0
   854  001730  6E2D               	movwf	(_wereSettingsUpdated+1)^0,c
   855  001732  0E01               	movlw	1
   856  001734  6E2C               	movwf	_wereSettingsUpdated^0,c
   857  001736                     
   858                           ;main.c: 420:         if (heatingSeconds == 50 && heatingMinutes < 998) {
   859  001736  0E32               	movlw	50
   860  001738  1828               	xorwf	_heatingSeconds^0,w,c
   861  00173A  1029               	iorwf	(_heatingSeconds+1)^0,w,c
   862  00173C  A4D8               	btfss	status,2,c
   863  00173E  EFA3  F00B         	goto	u661
   864  001742  EFA5  F00B         	goto	u660
   865  001746                     u661:
   866  001746  EFB8  F00B         	goto	l1266
   867  00174A                     u660:
   868  00174A  0EE6               	movlw	230
   869  00174C  5C2A               	subwf	_heatingMinutes^0,w,c
   870  00174E  0E03               	movlw	3
   871  001750  582B               	subwfb	(_heatingMinutes+1)^0,w,c
   872  001752  B0D8               	btfsc	status,0,c
   873  001754  EFAE  F00B         	goto	u671
   874  001758  EFB0  F00B         	goto	u670
   875  00175C                     u671:
   876  00175C  EFB8  F00B         	goto	l1266
   877  001760                     u670:
   878  001760                     
   879                           ;main.c: 421:             heatingMinutes++;
   880  001760  4A2A               	infsnz	_heatingMinutes^0,f,c
   881  001762  2A2B               	incf	(_heatingMinutes+1)^0,f,c
   882  001764                     
   883                           ;main.c: 422:             heatingSeconds = 0;
   884  001764  0E00               	movlw	0
   885  001766  6E29               	movwf	(_heatingSeconds+1)^0,c
   886  001768  0E00               	movlw	0
   887  00176A  6E28               	movwf	_heatingSeconds^0,c
   888                           
   889                           ;main.c: 423:         } else {
   890  00176C  EFBC  F00B         	goto	l157
   891  001770                     l1266:
   892                           
   893                           ;main.c: 424:             heatingSeconds += 10;
   894  001770  0E0A               	movlw	10
   895  001772  2628               	addwf	_heatingSeconds^0,f,c
   896  001774  0E00               	movlw	0
   897  001776  2229               	addwfc	(_heatingSeconds+1)^0,f,c
   898  001778                     l157:
   899  001778  0012               	return		;funcret
   900  00177A                     __end_of_updateSeconds:
   901                           	opt callstack 0
   902                           
   903 ;; *************** function _updatePowerSettings *****************
   904 ;; Defined at:
   905 ;;		line 324 in file "main.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  i               2    0[COMRAM] unsigned int 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, status,2, status,0
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;Total ram usage:        2 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		_main
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text4
   933  001966                     __ptext4:
   934                           	opt callstack 0
   935  001966                     _updatePowerSettings:
   936                           	opt callstack 30
   937  001966                     
   938                           ;main.c: 326:     unsigned int i = 6000;
   939  001966  0E17               	movlw	23
   940  001968  6E02               	movwf	(updatePowerSettings@i+1)^0,c
   941  00196A  0E70               	movlw	112
   942  00196C  6E01               	movwf	updatePowerSettings@i^0,c
   943                           
   944                           ;main.c: 328:     while(PORTBbits.RB5 && i > 0)
   945  00196E  EFBC  F00C         	goto	l1218
   946  001972                     l1216:
   947                           
   948                           ;main.c: 329:     {;main.c: 330:         i--;
   949  001972  0601               	decf	updatePowerSettings@i^0,f,c
   950  001974  A0D8               	btfss	status,0,c
   951  001976  0602               	decf	(updatePowerSettings@i+1)^0,f,c
   952  001978                     l1218:
   953                           
   954                           ;main.c: 328:     while(PORTBbits.RB5 && i > 0)
   955  001978  AA81               	btfss	129,5,c	;volatile
   956  00197A  EFC1  F00C         	goto	u551
   957  00197E  EFC3  F00C         	goto	u550
   958  001982                     u551:
   959  001982  EFCC  F00C         	goto	l115
   960  001986                     u550:
   961  001986  5001               	movf	updatePowerSettings@i^0,w,c
   962  001988  1002               	iorwf	(updatePowerSettings@i+1)^0,w,c
   963  00198A  A4D8               	btfss	status,2,c
   964  00198C  EFCA  F00C         	goto	u561
   965  001990  EFCC  F00C         	goto	u560
   966  001994                     u561:
   967  001994  EFB9  F00C         	goto	l1216
   968  001998                     u560:
   969  001998                     l115:
   970                           
   971                           ;main.c: 333:     if((PORTBbits.RB5 == 0))
   972  001998  BA81               	btfsc	129,5,c	;volatile
   973  00199A  EFD1  F00C         	goto	u571
   974  00199E  EFD3  F00C         	goto	u570
   975  0019A2                     u571:
   976  0019A2  EFEA  F00C         	goto	l119
   977  0019A6                     u570:
   978  0019A6                     
   979                           ;main.c: 334:     {;main.c: 335:         wereSettingsUpdated = 1;
   980  0019A6  0E00               	movlw	0
   981  0019A8  6E2D               	movwf	(_wereSettingsUpdated+1)^0,c
   982  0019AA  0E01               	movlw	1
   983  0019AC  6E2C               	movwf	_wereSettingsUpdated^0,c
   984  0019AE                     
   985                           ;main.c: 337:         if (power < 2) {
   986  0019AE  5027               	movf	(_power+1)^0,w,c
   987  0019B0  E107               	bnz	u581
   988  0019B2  0E02               	movlw	2
   989  0019B4  5C26               	subwf	_power^0,w,c
   990  0019B6  B0D8               	btfsc	status,0,c
   991  0019B8  EFE0  F00C         	goto	u581
   992  0019BC  EFE2  F00C         	goto	u580
   993  0019C0                     u581:
   994  0019C0  EFE6  F00C         	goto	l1228
   995  0019C4                     u580:
   996  0019C4                     
   997                           ;main.c: 338:             power++;
   998  0019C4  4A26               	infsnz	_power^0,f,c
   999  0019C6  2A27               	incf	(_power+1)^0,f,c
  1000                           
  1001                           ;main.c: 339:         } else {
  1002  0019C8  EFEA  F00C         	goto	l119
  1003  0019CC                     l1228:
  1004                           
  1005                           ;main.c: 340:             power = 0;
  1006  0019CC  0E00               	movlw	0
  1007  0019CE  6E27               	movwf	(_power+1)^0,c
  1008  0019D0  0E00               	movlw	0
  1009  0019D2  6E26               	movwf	_power^0,c
  1010  0019D4                     l119:
  1011  0019D4  0012               	return		;funcret
  1012  0019D6                     __end_of_updatePowerSettings:
  1013                           	opt callstack 0
  1014                           
  1015 ;; *************** function _updateMinutes *****************
  1016 ;; Defined at:
  1017 ;;		line 384 in file "main.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  i               2    0[COMRAM] unsigned int 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  2  138[None  ] int 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2, status,0
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;Total ram usage:        2 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; This function calls:
  1038 ;;		Nothing
  1039 ;; This function is called by:
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text5
  1045  0019D6                     __ptext5:
  1046                           	opt callstack 0
  1047  0019D6                     _updateMinutes:
  1048                           	opt callstack 30
  1049  0019D6                     
  1050                           ;main.c: 386:     unsigned int i = 6000;
  1051  0019D6  0E17               	movlw	23
  1052  0019D8  6E02               	movwf	(updateMinutes@i+1)^0,c
  1053  0019DA  0E70               	movlw	112
  1054  0019DC  6E01               	movwf	updateMinutes@i^0,c
  1055                           
  1056                           ;main.c: 388:     while(PORTBbits.RB4 && i > 0)
  1057  0019DE  EFF4  F00C         	goto	l1236
  1058  0019E2                     l1234:
  1059                           
  1060                           ;main.c: 389:     {;main.c: 390:         i--;
  1061  0019E2  0601               	decf	updateMinutes@i^0,f,c
  1062  0019E4  A0D8               	btfss	status,0,c
  1063  0019E6  0602               	decf	(updateMinutes@i+1)^0,f,c
  1064  0019E8                     l1236:
  1065                           
  1066                           ;main.c: 388:     while(PORTBbits.RB4 && i > 0)
  1067  0019E8  A881               	btfss	129,4,c	;volatile
  1068  0019EA  EFF9  F00C         	goto	u591
  1069  0019EE  EFFB  F00C         	goto	u590
  1070  0019F2                     u591:
  1071  0019F2  EF04  F00D         	goto	l143
  1072  0019F6                     u590:
  1073  0019F6  5001               	movf	updateMinutes@i^0,w,c
  1074  0019F8  1002               	iorwf	(updateMinutes@i+1)^0,w,c
  1075  0019FA  A4D8               	btfss	status,2,c
  1076  0019FC  EF02  F00D         	goto	u601
  1077  001A00  EF04  F00D         	goto	u600
  1078  001A04                     u601:
  1079  001A04  EFF1  F00C         	goto	l1234
  1080  001A08                     u600:
  1081  001A08                     l143:
  1082                           
  1083                           ;main.c: 393:     if((PORTBbits.RB4 == 0))
  1084  001A08  B881               	btfsc	129,4,c	;volatile
  1085  001A0A  EF09  F00D         	goto	u611
  1086  001A0E  EF0B  F00D         	goto	u610
  1087  001A12                     u611:
  1088  001A12  EF1C  F00D         	goto	l146
  1089  001A16                     u610:
  1090  001A16                     
  1091                           ;main.c: 394:     {;main.c: 395:         wereSettingsUpdated = 1;
  1092  001A16  0E00               	movlw	0
  1093  001A18  6E2D               	movwf	(_wereSettingsUpdated+1)^0,c
  1094  001A1A  0E01               	movlw	1
  1095  001A1C  6E2C               	movwf	_wereSettingsUpdated^0,c
  1096  001A1E                     
  1097                           ;main.c: 397:         if (heatingMinutes < 998) {
  1098  001A1E  0EE6               	movlw	230
  1099  001A20  5C2A               	subwf	_heatingMinutes^0,w,c
  1100  001A22  0E03               	movlw	3
  1101  001A24  582B               	subwfb	(_heatingMinutes+1)^0,w,c
  1102  001A26  B0D8               	btfsc	status,0,c
  1103  001A28  EF18  F00D         	goto	u621
  1104  001A2C  EF1A  F00D         	goto	u620
  1105  001A30                     u621:
  1106  001A30  EF1C  F00D         	goto	l146
  1107  001A34                     u620:
  1108  001A34                     
  1109                           ;main.c: 398:             heatingMinutes++;
  1110  001A34  4A2A               	infsnz	_heatingMinutes^0,f,c
  1111  001A36  2A2B               	incf	(_heatingMinutes+1)^0,f,c
  1112  001A38                     l146:
  1113  001A38  0012               	return		;funcret
  1114  001A3A                     __end_of_updateMinutes:
  1115                           	opt callstack 0
  1116                           
  1117 ;; *************** function _lcd_init *****************
  1118 ;; Defined at:
  1119 ;;		line 305 in file "main.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;		None
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;		None
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  1    wreg      void 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0, cstack
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;Total ram usage:        0 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    2
  1140 ;; This function calls:
  1141 ;;		_delay
  1142 ;;		_lcd_cmd
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text6
  1149  001A98                     __ptext6:
  1150                           	opt callstack 0
  1151  001A98                     _lcd_init:
  1152                           	opt callstack 28
  1153  001A98                     
  1154                           ;main.c: 307:  PORTEbits.RE1=0;
  1155  001A98  9284               	bcf	132,1,c	;volatile
  1156                           
  1157                           ;main.c: 308:  PORTEbits.RE2=0;
  1158  001A9A  9484               	bcf	132,2,c	;volatile
  1159  001A9C                     
  1160                           ;main.c: 309:  delay(20);
  1161  001A9C  0E00               	movlw	0
  1162  001A9E  6E02               	movwf	(delay@ms+1)^0,c
  1163  001AA0  0E14               	movlw	20
  1164  001AA2  6E01               	movwf	delay@ms^0,c
  1165  001AA4  ECA7  F00D         	call	_delay	;wreg free
  1166  001AA8                     
  1167                           ;main.c: 310:  PORTEbits.RE1=1;
  1168  001AA8  8284               	bsf	132,1,c	;volatile
  1169  001AAA                     
  1170                           ;main.c: 312:  lcd_cmd(0x38);
  1171  001AAA  0E38               	movlw	56
  1172  001AAC  EC02  F00E         	call	_lcd_cmd
  1173  001AB0                     
  1174                           ;main.c: 313:  delay(5);
  1175  001AB0  0E00               	movlw	0
  1176  001AB2  6E02               	movwf	(delay@ms+1)^0,c
  1177  001AB4  0E05               	movlw	5
  1178  001AB6  6E01               	movwf	delay@ms^0,c
  1179  001AB8  ECA7  F00D         	call	_delay	;wreg free
  1180                           
  1181                           ;main.c: 314:  lcd_cmd(0x38);
  1182  001ABC  0E38               	movlw	56
  1183  001ABE  EC02  F00E         	call	_lcd_cmd
  1184  001AC2                     
  1185                           ;main.c: 315:     delay(1);
  1186  001AC2  0E00               	movlw	0
  1187  001AC4  6E02               	movwf	(delay@ms+1)^0,c
  1188  001AC6  0E01               	movlw	1
  1189  001AC8  6E01               	movwf	delay@ms^0,c
  1190  001ACA  ECA7  F00D         	call	_delay	;wreg free
  1191  001ACE                     
  1192                           ;main.c: 316:  lcd_cmd(0x38);
  1193  001ACE  0E38               	movlw	56
  1194  001AD0  EC02  F00E         	call	_lcd_cmd
  1195  001AD4                     
  1196                           ;main.c: 317:  lcd_cmd(0x08);
  1197  001AD4  0E08               	movlw	8
  1198  001AD6  EC02  F00E         	call	_lcd_cmd
  1199  001ADA                     
  1200                           ;main.c: 318:  lcd_cmd(0x0F);
  1201  001ADA  0E0F               	movlw	15
  1202  001ADC  EC02  F00E         	call	_lcd_cmd
  1203  001AE0                     
  1204                           ;main.c: 319:  lcd_cmd(0x01);
  1205  001AE0  0E01               	movlw	1
  1206  001AE2  EC02  F00E         	call	_lcd_cmd
  1207  001AE6                     
  1208                           ;main.c: 320:  lcd_cmd(0x38);
  1209  001AE6  0E38               	movlw	56
  1210  001AE8  EC02  F00E         	call	_lcd_cmd
  1211  001AEC                     
  1212                           ;main.c: 321:     lcd_cmd(0x80);
  1213  001AEC  0E80               	movlw	128
  1214  001AEE  EC02  F00E         	call	_lcd_cmd
  1215  001AF2  0012               	return		;funcret
  1216  001AF4                     __end_of_lcd_init:
  1217                           	opt callstack 0
  1218                           
  1219 ;; *************** function _delay *****************
  1220 ;; Defined at:
  1221 ;;		line 113 in file "main.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;  ms              2    0[COMRAM] unsigned int 
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  i               2    2[COMRAM] unsigned int 
  1226 ;;  j               1    4[COMRAM] unsigned char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, status,2, status,0
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;Total ram usage:        5 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; This function calls:
  1243 ;;		Nothing
  1244 ;; This function is called by:
  1245 ;;		_lcd_init
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text7
  1250  001B4E                     __ptext7:
  1251                           	opt callstack 0
  1252  001B4E                     _delay:
  1253                           	opt callstack 29
  1254  001B4E                     
  1255                           ;main.c: 113: void delay(unsigned int ms);main.c: 114: {;main.c: 115:     unsigned int i
      +                          ;;main.c: 116:     unsigned char j;;main.c: 118:  for (i =0; i< ms; i++)
  1256  001B4E  0E00               	movlw	0
  1257  001B50  6E04               	movwf	(delay@i+1)^0,c
  1258  001B52  0E00               	movlw	0
  1259  001B54  6E03               	movwf	delay@i^0,c
  1260  001B56  EFBF  F00D         	goto	l1536
  1261  001B5A                     l1524:
  1262                           
  1263                           ;main.c: 119:  {;main.c: 121:   for (j =0 ; j < 200; j++)
  1264  001B5A  0E00               	movlw	0
  1265  001B5C  6E05               	movwf	delay@j^0,c
  1266  001B5E                     l53:
  1267                           
  1268                           ;main.c: 122:    {;main.c: 123:       __nop();
  1269  001B5E  F000               	nop	
  1270                           
  1271                           ;main.c: 124:       __nop();
  1272  001B60  F000               	nop	
  1273                           
  1274                           ;main.c: 125:       __nop();
  1275  001B62  F000               	nop	
  1276                           
  1277                           ;main.c: 126:       __nop();
  1278  001B64  F000               	nop	
  1279                           
  1280                           ;main.c: 127:       __nop();
  1281  001B66  F000               	nop	
  1282  001B68                     
  1283                           ;main.c: 128:    }
  1284  001B68  2A05               	incf	delay@j^0,f,c
  1285  001B6A  0EC7               	movlw	199
  1286  001B6C  6405               	cpfsgt	delay@j^0,c
  1287  001B6E  EFBB  F00D         	goto	u1051
  1288  001B72  EFBD  F00D         	goto	u1050
  1289  001B76                     u1051:
  1290  001B76  EFAF  F00D         	goto	l53
  1291  001B7A                     u1050:
  1292  001B7A                     
  1293                           ;main.c: 129:  }
  1294  001B7A  4A03               	infsnz	delay@i^0,f,c
  1295  001B7C  2A04               	incf	(delay@i+1)^0,f,c
  1296  001B7E                     l1536:
  1297  001B7E  5001               	movf	delay@ms^0,w,c
  1298  001B80  5C03               	subwf	delay@i^0,w,c
  1299  001B82  5002               	movf	(delay@ms+1)^0,w,c
  1300  001B84  5804               	subwfb	(delay@i+1)^0,w,c
  1301  001B86  A0D8               	btfss	status,0,c
  1302  001B88  EFC8  F00D         	goto	u1061
  1303  001B8C  EFCA  F00D         	goto	u1060
  1304  001B90                     u1061:
  1305  001B90  EFAD  F00D         	goto	l1524
  1306  001B94                     u1060:
  1307  001B94  0012               	return		;funcret
  1308  001B96                     __end_of_delay:
  1309                           	opt callstack 0
  1310                           
  1311 ;; *************** function _heating *****************
  1312 ;; Defined at:
  1313 ;;		line 492 in file "main.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    4
  1334 ;; This function calls:
  1335 ;;		_cook
  1336 ;;		_lcd_cmd
  1337 ;;		_printPowerSettings
  1338 ;;		_printTime
  1339 ;; This function is called by:
  1340 ;;		_main
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text8
  1345  00157C                     __ptext8:
  1346                           	opt callstack 0
  1347  00157C                     _heating:
  1348                           	opt callstack 26
  1349  00157C                     
  1350                           ;main.c: 494:     PORTD = 255;
  1351  00157C  6883               	setf	131,c	;volatile
  1352                           
  1353                           ;main.c: 496:     while ((heatingMinutes > 0 || heatingSeconds > 0) && isHeatingOn == 1)
      +                           {
  1354  00157E  EFF5  F00A         	goto	l1712
  1355  001582                     l1692:
  1356                           
  1357                           ;main.c: 498:         lcd_cmd(0x01);
  1358  001582  0E01               	movlw	1
  1359  001584  EC02  F00E         	call	_lcd_cmd
  1360  001588                     
  1361                           ;main.c: 500:         printPowerSettings();
  1362  001588  ECD7  F009         	call	_printPowerSettings	;wreg free
  1363  00158C                     
  1364                           ;main.c: 501:         printTime();
  1365  00158C  EC79  F00C         	call	_printTime	;wreg free
  1366  001590                     
  1367                           ;main.c: 504:         if (heatingMinutes > 0 || heatingSeconds > 0) {
  1368  001590  502A               	movf	_heatingMinutes^0,w,c
  1369  001592  102B               	iorwf	(_heatingMinutes+1)^0,w,c
  1370  001594  A4D8               	btfss	status,2,c
  1371  001596  EFCF  F00A         	goto	u1381
  1372  00159A  EFD1  F00A         	goto	u1380
  1373  00159E                     u1381:
  1374  00159E  EFDA  F00A         	goto	l1702
  1375  0015A2                     u1380:
  1376  0015A2  5028               	movf	_heatingSeconds^0,w,c
  1377  0015A4  1029               	iorwf	(_heatingSeconds+1)^0,w,c
  1378  0015A6  B4D8               	btfsc	status,2,c
  1379  0015A8  EFD8  F00A         	goto	u1391
  1380  0015AC  EFDA  F00A         	goto	u1390
  1381  0015B0                     u1391:
  1382  0015B0  EFEF  F00A         	goto	l1710
  1383  0015B4                     u1390:
  1384  0015B4                     l1702:
  1385                           
  1386                           ;main.c: 505:             if (heatingSeconds > 0) {
  1387  0015B4  5028               	movf	_heatingSeconds^0,w,c
  1388  0015B6  1029               	iorwf	(_heatingSeconds+1)^0,w,c
  1389  0015B8  B4D8               	btfsc	status,2,c
  1390  0015BA  EFE1  F00A         	goto	u1401
  1391  0015BE  EFE3  F00A         	goto	u1400
  1392  0015C2                     u1401:
  1393  0015C2  EFE8  F00A         	goto	l1706
  1394  0015C6                     u1400:
  1395  0015C6                     
  1396                           ;main.c: 506:                 heatingSeconds--;
  1397  0015C6  0628               	decf	_heatingSeconds^0,f,c
  1398  0015C8  A0D8               	btfss	status,0,c
  1399  0015CA  0629               	decf	(_heatingSeconds+1)^0,f,c
  1400                           
  1401                           ;main.c: 507:             } else {
  1402  0015CC  EFEF  F00A         	goto	l1710
  1403  0015D0                     l1706:
  1404                           
  1405                           ;main.c: 508:                 heatingSeconds = 59;
  1406  0015D0  0E00               	movlw	0
  1407  0015D2  6E29               	movwf	(_heatingSeconds+1)^0,c
  1408  0015D4  0E3B               	movlw	59
  1409  0015D6  6E28               	movwf	_heatingSeconds^0,c
  1410  0015D8                     
  1411                           ;main.c: 509:                 heatingMinutes--;
  1412  0015D8  062A               	decf	_heatingMinutes^0,f,c
  1413  0015DA  A0D8               	btfss	status,0,c
  1414  0015DC  062B               	decf	(_heatingMinutes+1)^0,f,c
  1415  0015DE                     l1710:
  1416                           
  1417                           ;main.c: 513:         cook(50);
  1418  0015DE  0E00               	movlw	0
  1419  0015E0  6E02               	movwf	(cook@ms+1)^0,c
  1420  0015E2  0E32               	movlw	50
  1421  0015E4  6E01               	movwf	cook@ms^0,c
  1422  0015E6  EC3D  F008         	call	_cook	;wreg free
  1423  0015EA                     l1712:
  1424                           
  1425                           ;main.c: 496:     while ((heatingMinutes > 0 || heatingSeconds > 0) && isHeatingOn == 1)
      +                           {
  1426  0015EA  502A               	movf	_heatingMinutes^0,w,c
  1427  0015EC  102B               	iorwf	(_heatingMinutes+1)^0,w,c
  1428  0015EE  A4D8               	btfss	status,2,c
  1429  0015F0  EFFC  F00A         	goto	u1411
  1430  0015F4  EFFE  F00A         	goto	u1410
  1431  0015F8                     u1411:
  1432  0015F8  EF07  F00B         	goto	l1716
  1433  0015FC                     u1410:
  1434  0015FC  5028               	movf	_heatingSeconds^0,w,c
  1435  0015FE  1029               	iorwf	(_heatingSeconds+1)^0,w,c
  1436  001600  B4D8               	btfsc	status,2,c
  1437  001602  EF05  F00B         	goto	u1421
  1438  001606  EF07  F00B         	goto	u1420
  1439  00160A                     u1421:
  1440  00160A  EF10  F00B         	goto	l1718
  1441  00160E                     u1420:
  1442  00160E                     l1716:
  1443  00160E  0424               	decf	_isHeatingOn^0,w,c
  1444  001610  1025               	iorwf	(_isHeatingOn+1)^0,w,c
  1445  001612  B4D8               	btfsc	status,2,c
  1446  001614  EF0E  F00B         	goto	u1431
  1447  001618  EF10  F00B         	goto	u1430
  1448  00161C                     u1431:
  1449  00161C  EFC1  F00A         	goto	l1692
  1450  001620                     u1430:
  1451  001620                     l1718:
  1452                           
  1453                           ;main.c: 516:     PORTD = 0;
  1454  001620  0E00               	movlw	0
  1455  001622  6E83               	movwf	131,c	;volatile
  1456                           
  1457                           ;main.c: 517:     isHeatingOn = 0;
  1458  001624  0E00               	movlw	0
  1459  001626  6E25               	movwf	(_isHeatingOn+1)^0,c
  1460  001628  0E00               	movlw	0
  1461  00162A  6E24               	movwf	_isHeatingOn^0,c
  1462  00162C                     
  1463                           ;main.c: 519:     printPowerSettings();
  1464  00162C  ECD7  F009         	call	_printPowerSettings	;wreg free
  1465  001630                     
  1466                           ;main.c: 520:     printTime();
  1467  001630  EC79  F00C         	call	_printTime	;wreg free
  1468  001634                     
  1469                           ;main.c: 522:     wereSettingsUpdated = 1;
  1470  001634  0E00               	movlw	0
  1471  001636  6E2D               	movwf	(_wereSettingsUpdated+1)^0,c
  1472  001638  0E01               	movlw	1
  1473  00163A  6E2C               	movwf	_wereSettingsUpdated^0,c
  1474  00163C  0012               	return		;funcret
  1475  00163E                     __end_of_heating:
  1476                           	opt callstack 0
  1477                           
  1478 ;; *************** function _printTime *****************
  1479 ;; Defined at:
  1480 ;;		line 433 in file "main.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  minutesBuffe    5   27[COMRAM] unsigned char [5]
  1485 ;;  secondsBuffe    3   32[COMRAM] unsigned char [3]
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;Total ram usage:        8 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    3
  1502 ;; This function calls:
  1503 ;;		_cprog_itos
  1504 ;;		_lcd_cmd
  1505 ;;		_lcd_str
  1506 ;; This function is called by:
  1507 ;;		_heating
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text9
  1513  0018F2                     __ptext9:
  1514                           	opt callstack 0
  1515  0018F2                     _printTime:
  1516                           	opt callstack 27
  1517  0018F2                     
  1518                           ;main.c: 435:     char minutesBuffer[5];;main.c: 436:     char secondsBuffer[3];;main.c:
      +                           438:     cprog_itos(heatingMinutes, minutesBuffer, 5, 10);
  1519  0018F2  0E1C               	movlw	low printTime@minutesBuffer
  1520  0018F4  6E0B               	movwf	cprog_itos@buf^0,c
  1521  0018F6  0E00               	movlw	high printTime@minutesBuffer
  1522  0018F8  6E0C               	movwf	(cprog_itos@buf+1)^0,c
  1523  0018FA  0E00               	movlw	0
  1524  0018FC  6E0E               	movwf	(cprog_itos@size+1)^0,c
  1525  0018FE  0E05               	movlw	5
  1526  001900  6E0D               	movwf	cprog_itos@size^0,c
  1527  001902  0E00               	movlw	0
  1528  001904  6E10               	movwf	(cprog_itos@radix+1)^0,c
  1529  001906  0E0A               	movlw	10
  1530  001908  6E0F               	movwf	cprog_itos@radix^0,c
  1531  00190A  502A               	movf	_heatingMinutes^0,w,c
  1532  00190C  EC47  F009         	call	_cprog_itos
  1533                           
  1534                           ;main.c: 439:     cprog_itos(heatingSeconds, secondsBuffer, 5, 10);
  1535  001910  0E21               	movlw	low printTime@secondsBuffer
  1536  001912  6E0B               	movwf	cprog_itos@buf^0,c
  1537  001914  0E00               	movlw	high printTime@secondsBuffer
  1538  001916  6E0C               	movwf	(cprog_itos@buf+1)^0,c
  1539  001918  0E00               	movlw	0
  1540  00191A  6E0E               	movwf	(cprog_itos@size+1)^0,c
  1541  00191C  0E05               	movlw	5
  1542  00191E  6E0D               	movwf	cprog_itos@size^0,c
  1543  001920  0E00               	movlw	0
  1544  001922  6E10               	movwf	(cprog_itos@radix+1)^0,c
  1545  001924  0E0A               	movlw	10
  1546  001926  6E0F               	movwf	cprog_itos@radix^0,c
  1547  001928  5028               	movf	_heatingSeconds^0,w,c
  1548  00192A  EC47  F009         	call	_cprog_itos
  1549  00192E                     
  1550                           ;main.c: 441:     lcd_cmd(0xC0);
  1551  00192E  0EC0               	movlw	192
  1552  001930  EC02  F00E         	call	_lcd_cmd
  1553  001934                     
  1554                           ;main.c: 442:     lcd_str(minutesBuffer);
  1555  001934  0E1C               	movlw	low printTime@minutesBuffer
  1556  001936  6E03               	movwf	lcd_str@str^0,c
  1557  001938  0E00               	movlw	high printTime@minutesBuffer
  1558  00193A  6E04               	movwf	(lcd_str@str+1)^0,c
  1559  00193C  EC3B  F00C         	call	_lcd_str	;wreg free
  1560  001940                     
  1561                           ;main.c: 443:     lcd_str(" MIN ");
  1562  001940  0E6E               	movlw	low STR_10
  1563  001942  6E03               	movwf	lcd_str@str^0,c
  1564  001944  0E10               	movlw	high STR_10
  1565  001946  6E04               	movwf	(lcd_str@str+1)^0,c
  1566  001948  EC3B  F00C         	call	_lcd_str	;wreg free
  1567  00194C                     
  1568                           ;main.c: 444:     lcd_str(secondsBuffer);
  1569  00194C  0E21               	movlw	low printTime@secondsBuffer
  1570  00194E  6E03               	movwf	lcd_str@str^0,c
  1571  001950  0E00               	movlw	high printTime@secondsBuffer
  1572  001952  6E04               	movwf	(lcd_str@str+1)^0,c
  1573  001954  EC3B  F00C         	call	_lcd_str	;wreg free
  1574  001958                     
  1575                           ;main.c: 445:     lcd_str(" SEC");
  1576  001958  0E74               	movlw	low STR_11
  1577  00195A  6E03               	movwf	lcd_str@str^0,c
  1578  00195C  0E10               	movlw	high STR_11
  1579  00195E  6E04               	movwf	(lcd_str@str+1)^0,c
  1580  001960  EC3B  F00C         	call	_lcd_str	;wreg free
  1581  001964  0012               	return		;funcret
  1582  001966                     __end_of_printTime:
  1583                           	opt callstack 0
  1584                           
  1585 ;; *************** function _lcd_cmd *****************
  1586 ;; Defined at:
  1587 ;;		line 294 in file "main.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  val             1    wreg     unsigned char 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  val             1    1[COMRAM] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;Total ram usage:        1 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    1
  1608 ;; This function calls:
  1609 ;;		_lcd_wr
  1610 ;; This function is called by:
  1611 ;;		_lcd_init
  1612 ;;		_printTime
  1613 ;;		_heating
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text10
  1619  001C04                     __ptext10:
  1620                           	opt callstack 0
  1621  001C04                     _lcd_cmd:
  1622                           	opt callstack 28
  1623                           
  1624                           ;incstack = 0
  1625                           ;lcd_cmd@val stored from wreg
  1626  001C04  6E02               	movwf	lcd_cmd@val^0,c
  1627  001C06                     
  1628                           ;main.c: 294: void lcd_cmd(unsigned char val);main.c: 295: {;main.c: 296:  PORTEbits.RE1
      +                          =1;
  1629  001C06  8284               	bsf	132,1,c	;volatile
  1630  001C08                     
  1631                           ;main.c: 297:         lcd_wr(val);
  1632  001C08  5002               	movf	lcd_cmd@val^0,w,c
  1633  001C0A  EC14  F00E         	call	_lcd_wr
  1634  001C0E                     
  1635                           ;main.c: 298:         PORTEbits.RE2=0;
  1636  001C0E  9484               	bcf	132,2,c	;volatile
  1637  001C10                     
  1638                           ;main.c: 300:         PORTEbits.RE1=0;
  1639  001C10  9284               	bcf	132,1,c	;volatile
  1640  001C12                     
  1641                           ;main.c: 302:  PORTEbits.RE1=1;
  1642  001C12  8284               	bsf	132,1,c	;volatile
  1643  001C14  0012               	return		;funcret
  1644  001C16                     __end_of_lcd_cmd:
  1645                           	opt callstack 0
  1646                           
  1647 ;; *************** function _cprog_itos *****************
  1648 ;; Defined at:
  1649 ;;		line 271 in file "main.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  value           1    wreg     unsigned char 
  1652 ;;  buf             2   10[COMRAM] PTR unsigned char 
  1653 ;;		 -> printTime@secondsBuffer(3), printTime@minutesBuffer(5), 
  1654 ;;  size            2   12[COMRAM] unsigned int 
  1655 ;;  radix           2   14[COMRAM] int 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  value           1   24[COMRAM] unsigned char 
  1658 ;;  n               2   25[COMRAM] unsigned int 
  1659 ;;  sign            2   22[COMRAM] int 
  1660 ;;  digits          2   20[COMRAM] PTR const unsigned char 
  1661 ;;		 -> STR_1(17), 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  2   10[COMRAM] PTR unsigned char 
  1664 ;; Registers used:
  1665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1671 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1674 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1675 ;;Total ram usage:       17 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    1
  1678 ;; This function calls:
  1679 ;;		___awdiv
  1680 ;;		___awmod
  1681 ;;		_abs
  1682 ;;		_cprog_strrev
  1683 ;; This function is called by:
  1684 ;;		_printTime
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text11
  1689  00128E                     __ptext11:
  1690                           	opt callstack 0
  1691  00128E                     _cprog_itos:
  1692                           	opt callstack 28
  1693                           
  1694                           ;incstack = 0
  1695                           ;cprog_itos@value stored from wreg
  1696  00128E  6E19               	movwf	cprog_itos@value^0,c
  1697  001290                     
  1698                           ;main.c: 271: char *cprog_itos(unsigned char value, char *buf, size_t size, int radix);m
      +                          ain.c: 272: {;main.c: 273:     const char *digits = "0123456789ABCDEF";
  1699  001290  0E01               	movlw	low STR_1
  1700  001292  6E15               	movwf	cprog_itos@digits^0,c
  1701  001294  0E10               	movlw	high STR_1
  1702  001296  6E16               	movwf	(cprog_itos@digits+1)^0,c
  1703                           
  1704                           ;main.c: 275:     int sign = value < 0;
  1705  001298  0E00               	movlw	0
  1706  00129A  6E18               	movwf	(cprog_itos@sign+1)^0,c
  1707  00129C  0E00               	movlw	0
  1708  00129E  6E17               	movwf	cprog_itos@sign^0,c
  1709                           
  1710                           ;main.c: 276:     size_t n = 0;
  1711  0012A0  0E00               	movlw	0
  1712  0012A2  6E1B               	movwf	(cprog_itos@n+1)^0,c
  1713  0012A4  0E00               	movlw	0
  1714  0012A6  6E1A               	movwf	cprog_itos@n^0,c
  1715  0012A8                     
  1716                           ;main.c: 278:     if (radix == 0) {
  1717  0012A8  500F               	movf	cprog_itos@radix^0,w,c
  1718  0012AA  1010               	iorwf	(cprog_itos@radix+1)^0,w,c
  1719  0012AC  A4D8               	btfss	status,2,c
  1720  0012AE  EF5B  F009         	goto	u1011
  1721  0012B2  EF5D  F009         	goto	u1010
  1722  0012B6                     u1011:
  1723  0012B6  EF61  F009         	goto	l1502
  1724  0012BA                     u1010:
  1725  0012BA                     
  1726                           ;main.c: 279:         radix = 10;
  1727  0012BA  0E00               	movlw	0
  1728  0012BC  6E10               	movwf	(cprog_itos@radix+1)^0,c
  1729  0012BE  0E0A               	movlw	10
  1730  0012C0  6E0F               	movwf	cprog_itos@radix^0,c
  1731  0012C2                     l1502:
  1732                           
  1733                           ;main.c: 283:         buf[n++] = digits[abs(value % radix)];
  1734  0012C2  C019  F001         	movff	cprog_itos@value,___awmod@dividend
  1735  0012C6  6A02               	clrf	(___awmod@dividend+1)^0,c
  1736  0012C8  C00F  F003         	movff	cprog_itos@radix,___awmod@divisor
  1737  0012CC  C010  F004         	movff	cprog_itos@radix+1,___awmod@divisor+1
  1738  0012D0  EC1F  F00B         	call	___awmod	;wreg free
  1739  0012D4  C001  F007         	movff	?___awmod,abs@a
  1740  0012D8  C002  F008         	movff	?___awmod+1,abs@a+1
  1741  0012DC  ECCB  F00D         	call	_abs	;wreg free
  1742  0012E0  C015  F011         	movff	cprog_itos@digits,??_cprog_itos
  1743  0012E4  C016  F012         	movff	cprog_itos@digits+1,??_cprog_itos+1
  1744  0012E8  5007               	movf	?_abs^0,w,c
  1745  0012EA  2611               	addwf	??_cprog_itos^0,f,c
  1746  0012EC  5008               	movf	(?_abs+1)^0,w,c
  1747  0012EE  2212               	addwfc	(??_cprog_itos+1)^0,f,c
  1748  0012F0  C011  FFF6         	movff	??_cprog_itos,tblptrl
  1749  0012F4  C012  FFF7         	movff	??_cprog_itos+1,tblptrh
  1750  0012F8                     	if	0	;tblptru may be non-zero
  1751  0012F8                     	endif
  1752  0012F8                     	if	0	;tblptru may be non-zero
  1753  0012F8                     	endif
  1754  0012F8  501A               	movf	cprog_itos@n^0,w,c
  1755  0012FA  240B               	addwf	cprog_itos@buf^0,w,c
  1756  0012FC  6ED9               	movwf	fsr2l,c
  1757  0012FE  501B               	movf	(cprog_itos@n+1)^0,w,c
  1758  001300  200C               	addwfc	(cprog_itos@buf+1)^0,w,c
  1759  001302  6EDA               	movwf	fsr2h,c
  1760  001304  0008               	tblrd		*
  1761  001306  CFF5 FFDF          	movff	tablat,indf2
  1762  00130A  4A1A               	infsnz	cprog_itos@n^0,f,c
  1763  00130C  2A1B               	incf	(cprog_itos@n+1)^0,f,c
  1764  00130E  0EFF               	movlw	255
  1765  001310  6E11               	movwf	??_cprog_itos^0,c
  1766  001312  0EFF               	movlw	255
  1767  001314  6E12               	movwf	(??_cprog_itos+1)^0,c
  1768  001316  C00D  F013         	movff	cprog_itos@size,??_cprog_itos+2
  1769  00131A  C00E  F014         	movff	cprog_itos@size+1,??_cprog_itos+3
  1770  00131E  5011               	movf	??_cprog_itos^0,w,c
  1771  001320  2613               	addwf	(??_cprog_itos+2)^0,f,c
  1772  001322  5012               	movf	(??_cprog_itos+1)^0,w,c
  1773  001324  2214               	addwfc	(??_cprog_itos+3)^0,f,c
  1774  001326  5013               	movf	(??_cprog_itos+2)^0,w,c
  1775  001328  5C1A               	subwf	cprog_itos@n^0,w,c
  1776  00132A  5014               	movf	(??_cprog_itos+3)^0,w,c
  1777  00132C  581B               	subwfb	(cprog_itos@n+1)^0,w,c
  1778  00132E  B0D8               	btfsc	status,0,c
  1779  001330  EF9C  F009         	goto	u1021
  1780  001334  EF9E  F009         	goto	u1020
  1781  001338                     u1021:
  1782  001338  EFB1  F009         	goto	l1510
  1783  00133C                     u1020:
  1784  00133C  C019  F001         	movff	cprog_itos@value,___awdiv@dividend
  1785  001340  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1786  001342  C00F  F003         	movff	cprog_itos@radix,___awdiv@divisor
  1787  001346  C010  F004         	movff	cprog_itos@radix+1,___awdiv@divisor+1
  1788  00134A  EC5C  F00A         	call	___awdiv	;wreg free
  1789  00134E  5001               	movf	?___awdiv^0,w,c
  1790  001350  6E19               	movwf	cprog_itos@value^0,c
  1791  001352  5019               	movf	cprog_itos@value^0,w,c
  1792  001354  A4D8               	btfss	status,2,c
  1793  001356  EFAF  F009         	goto	u1031
  1794  00135A  EFB1  F009         	goto	u1030
  1795  00135E                     u1031:
  1796  00135E  EF61  F009         	goto	l1502
  1797  001362                     u1030:
  1798  001362                     l1510:
  1799                           
  1800                           ;main.c: 286:     if (sign)
  1801  001362  5017               	movf	cprog_itos@sign^0,w,c
  1802  001364  1018               	iorwf	(cprog_itos@sign+1)^0,w,c
  1803  001366  B4D8               	btfsc	status,2,c
  1804  001368  EFB8  F009         	goto	u1041
  1805  00136C  EFBA  F009         	goto	u1040
  1806  001370                     u1041:
  1807  001370  EFC4  F009         	goto	l1516
  1808  001374                     u1040:
  1809  001374                     
  1810                           ;main.c: 287:         buf[n++] = '-';
  1811  001374  501A               	movf	cprog_itos@n^0,w,c
  1812  001376  240B               	addwf	cprog_itos@buf^0,w,c
  1813  001378  6ED9               	movwf	fsr2l,c
  1814  00137A  501B               	movf	(cprog_itos@n+1)^0,w,c
  1815  00137C  200C               	addwfc	(cprog_itos@buf+1)^0,w,c
  1816  00137E  6EDA               	movwf	fsr2h,c
  1817  001380  0E2D               	movlw	45
  1818  001382  6EDF               	movwf	indf2,c
  1819  001384  4A1A               	infsnz	cprog_itos@n^0,f,c
  1820  001386  2A1B               	incf	(cprog_itos@n+1)^0,f,c
  1821  001388                     l1516:
  1822                           
  1823                           ;main.c: 289:     buf[n] = '\0';
  1824  001388  501A               	movf	cprog_itos@n^0,w,c
  1825  00138A  240B               	addwf	cprog_itos@buf^0,w,c
  1826  00138C  6ED9               	movwf	fsr2l,c
  1827  00138E  501B               	movf	(cprog_itos@n+1)^0,w,c
  1828  001390  200C               	addwfc	(cprog_itos@buf+1)^0,w,c
  1829  001392  6EDA               	movwf	fsr2h,c
  1830  001394  0E00               	movlw	0
  1831  001396  6EDF               	movwf	indf2,c
  1832  001398                     
  1833                           ;main.c: 291:     return cprog_strrev(buf, n);;	Return value of _cprog_itos is never use
      +                          d
  1834  001398  C00B  F001         	movff	cprog_itos@buf,cprog_strrev@s
  1835  00139C  C00C  F002         	movff	cprog_itos@buf+1,cprog_strrev@s+1
  1836  0013A0  C01A  F003         	movff	cprog_itos@n,cprog_strrev@n
  1837  0013A4  C01B  F004         	movff	cprog_itos@n+1,cprog_strrev@n+1
  1838  0013A8  ECFC  F00B         	call	_cprog_strrev	;wreg free
  1839  0013AC  0012               	return		;funcret
  1840  0013AE                     __end_of_cprog_itos:
  1841                           	opt callstack 0
  1842                           
  1843 ;; *************** function _cprog_strrev *****************
  1844 ;; Defined at:
  1845 ;;		line 258 in file "main.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  s               2    0[COMRAM] PTR unsigned char 
  1848 ;;		 -> printTime@secondsBuffer(3), printTime@minutesBuffer(5), 
  1849 ;;  n               2    2[COMRAM] unsigned int 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  savev           1    4[COMRAM] unsigned char 
  1852 ;;  j               2    7[COMRAM] unsigned int 
  1853 ;;  i               2    5[COMRAM] unsigned int 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  2    0[COMRAM] PTR unsigned char 
  1856 ;; Registers used:
  1857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1863 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;Total ram usage:        9 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_cprog_itos
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text12
  1877  0017F8                     __ptext12:
  1878                           	opt callstack 0
  1879  0017F8                     _cprog_strrev:
  1880                           	opt callstack 28
  1881  0017F8                     
  1882                           ;main.c: 258: char *cprog_strrev(char *s, size_t n);main.c: 259: {;main.c: 260:     size
      +                          _t i, j;;main.c: 262:     for (i = 0, j = n - 1; i < j; i++, j--) {
  1883  0017F8  0E00               	movlw	0
  1884  0017FA  6E07               	movwf	(cprog_strrev@i+1)^0,c
  1885  0017FC  0E00               	movlw	0
  1886  0017FE  6E06               	movwf	cprog_strrev@i^0,c
  1887  001800  0EFF               	movlw	255
  1888  001802  2403               	addwf	cprog_strrev@n^0,w,c
  1889  001804  6E08               	movwf	cprog_strrev@j^0,c
  1890  001806  0EFF               	movlw	255
  1891  001808  2004               	addwfc	(cprog_strrev@n+1)^0,w,c
  1892  00180A  6E09               	movwf	(cprog_strrev@j+1)^0,c
  1893  00180C  EF2B  F00C         	goto	l1398
  1894  001810                     l1388:
  1895                           
  1896                           ;main.c: 263:         char savev = s[i];
  1897  001810  5006               	movf	cprog_strrev@i^0,w,c
  1898  001812  2401               	addwf	cprog_strrev@s^0,w,c
  1899  001814  6ED9               	movwf	fsr2l,c
  1900  001816  5007               	movf	(cprog_strrev@i+1)^0,w,c
  1901  001818  2002               	addwfc	(cprog_strrev@s+1)^0,w,c
  1902  00181A  6EDA               	movwf	fsr2h,c
  1903  00181C  50DF               	movf	indf2,w,c
  1904  00181E  6E05               	movwf	cprog_strrev@savev^0,c
  1905  001820                     
  1906                           ;main.c: 264:         s[i] = s[j];
  1907  001820  5008               	movf	cprog_strrev@j^0,w,c
  1908  001822  2401               	addwf	cprog_strrev@s^0,w,c
  1909  001824  6ED9               	movwf	fsr2l,c
  1910  001826  5009               	movf	(cprog_strrev@j+1)^0,w,c
  1911  001828  2002               	addwfc	(cprog_strrev@s+1)^0,w,c
  1912  00182A  6EDA               	movwf	fsr2h,c
  1913  00182C  5006               	movf	cprog_strrev@i^0,w,c
  1914  00182E  2401               	addwf	cprog_strrev@s^0,w,c
  1915  001830  6EE1               	movwf	fsr1l,c
  1916  001832  5007               	movf	(cprog_strrev@i+1)^0,w,c
  1917  001834  2002               	addwfc	(cprog_strrev@s+1)^0,w,c
  1918  001836  6EE2               	movwf	fsr1h,c
  1919  001838  CFDF FFE7          	movff	indf2,indf1
  1920  00183C                     
  1921                           ;main.c: 265:         s[j] = savev;
  1922  00183C  5008               	movf	cprog_strrev@j^0,w,c
  1923  00183E  2401               	addwf	cprog_strrev@s^0,w,c
  1924  001840  6ED9               	movwf	fsr2l,c
  1925  001842  5009               	movf	(cprog_strrev@j+1)^0,w,c
  1926  001844  2002               	addwfc	(cprog_strrev@s+1)^0,w,c
  1927  001846  6EDA               	movwf	fsr2h,c
  1928  001848  C005  FFDF         	movff	cprog_strrev@savev,indf2
  1929  00184C                     
  1930                           ;main.c: 266:     }
  1931  00184C  4A06               	infsnz	cprog_strrev@i^0,f,c
  1932  00184E  2A07               	incf	(cprog_strrev@i+1)^0,f,c
  1933  001850  0608               	decf	cprog_strrev@j^0,f,c
  1934  001852  A0D8               	btfss	status,0,c
  1935  001854  0609               	decf	(cprog_strrev@j+1)^0,f,c
  1936  001856                     l1398:
  1937  001856  5008               	movf	cprog_strrev@j^0,w,c
  1938  001858  5C06               	subwf	cprog_strrev@i^0,w,c
  1939  00185A  5009               	movf	(cprog_strrev@j+1)^0,w,c
  1940  00185C  5807               	subwfb	(cprog_strrev@i+1)^0,w,c
  1941  00185E  A0D8               	btfss	status,0,c
  1942  001860  EF34  F00C         	goto	u841
  1943  001864  EF36  F00C         	goto	u840
  1944  001868                     u841:
  1945  001868  EF08  F00C         	goto	l1388
  1946  00186C                     u840:
  1947  00186C                     
  1948                           ;main.c: 268:     return s;
  1949  00186C  C001  F001         	movff	cprog_strrev@s,?_cprog_strrev
  1950  001870  C002  F002         	movff	cprog_strrev@s+1,?_cprog_strrev+1
  1951  001874  0012               	return		;funcret
  1952  001876                     __end_of_cprog_strrev:
  1953                           	opt callstack 0
  1954                           
  1955 ;; *************** function _abs *****************
  1956 ;; Defined at:
  1957 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  a               2    6[COMRAM] int 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;		None
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  2    6[COMRAM] int 
  1964 ;; Registers used:
  1965 ;;		wreg, status,2, status,0
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1971 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;Total ram usage:        4 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_cprog_itos
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text13
  1985  001B96                     __ptext13:
  1986                           	opt callstack 0
  1987  001B96                     _abs:
  1988                           	opt callstack 28
  1989  001B96  BE08               	btfsc	(abs@a+1)^0,7,c
  1990  001B98  EFD8  F00D         	goto	u850
  1991  001B9C  5008               	movf	(abs@a+1)^0,w,c
  1992  001B9E  E106               	bnz	u851
  1993  001BA0  0407               	decf	abs@a^0,w,c
  1994  001BA2  B0D8               	btfsc	status,0,c
  1995  001BA4  EFD6  F00D         	goto	u851
  1996  001BA8  EFD8  F00D         	goto	u850
  1997  001BAC                     u851:
  1998  001BAC  EFE6  F00D         	goto	l881
  1999  001BB0                     u850:
  2000  001BB0  C007  F009         	movff	abs@a,??_abs
  2001  001BB4  C008  F00A         	movff	abs@a+1,??_abs+1
  2002  001BB8  1E09               	comf	??_abs^0,f,c
  2003  001BBA  1E0A               	comf	(??_abs+1)^0,f,c
  2004  001BBC  4A09               	infsnz	??_abs^0,f,c
  2005  001BBE  2A0A               	incf	(??_abs+1)^0,f,c
  2006  001BC0  C009  F007         	movff	??_abs,?_abs
  2007  001BC4  C00A  F008         	movff	??_abs+1,?_abs+1
  2008  001BC8  EFEA  F00D         	goto	l884
  2009  001BCC                     l881:
  2010  001BCC  C007  F007         	movff	abs@a,?_abs
  2011  001BD0  C008  F008         	movff	abs@a+1,?_abs+1
  2012  001BD4                     l884:
  2013  001BD4  0012               	return		;funcret
  2014  001BD6                     __end_of_abs:
  2015                           	opt callstack 0
  2016                           
  2017 ;; *************** function ___awmod *****************
  2018 ;; Defined at:
  2019 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  dividend        2    0[COMRAM] int 
  2022 ;;  divisor         2    2[COMRAM] int 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  sign            1    5[COMRAM] unsigned char 
  2025 ;;  counter         1    4[COMRAM] unsigned char 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  2    0[COMRAM] int 
  2028 ;; Registers used:
  2029 ;;		wreg, status,2, status,0
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2035 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;Total ram usage:        6 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_cprog_itos
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text14
  2049  00163E                     __ptext14:
  2050                           	opt callstack 0
  2051  00163E                     ___awmod:
  2052                           	opt callstack 28
  2053  00163E  0E00               	movlw	0
  2054  001640  6E06               	movwf	___awmod@sign^0,c
  2055  001642  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2056  001644  EF28  F00B         	goto	u920
  2057  001648  EF26  F00B         	goto	u921
  2058  00164C                     u921:
  2059  00164C  EF2E  F00B         	goto	l1460
  2060  001650                     u920:
  2061  001650  6C01               	negf	___awmod@dividend^0,c
  2062  001652  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2063  001654  B0D8               	btfsc	status,0,c
  2064  001656  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2065  001658  0E01               	movlw	1
  2066  00165A  6E06               	movwf	___awmod@sign^0,c
  2067  00165C                     l1460:
  2068  00165C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2069  00165E  EF35  F00B         	goto	u930
  2070  001662  EF33  F00B         	goto	u931
  2071  001666                     u931:
  2072  001666  EF39  F00B         	goto	l1464
  2073  00166A                     u930:
  2074  00166A  6C03               	negf	___awmod@divisor^0,c
  2075  00166C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2076  00166E  B0D8               	btfsc	status,0,c
  2077  001670  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2078  001672                     l1464:
  2079  001672  5003               	movf	___awmod@divisor^0,w,c
  2080  001674  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2081  001676  B4D8               	btfsc	status,2,c
  2082  001678  EF40  F00B         	goto	u941
  2083  00167C  EF42  F00B         	goto	u940
  2084  001680                     u941:
  2085  001680  EF66  F00B         	goto	l1480
  2086  001684                     u940:
  2087  001684  0E01               	movlw	1
  2088  001686  6E05               	movwf	___awmod@counter^0,c
  2089  001688  EF4A  F00B         	goto	l1470
  2090  00168C                     l1468:
  2091  00168C  90D8               	bcf	status,0,c
  2092  00168E  3603               	rlcf	___awmod@divisor^0,f,c
  2093  001690  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2094  001692  2A05               	incf	___awmod@counter^0,f,c
  2095  001694                     l1470:
  2096  001694  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2097  001696  EF4F  F00B         	goto	u951
  2098  00169A  EF51  F00B         	goto	u950
  2099  00169E                     u951:
  2100  00169E  EF46  F00B         	goto	l1468
  2101  0016A2                     u950:
  2102  0016A2                     l1472:
  2103  0016A2  5003               	movf	___awmod@divisor^0,w,c
  2104  0016A4  5C01               	subwf	___awmod@dividend^0,w,c
  2105  0016A6  5004               	movf	(___awmod@divisor+1)^0,w,c
  2106  0016A8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2107  0016AA  A0D8               	btfss	status,0,c
  2108  0016AC  EF5A  F00B         	goto	u961
  2109  0016B0  EF5C  F00B         	goto	u960
  2110  0016B4                     u961:
  2111  0016B4  EF60  F00B         	goto	l1476
  2112  0016B8                     u960:
  2113  0016B8  5003               	movf	___awmod@divisor^0,w,c
  2114  0016BA  5E01               	subwf	___awmod@dividend^0,f,c
  2115  0016BC  5004               	movf	(___awmod@divisor+1)^0,w,c
  2116  0016BE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2117  0016C0                     l1476:
  2118  0016C0  90D8               	bcf	status,0,c
  2119  0016C2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2120  0016C4  3203               	rrcf	___awmod@divisor^0,f,c
  2121  0016C6  2E05               	decfsz	___awmod@counter^0,f,c
  2122  0016C8  EF51  F00B         	goto	l1472
  2123  0016CC                     l1480:
  2124  0016CC  5006               	movf	___awmod@sign^0,w,c
  2125  0016CE  B4D8               	btfsc	status,2,c
  2126  0016D0  EF6C  F00B         	goto	u971
  2127  0016D4  EF6E  F00B         	goto	u970
  2128  0016D8                     u971:
  2129  0016D8  EF72  F00B         	goto	l1484
  2130  0016DC                     u970:
  2131  0016DC  6C01               	negf	___awmod@dividend^0,c
  2132  0016DE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2133  0016E0  B0D8               	btfsc	status,0,c
  2134  0016E2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2135  0016E4                     l1484:
  2136  0016E4  C001  F001         	movff	___awmod@dividend,?___awmod
  2137  0016E8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2138  0016EC  0012               	return		;funcret
  2139  0016EE                     __end_of___awmod:
  2140                           	opt callstack 0
  2141                           
  2142 ;; *************** function ___awdiv *****************
  2143 ;; Defined at:
  2144 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  dividend        2    0[COMRAM] int 
  2147 ;;  divisor         2    2[COMRAM] int 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  quotient        2    6[COMRAM] int 
  2150 ;;  sign            1    5[COMRAM] unsigned char 
  2151 ;;  counter         1    4[COMRAM] unsigned char 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  2    0[COMRAM] int 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;Total ram usage:        8 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_cprog_itos
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text15
  2175  0014B8                     __ptext15:
  2176                           	opt callstack 0
  2177  0014B8                     ___awdiv:
  2178                           	opt callstack 28
  2179  0014B8  0E00               	movlw	0
  2180  0014BA  6E06               	movwf	___awdiv@sign^0,c
  2181  0014BC  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2182  0014BE  EF65  F00A         	goto	u860
  2183  0014C2  EF63  F00A         	goto	u861
  2184  0014C6                     u861:
  2185  0014C6  EF6B  F00A         	goto	l1416
  2186  0014CA                     u860:
  2187  0014CA  6C03               	negf	___awdiv@divisor^0,c
  2188  0014CC  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2189  0014CE  B0D8               	btfsc	status,0,c
  2190  0014D0  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2191  0014D2  0E01               	movlw	1
  2192  0014D4  6E06               	movwf	___awdiv@sign^0,c
  2193  0014D6                     l1416:
  2194  0014D6  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2195  0014D8  EF72  F00A         	goto	u870
  2196  0014DC  EF70  F00A         	goto	u871
  2197  0014E0                     u871:
  2198  0014E0  EF78  F00A         	goto	l1422
  2199  0014E4                     u870:
  2200  0014E4  6C01               	negf	___awdiv@dividend^0,c
  2201  0014E6  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2202  0014E8  B0D8               	btfsc	status,0,c
  2203  0014EA  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2204  0014EC  0E01               	movlw	1
  2205  0014EE  1A06               	xorwf	___awdiv@sign^0,f,c
  2206  0014F0                     l1422:
  2207  0014F0  0E00               	movlw	0
  2208  0014F2  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2209  0014F4  0E00               	movlw	0
  2210  0014F6  6E07               	movwf	___awdiv@quotient^0,c
  2211  0014F8  5003               	movf	___awdiv@divisor^0,w,c
  2212  0014FA  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2213  0014FC  B4D8               	btfsc	status,2,c
  2214  0014FE  EF83  F00A         	goto	u881
  2215  001502  EF85  F00A         	goto	u880
  2216  001506                     u881:
  2217  001506  EFAD  F00A         	goto	l1444
  2218  00150A                     u880:
  2219  00150A  0E01               	movlw	1
  2220  00150C  6E05               	movwf	___awdiv@counter^0,c
  2221  00150E  EF8D  F00A         	goto	l1430
  2222  001512                     l1428:
  2223  001512  90D8               	bcf	status,0,c
  2224  001514  3603               	rlcf	___awdiv@divisor^0,f,c
  2225  001516  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2226  001518  2A05               	incf	___awdiv@counter^0,f,c
  2227  00151A                     l1430:
  2228  00151A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2229  00151C  EF92  F00A         	goto	u891
  2230  001520  EF94  F00A         	goto	u890
  2231  001524                     u891:
  2232  001524  EF89  F00A         	goto	l1428
  2233  001528                     u890:
  2234  001528                     l1432:
  2235  001528  90D8               	bcf	status,0,c
  2236  00152A  3607               	rlcf	___awdiv@quotient^0,f,c
  2237  00152C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2238  00152E  5003               	movf	___awdiv@divisor^0,w,c
  2239  001530  5C01               	subwf	___awdiv@dividend^0,w,c
  2240  001532  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2241  001534  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2242  001536  A0D8               	btfss	status,0,c
  2243  001538  EFA0  F00A         	goto	u901
  2244  00153C  EFA2  F00A         	goto	u900
  2245  001540                     u901:
  2246  001540  EFA7  F00A         	goto	l1440
  2247  001544                     u900:
  2248  001544  5003               	movf	___awdiv@divisor^0,w,c
  2249  001546  5E01               	subwf	___awdiv@dividend^0,f,c
  2250  001548  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2251  00154A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2252  00154C  8007               	bsf	___awdiv@quotient^0,0,c
  2253  00154E                     l1440:
  2254  00154E  90D8               	bcf	status,0,c
  2255  001550  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2256  001552  3203               	rrcf	___awdiv@divisor^0,f,c
  2257  001554  2E05               	decfsz	___awdiv@counter^0,f,c
  2258  001556  EF94  F00A         	goto	l1432
  2259  00155A                     l1444:
  2260  00155A  5006               	movf	___awdiv@sign^0,w,c
  2261  00155C  B4D8               	btfsc	status,2,c
  2262  00155E  EFB3  F00A         	goto	u911
  2263  001562  EFB5  F00A         	goto	u910
  2264  001566                     u911:
  2265  001566  EFB9  F00A         	goto	l1448
  2266  00156A                     u910:
  2267  00156A  6C07               	negf	___awdiv@quotient^0,c
  2268  00156C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2269  00156E  B0D8               	btfsc	status,0,c
  2270  001570  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2271  001572                     l1448:
  2272  001572  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2273  001576  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2274  00157A  0012               	return		;funcret
  2275  00157C                     __end_of___awdiv:
  2276                           	opt callstack 0
  2277                           
  2278 ;; *************** function _printPowerSettings *****************
  2279 ;; Defined at:
  2280 ;;		line 347 in file "main.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;		None
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;Total ram usage:        2 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; Hardware stack levels required when called:    3
  2301 ;; This function calls:
  2302 ;;		_lcd_str
  2303 ;; This function is called by:
  2304 ;;		_heating
  2305 ;;		_main
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text16
  2310  0013AE                     __ptext16:
  2311                           	opt callstack 0
  2312  0013AE                     _printPowerSettings:
  2313                           	opt callstack 27
  2314  0013AE                     
  2315                           ;main.c: 349:     switch(power) {
  2316  0013AE  EF3D  F00A         	goto	l1648
  2317  0013B2                     l1622:
  2318                           
  2319                           ;main.c: 351:             if (isHeatingOn == 1) {
  2320  0013B2  0424               	decf	_isHeatingOn^0,w,c
  2321  0013B4  1025               	iorwf	(_isHeatingOn+1)^0,w,c
  2322  0013B6  A4D8               	btfss	status,2,c
  2323  0013B8  EFE0  F009         	goto	u1341
  2324  0013BC  EFE2  F009         	goto	u1340
  2325  0013C0                     u1341:
  2326  0013C0  EFEA  F009         	goto	l1626
  2327  0013C4                     u1340:
  2328  0013C4                     
  2329                           ;main.c: 352:                 lcd_str("800W grzanie");
  2330  0013C4  0E2C               	movlw	low STR_2
  2331  0013C6  6E03               	movwf	lcd_str@str^0,c
  2332  0013C8  0E10               	movlw	high STR_2
  2333  0013CA  6E04               	movwf	(lcd_str@str+1)^0,c
  2334  0013CC  EC3B  F00C         	call	_lcd_str	;wreg free
  2335                           
  2336                           ;main.c: 353:             } else {
  2337  0013D0  EF5B  F00A         	goto	l136
  2338  0013D4                     l1626:
  2339                           
  2340                           ;main.c: 354:                 lcd_str("800W stop");
  2341  0013D4  0E5A               	movlw	low STR_3
  2342  0013D6  6E03               	movwf	lcd_str@str^0,c
  2343  0013D8  0E10               	movlw	high STR_3
  2344  0013DA  6E04               	movwf	(lcd_str@str+1)^0,c
  2345  0013DC  EC3B  F00C         	call	_lcd_str	;wreg free
  2346  0013E0  EF5B  F00A         	goto	l136
  2347  0013E4                     l1628:
  2348                           
  2349                           ;main.c: 359:             if (isHeatingOn == 1) {
  2350  0013E4  0424               	decf	_isHeatingOn^0,w,c
  2351  0013E6  1025               	iorwf	(_isHeatingOn+1)^0,w,c
  2352  0013E8  A4D8               	btfss	status,2,c
  2353  0013EA  EFF9  F009         	goto	u1351
  2354  0013EE  EFFB  F009         	goto	u1350
  2355  0013F2                     u1351:
  2356  0013F2  EF03  F00A         	goto	l1632
  2357  0013F6                     u1350:
  2358  0013F6                     
  2359                           ;main.c: 360:                 lcd_str("600W grzanie");
  2360  0013F6  0E1F               	movlw	low STR_4
  2361  0013F8  6E03               	movwf	lcd_str@str^0,c
  2362  0013FA  0E10               	movlw	high STR_4
  2363  0013FC  6E04               	movwf	(lcd_str@str+1)^0,c
  2364  0013FE  EC3B  F00C         	call	_lcd_str	;wreg free
  2365                           
  2366                           ;main.c: 361:             } else {
  2367  001402  EF5B  F00A         	goto	l136
  2368  001406                     l1632:
  2369                           
  2370                           ;main.c: 362:                 lcd_str("600W stop");
  2371  001406  0E50               	movlw	low STR_5
  2372  001408  6E03               	movwf	lcd_str@str^0,c
  2373  00140A  0E10               	movlw	high STR_5
  2374  00140C  6E04               	movwf	(lcd_str@str+1)^0,c
  2375  00140E  EC3B  F00C         	call	_lcd_str	;wreg free
  2376  001412  EF5B  F00A         	goto	l136
  2377  001416                     l1634:
  2378                           
  2379                           ;main.c: 367:             if (isHeatingOn == 1) {
  2380  001416  0424               	decf	_isHeatingOn^0,w,c
  2381  001418  1025               	iorwf	(_isHeatingOn+1)^0,w,c
  2382  00141A  A4D8               	btfss	status,2,c
  2383  00141C  EF12  F00A         	goto	u1361
  2384  001420  EF14  F00A         	goto	u1360
  2385  001424                     u1361:
  2386  001424  EF1C  F00A         	goto	l1638
  2387  001428                     u1360:
  2388  001428                     
  2389                           ;main.c: 368:                 lcd_str("350W grzanie");
  2390  001428  0E39               	movlw	low STR_6
  2391  00142A  6E03               	movwf	lcd_str@str^0,c
  2392  00142C  0E10               	movlw	high STR_6
  2393  00142E  6E04               	movwf	(lcd_str@str+1)^0,c
  2394  001430  EC3B  F00C         	call	_lcd_str	;wreg free
  2395                           
  2396                           ;main.c: 369:             } else {
  2397  001434  EF5B  F00A         	goto	l136
  2398  001438                     l1638:
  2399                           
  2400                           ;main.c: 370:                 lcd_str("350W stop");
  2401  001438  0E64               	movlw	low STR_7
  2402  00143A  6E03               	movwf	lcd_str@str^0,c
  2403  00143C  0E10               	movlw	high STR_7
  2404  00143E  6E04               	movwf	(lcd_str@str+1)^0,c
  2405  001440  EC3B  F00C         	call	_lcd_str	;wreg free
  2406  001444  EF5B  F00A         	goto	l136
  2407  001448                     l1640:
  2408                           
  2409                           ;main.c: 375:             if (isHeatingOn == 1) {
  2410  001448  0424               	decf	_isHeatingOn^0,w,c
  2411  00144A  1025               	iorwf	(_isHeatingOn+1)^0,w,c
  2412  00144C  A4D8               	btfss	status,2,c
  2413  00144E  EF2B  F00A         	goto	u1371
  2414  001452  EF2D  F00A         	goto	u1370
  2415  001456                     u1371:
  2416  001456  EF35  F00A         	goto	l1644
  2417  00145A                     u1370:
  2418  00145A                     
  2419                           ;main.c: 376:                 lcd_str("200W grzanie");
  2420  00145A  0E12               	movlw	low STR_8
  2421  00145C  6E03               	movwf	lcd_str@str^0,c
  2422  00145E  0E10               	movlw	high STR_8
  2423  001460  6E04               	movwf	(lcd_str@str+1)^0,c
  2424  001462  EC3B  F00C         	call	_lcd_str	;wreg free
  2425                           
  2426                           ;main.c: 377:             } else {
  2427  001466  EF5B  F00A         	goto	l136
  2428  00146A                     l1644:
  2429                           
  2430                           ;main.c: 378:                 lcd_str("200W stop");
  2431  00146A  0E46               	movlw	low STR_9
  2432  00146C  6E03               	movwf	lcd_str@str^0,c
  2433  00146E  0E10               	movlw	high STR_9
  2434  001470  6E04               	movwf	(lcd_str@str+1)^0,c
  2435  001472  EC3B  F00C         	call	_lcd_str	;wreg free
  2436  001476  EF5B  F00A         	goto	l136
  2437  00147A                     l1648:
  2438  00147A  C026  F008         	movff	_power,??_printPowerSettings
  2439  00147E  C027  F009         	movff	_power+1,??_printPowerSettings+1
  2440                           
  2441                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2442                           ; Switch size 1, requested type "simple"
  2443                           ; Number of cases is 1, Range of values is 0 to 0
  2444                           ; switch strategies available:
  2445                           ; Name         Instructions Cycles
  2446                           ; simple_byte            4     3 (average)
  2447                           ;	Chosen strategy is simple_byte
  2448  001482  5009               	movf	(??_printPowerSettings+1)^0,w,c
  2449  001484  0A00               	xorlw	0	; case 0
  2450  001486  B4D8               	btfsc	status,2,c
  2451  001488  EF48  F00A         	goto	l1758
  2452  00148C  EF5B  F00A         	goto	l136
  2453  001490                     l1758:
  2454                           
  2455                           ; Switch size 1, requested type "simple"
  2456                           ; Number of cases is 4, Range of values is 0 to 3
  2457                           ; switch strategies available:
  2458                           ; Name         Instructions Cycles
  2459                           ; simple_byte           13     7 (average)
  2460                           ;	Chosen strategy is simple_byte
  2461  001490  5008               	movf	??_printPowerSettings^0,w,c
  2462  001492  0A00               	xorlw	0	; case 0
  2463  001494  B4D8               	btfsc	status,2,c
  2464  001496  EFD9  F009         	goto	l1622
  2465  00149A  0A01               	xorlw	1	; case 1
  2466  00149C  B4D8               	btfsc	status,2,c
  2467  00149E  EFF2  F009         	goto	l1628
  2468  0014A2  0A03               	xorlw	3	; case 2
  2469  0014A4  B4D8               	btfsc	status,2,c
  2470  0014A6  EF0B  F00A         	goto	l1634
  2471  0014AA  0A01               	xorlw	1	; case 3
  2472  0014AC  B4D8               	btfsc	status,2,c
  2473  0014AE  EF24  F00A         	goto	l1640
  2474  0014B2  EF5B  F00A         	goto	l136
  2475  0014B6                     l136:
  2476  0014B6  0012               	return		;funcret
  2477  0014B8                     __end_of_printPowerSettings:
  2478                           	opt callstack 0
  2479                           
  2480 ;; *************** function _lcd_str *****************
  2481 ;; Defined at:
  2482 ;;		line 102 in file "main.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  str             2    2[COMRAM] PTR const unsigned char 
  2485 ;;		 -> STR_11(5), STR_10(6), printTime@secondsBuffer(3), printTime@minutesBuffer(5), 
  2486 ;;		 -> STR_9(10), STR_8(13), STR_7(10), STR_6(13), 
  2487 ;;		 -> STR_5(10), STR_4(13), STR_3(10), STR_2(13), 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  i               1    6[COMRAM] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;Total ram usage:        5 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:    2
  2506 ;; This function calls:
  2507 ;;		_lcd_dat
  2508 ;; This function is called by:
  2509 ;;		_printPowerSettings
  2510 ;;		_printTime
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text17
  2515  001876                     __ptext17:
  2516                           	opt callstack 0
  2517  001876                     _lcd_str:
  2518                           	opt callstack 27
  2519  001876                     
  2520                           ;main.c: 102: void lcd_str(const char* str);main.c: 103: {;main.c: 104:  unsigned char i
      +                          =0;
  2521  001876  0E00               	movlw	0
  2522  001878  6E07               	movwf	lcd_str@i^0,c
  2523                           
  2524                           ;main.c: 106:  while(str[i] != 0 )
  2525  00187A  EF59  F00C         	goto	l1494
  2526  00187E                     l1490:
  2527                           
  2528                           ;main.c: 107:  {;main.c: 108:    lcd_dat(str[i]);
  2529  00187E  5007               	movf	lcd_str@i^0,w,c
  2530  001880  2403               	addwf	lcd_str@str^0,w,c
  2531  001882  6E05               	movwf	??_lcd_str^0,c
  2532  001884  0E00               	movlw	0
  2533  001886  2004               	addwfc	(lcd_str@str+1)^0,w,c
  2534  001888  6E06               	movwf	(??_lcd_str+1)^0,c
  2535  00188A  C005  FFF6         	movff	??_lcd_str,tblptrl
  2536  00188E  C006  FFF7         	movff	??_lcd_str+1,tblptrh
  2537  001892  0E00               	movlw	low (__smallconst shr (0+16))
  2538  001894  6EF8               	movwf	tblptru,c
  2539  001896  0E0F               	movlw	(high __ramtop+-1)
  2540  001898  64F7               	cpfsgt	tblptrh,c
  2541  00189A  D003               	bra	u987
  2542  00189C  0008               	tblrd		*
  2543  00189E  50F5               	movf	tablat,w,c
  2544  0018A0  D005               	bra	u980
  2545  0018A2                     u987:
  2546  0018A2  CFF6 FFE1          	movff	tblptrl,fsr1l
  2547  0018A6  CFF7 FFE2          	movff	tblptrh,fsr1h
  2548  0018AA  50E7               	movf	indf1,w,c
  2549  0018AC                     u980:
  2550  0018AC  EC0B  F00E         	call	_lcd_dat
  2551  0018B0                     
  2552                           ;main.c: 109:    i++;
  2553  0018B0  2A07               	incf	lcd_str@i^0,f,c
  2554  0018B2                     l1494:
  2555                           
  2556                           ;main.c: 106:  while(str[i] != 0 )
  2557  0018B2  5007               	movf	lcd_str@i^0,w,c
  2558  0018B4  2403               	addwf	lcd_str@str^0,w,c
  2559  0018B6  6E05               	movwf	??_lcd_str^0,c
  2560  0018B8  0E00               	movlw	0
  2561  0018BA  2004               	addwfc	(lcd_str@str+1)^0,w,c
  2562  0018BC  6E06               	movwf	(??_lcd_str+1)^0,c
  2563  0018BE  C005  FFF6         	movff	??_lcd_str,tblptrl
  2564  0018C2  C006  FFF7         	movff	??_lcd_str+1,tblptrh
  2565  0018C6  0E00               	movlw	low (__smallconst shr (0+16))
  2566  0018C8  6EF8               	movwf	tblptru,c
  2567  0018CA  0E0F               	movlw	(high __ramtop+-1)
  2568  0018CC  64F7               	cpfsgt	tblptrh,c
  2569  0018CE  D003               	bra	u997
  2570  0018D0  0008               	tblrd		*
  2571  0018D2  50F5               	movf	tablat,w,c
  2572  0018D4  D005               	bra	u990
  2573  0018D6                     u997:
  2574  0018D6  CFF6 FFE1          	movff	tblptrl,fsr1l
  2575  0018DA  CFF7 FFE2          	movff	tblptrh,fsr1h
  2576  0018DE  50E7               	movf	indf1,w,c
  2577  0018E0                     u990:
  2578  0018E0  0900               	iorlw	0
  2579  0018E2  A4D8               	btfss	status,2,c
  2580  0018E4  EF76  F00C         	goto	u1001
  2581  0018E8  EF78  F00C         	goto	u1000
  2582  0018EC                     u1001:
  2583  0018EC  EF3F  F00C         	goto	l1490
  2584  0018F0                     u1000:
  2585  0018F0  0012               	return		;funcret
  2586  0018F2                     __end_of_lcd_str:
  2587                           	opt callstack 0
  2588                           
  2589 ;; *************** function _lcd_dat *****************
  2590 ;; Defined at:
  2591 ;;		line 91 in file "main.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  val             1    wreg     unsigned char 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  val             1    1[COMRAM] unsigned char 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;Total ram usage:        1 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    1
  2612 ;; This function calls:
  2613 ;;		_lcd_wr
  2614 ;; This function is called by:
  2615 ;;		_lcd_str
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text18
  2620  001C16                     __ptext18:
  2621                           	opt callstack 0
  2622  001C16                     _lcd_dat:
  2623                           	opt callstack 27
  2624                           
  2625                           ;incstack = 0
  2626                           ;lcd_dat@val stored from wreg
  2627  001C16  6E02               	movwf	lcd_dat@val^0,c
  2628  001C18                     
  2629                           ;main.c: 91: void lcd_dat(unsigned char val);main.c: 92: {;main.c: 93:  PORTEbits.RE1=1;
  2630  001C18  8284               	bsf	132,1,c	;volatile
  2631  001C1A                     
  2632                           ;main.c: 94:         lcd_wr(val);
  2633  001C1A  5002               	movf	lcd_dat@val^0,w,c
  2634  001C1C  EC14  F00E         	call	_lcd_wr
  2635  001C20                     
  2636                           ;main.c: 95:         PORTEbits.RE2=1;
  2637  001C20  8484               	bsf	132,2,c	;volatile
  2638  001C22                     
  2639                           ;main.c: 97:         PORTEbits.RE1=0;
  2640  001C22  9284               	bcf	132,1,c	;volatile
  2641  001C24                     
  2642                           ;main.c: 99:  PORTEbits.RE1=1;
  2643  001C24  8284               	bsf	132,1,c	;volatile
  2644  001C26  0012               	return		;funcret
  2645  001C28                     __end_of_lcd_dat:
  2646                           	opt callstack 0
  2647                           
  2648 ;; *************** function _lcd_wr *****************
  2649 ;; Defined at:
  2650 ;;		line 85 in file "main.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  val             1    wreg     unsigned char 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  val             1    0[COMRAM] unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;Total ram usage:        1 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; This function calls:
  2671 ;;		Nothing
  2672 ;; This function is called by:
  2673 ;;		_lcd_dat
  2674 ;;		_lcd_cmd
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text19
  2679  001C28                     __ptext19:
  2680                           	opt callstack 0
  2681  001C28                     _lcd_wr:
  2682                           	opt callstack 27
  2683                           
  2684                           ;incstack = 0
  2685                           ;lcd_wr@val stored from wreg
  2686  001C28  6E01               	movwf	lcd_wr@val^0,c
  2687  001C2A                     
  2688                           ;main.c: 85: void lcd_wr(unsigned char val);main.c: 86: {;main.c: 87:   PORTD=val;
  2689  001C2A  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  2690  001C2E  0012               	return		;funcret
  2691  001C30                     __end_of_lcd_wr:
  2692                           	opt callstack 0
  2693                           
  2694 ;; *************** function _cook *****************
  2695 ;; Defined at:
  2696 ;;		line 132 in file "main.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  ms              2    0[COMRAM] unsigned int 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  i               2    2[COMRAM] unsigned int 
  2701 ;;  j               1    4[COMRAM] unsigned char 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;Total ram usage:        5 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_heating
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text20
  2725  00107A                     __ptext20:
  2726                           	opt callstack 0
  2727  00107A                     _cook:
  2728                           	opt callstack 29
  2729  00107A                     
  2730                           ;main.c: 132: void cook(unsigned int ms);main.c: 133: {;main.c: 134:     unsigned int i;
      +                          ;main.c: 135:     unsigned char j;;main.c: 137:  for (i =0; i< ms; i++)
  2731  00107A  0E00               	movlw	0
  2732  00107C  6E04               	movwf	(cook@i+1)^0,c
  2733  00107E  0E00               	movlw	0
  2734  001080  6E03               	movwf	cook@i^0,c
  2735  001082  EF3B  F009         	goto	l1618
  2736  001086                     l1540:
  2737                           
  2738                           ;main.c: 138:  {;main.c: 140:   for (j =0 ; j < 200; j++)
  2739  001086  0E00               	movlw	0
  2740  001088  6E05               	movwf	cook@j^0,c
  2741  00108A                     l61:
  2742                           
  2743                           ;main.c: 141:    {;main.c: 142:       __nop();
  2744  00108A  F000               	nop	
  2745                           
  2746                           ;main.c: 144:         if(PORTBbits.RB2 == 0) {
  2747  00108C  B481               	btfsc	129,2,c	;volatile
  2748  00108E  EF4B  F008         	goto	u1071
  2749  001092  EF4D  F008         	goto	u1070
  2750  001096                     u1071:
  2751  001096  EF5A  F008         	goto	l1548
  2752  00109A                     u1070:
  2753  00109A                     
  2754                           ;main.c: 145:             isHeatingOn = (isHeatingOn == 1 ? 0 : 1);
  2755  00109A  0424               	decf	_isHeatingOn^0,w,c
  2756  00109C  1025               	iorwf	(_isHeatingOn+1)^0,w,c
  2757  00109E  A4D8               	btfss	status,2,c
  2758  0010A0  EF54  F008         	goto	u1081
  2759  0010A4  EF57  F008         	goto	u1080
  2760  0010A8                     u1081:
  2761  0010A8  0E01               	movlw	1
  2762  0010AA  EF58  F008         	goto	u1090
  2763  0010AE                     u1080:
  2764  0010AE  0E00               	movlw	0
  2765  0010B0                     u1090:
  2766  0010B0  6E24               	movwf	_isHeatingOn^0,c
  2767  0010B2  6A25               	clrf	(_isHeatingOn+1)^0,c
  2768  0010B4                     l1548:
  2769                           
  2770                           ;main.c: 149:     if((PORTBbits.RB5 == 0))
  2771  0010B4  BA81               	btfsc	129,5,c	;volatile
  2772  0010B6  EF5F  F008         	goto	u1101
  2773  0010BA  EF61  F008         	goto	u1100
  2774  0010BE                     u1101:
  2775  0010BE  EF74  F008         	goto	l1556
  2776  0010C2                     u1100:
  2777  0010C2                     
  2778                           ;main.c: 150:     {;main.c: 153:         if (power < 2) {
  2779  0010C2  5027               	movf	(_power+1)^0,w,c
  2780  0010C4  E107               	bnz	u1111
  2781  0010C6  0E02               	movlw	2
  2782  0010C8  5C26               	subwf	_power^0,w,c
  2783  0010CA  B0D8               	btfsc	status,0,c
  2784  0010CC  EF6A  F008         	goto	u1111
  2785  0010D0  EF6C  F008         	goto	u1110
  2786  0010D4                     u1111:
  2787  0010D4  EF70  F008         	goto	l1554
  2788  0010D8                     u1110:
  2789  0010D8                     
  2790                           ;main.c: 154:             power++;
  2791  0010D8  4A26               	infsnz	_power^0,f,c
  2792  0010DA  2A27               	incf	(_power+1)^0,f,c
  2793                           
  2794                           ;main.c: 155:         } else {
  2795  0010DC  EF74  F008         	goto	l1556
  2796  0010E0                     l1554:
  2797                           
  2798                           ;main.c: 156:             power = 0;
  2799  0010E0  0E00               	movlw	0
  2800  0010E2  6E27               	movwf	(_power+1)^0,c
  2801  0010E4  0E00               	movlw	0
  2802  0010E6  6E26               	movwf	_power^0,c
  2803  0010E8                     l1556:
  2804                           
  2805                           ;main.c: 161:       __nop();
  2806  0010E8  F000               	nop	
  2807  0010EA                     
  2808                           ;main.c: 163:         if((PORTBbits.RB2 == 0))
  2809  0010EA  B481               	btfsc	129,2,c	;volatile
  2810  0010EC  EF7A  F008         	goto	u1121
  2811  0010F0  EF7C  F008         	goto	u1120
  2812  0010F4                     u1121:
  2813  0010F4  EF89  F008         	goto	l1562
  2814  0010F8                     u1120:
  2815  0010F8                     
  2816                           ;main.c: 164:         {;main.c: 165:             isHeatingOn = isHeatingOn == 1 ? 0 : 1;
  2817  0010F8  0424               	decf	_isHeatingOn^0,w,c
  2818  0010FA  1025               	iorwf	(_isHeatingOn+1)^0,w,c
  2819  0010FC  A4D8               	btfss	status,2,c
  2820  0010FE  EF83  F008         	goto	u1131
  2821  001102  EF86  F008         	goto	u1130
  2822  001106                     u1131:
  2823  001106  0E01               	movlw	1
  2824  001108  EF87  F008         	goto	u1140
  2825  00110C                     u1130:
  2826  00110C  0E00               	movlw	0
  2827  00110E                     u1140:
  2828  00110E  6E24               	movwf	_isHeatingOn^0,c
  2829  001110  6A25               	clrf	(_isHeatingOn+1)^0,c
  2830  001112                     l1562:
  2831                           
  2832                           ;main.c: 169:     if((PORTBbits.RB5 == 0))
  2833  001112  BA81               	btfsc	129,5,c	;volatile
  2834  001114  EF8E  F008         	goto	u1151
  2835  001118  EF90  F008         	goto	u1150
  2836  00111C                     u1151:
  2837  00111C  EFA3  F008         	goto	l1570
  2838  001120                     u1150:
  2839  001120                     
  2840                           ;main.c: 170:     {;main.c: 173:         if (power < 2) {
  2841  001120  5027               	movf	(_power+1)^0,w,c
  2842  001122  E107               	bnz	u1161
  2843  001124  0E02               	movlw	2
  2844  001126  5C26               	subwf	_power^0,w,c
  2845  001128  B0D8               	btfsc	status,0,c
  2846  00112A  EF99  F008         	goto	u1161
  2847  00112E  EF9B  F008         	goto	u1160
  2848  001132                     u1161:
  2849  001132  EF9F  F008         	goto	l1568
  2850  001136                     u1160:
  2851  001136                     
  2852                           ;main.c: 174:             power++;
  2853  001136  4A26               	infsnz	_power^0,f,c
  2854  001138  2A27               	incf	(_power+1)^0,f,c
  2855                           
  2856                           ;main.c: 175:         } else {
  2857  00113A  EFA3  F008         	goto	l1570
  2858  00113E                     l1568:
  2859                           
  2860                           ;main.c: 176:             power = 0;
  2861  00113E  0E00               	movlw	0
  2862  001140  6E27               	movwf	(_power+1)^0,c
  2863  001142  0E00               	movlw	0
  2864  001144  6E26               	movwf	_power^0,c
  2865  001146                     l1570:
  2866                           
  2867                           ;main.c: 181:       __nop();
  2868  001146  F000               	nop	
  2869  001148                     
  2870                           ;main.c: 183:         if((PORTBbits.RB2 == 0))
  2871  001148  B481               	btfsc	129,2,c	;volatile
  2872  00114A  EFA9  F008         	goto	u1171
  2873  00114E  EFAB  F008         	goto	u1170
  2874  001152                     u1171:
  2875  001152  EFB8  F008         	goto	l1576
  2876  001156                     u1170:
  2877  001156                     
  2878                           ;main.c: 184:         {;main.c: 185:             isHeatingOn = isHeatingOn == 1 ? 0 : 1;
  2879  001156  0424               	decf	_isHeatingOn^0,w,c
  2880  001158  1025               	iorwf	(_isHeatingOn+1)^0,w,c
  2881  00115A  A4D8               	btfss	status,2,c
  2882  00115C  EFB2  F008         	goto	u1181
  2883  001160  EFB5  F008         	goto	u1180
  2884  001164                     u1181:
  2885  001164  0E01               	movlw	1
  2886  001166  EFB6  F008         	goto	u1190
  2887  00116A                     u1180:
  2888  00116A  0E00               	movlw	0
  2889  00116C                     u1190:
  2890  00116C  6E24               	movwf	_isHeatingOn^0,c
  2891  00116E  6A25               	clrf	(_isHeatingOn+1)^0,c
  2892  001170                     l1576:
  2893                           
  2894                           ;main.c: 189:     if((PORTBbits.RB5 == 0))
  2895  001170  BA81               	btfsc	129,5,c	;volatile
  2896  001172  EFBD  F008         	goto	u1201
  2897  001176  EFBF  F008         	goto	u1200
  2898  00117A                     u1201:
  2899  00117A  EFD2  F008         	goto	l1584
  2900  00117E                     u1200:
  2901  00117E                     
  2902                           ;main.c: 190:     {;main.c: 193:         if (power < 2) {
  2903  00117E  5027               	movf	(_power+1)^0,w,c
  2904  001180  E107               	bnz	u1211
  2905  001182  0E02               	movlw	2
  2906  001184  5C26               	subwf	_power^0,w,c
  2907  001186  B0D8               	btfsc	status,0,c
  2908  001188  EFC8  F008         	goto	u1211
  2909  00118C  EFCA  F008         	goto	u1210
  2910  001190                     u1211:
  2911  001190  EFCE  F008         	goto	l1582
  2912  001194                     u1210:
  2913  001194                     
  2914                           ;main.c: 194:             power++;
  2915  001194  4A26               	infsnz	_power^0,f,c
  2916  001196  2A27               	incf	(_power+1)^0,f,c
  2917                           
  2918                           ;main.c: 195:         } else {
  2919  001198  EFD2  F008         	goto	l1584
  2920  00119C                     l1582:
  2921                           
  2922                           ;main.c: 196:             power = 0;
  2923  00119C  0E00               	movlw	0
  2924  00119E  6E27               	movwf	(_power+1)^0,c
  2925  0011A0  0E00               	movlw	0
  2926  0011A2  6E26               	movwf	_power^0,c
  2927  0011A4                     l1584:
  2928                           
  2929                           ;main.c: 201:       __nop();
  2930  0011A4  F000               	nop	
  2931  0011A6                     
  2932                           ;main.c: 203:         if((PORTBbits.RB2 == 0))
  2933  0011A6  B481               	btfsc	129,2,c	;volatile
  2934  0011A8  EFD8  F008         	goto	u1221
  2935  0011AC  EFDA  F008         	goto	u1220
  2936  0011B0                     u1221:
  2937  0011B0  EFE7  F008         	goto	l1590
  2938  0011B4                     u1220:
  2939  0011B4                     
  2940                           ;main.c: 204:         {;main.c: 205:             isHeatingOn = isHeatingOn == 1 ? 0 : 1;
  2941  0011B4  0424               	decf	_isHeatingOn^0,w,c
  2942  0011B6  1025               	iorwf	(_isHeatingOn+1)^0,w,c
  2943  0011B8  A4D8               	btfss	status,2,c
  2944  0011BA  EFE1  F008         	goto	u1231
  2945  0011BE  EFE4  F008         	goto	u1230
  2946  0011C2                     u1231:
  2947  0011C2  0E01               	movlw	1
  2948  0011C4  EFE5  F008         	goto	u1240
  2949  0011C8                     u1230:
  2950  0011C8  0E00               	movlw	0
  2951  0011CA                     u1240:
  2952  0011CA  6E24               	movwf	_isHeatingOn^0,c
  2953  0011CC  6A25               	clrf	(_isHeatingOn+1)^0,c
  2954  0011CE                     l1590:
  2955                           
  2956                           ;main.c: 209:     if((PORTBbits.RB5 == 0))
  2957  0011CE  BA81               	btfsc	129,5,c	;volatile
  2958  0011D0  EFEC  F008         	goto	u1251
  2959  0011D4  EFEE  F008         	goto	u1250
  2960  0011D8                     u1251:
  2961  0011D8  EF01  F009         	goto	l1598
  2962  0011DC                     u1250:
  2963  0011DC                     
  2964                           ;main.c: 210:     {;main.c: 213:         if (power < 2) {
  2965  0011DC  5027               	movf	(_power+1)^0,w,c
  2966  0011DE  E107               	bnz	u1261
  2967  0011E0  0E02               	movlw	2
  2968  0011E2  5C26               	subwf	_power^0,w,c
  2969  0011E4  B0D8               	btfsc	status,0,c
  2970  0011E6  EFF7  F008         	goto	u1261
  2971  0011EA  EFF9  F008         	goto	u1260
  2972  0011EE                     u1261:
  2973  0011EE  EFFD  F008         	goto	l1596
  2974  0011F2                     u1260:
  2975  0011F2                     
  2976                           ;main.c: 214:             power++;
  2977  0011F2  4A26               	infsnz	_power^0,f,c
  2978  0011F4  2A27               	incf	(_power+1)^0,f,c
  2979                           
  2980                           ;main.c: 215:         } else {
  2981  0011F6  EF01  F009         	goto	l1598
  2982  0011FA                     l1596:
  2983                           
  2984                           ;main.c: 216:             power = 0;
  2985  0011FA  0E00               	movlw	0
  2986  0011FC  6E27               	movwf	(_power+1)^0,c
  2987  0011FE  0E00               	movlw	0
  2988  001200  6E26               	movwf	_power^0,c
  2989  001202                     l1598:
  2990                           
  2991                           ;main.c: 221:       __nop();
  2992  001202  F000               	nop	
  2993  001204                     
  2994                           ;main.c: 224:         if((PORTBbits.RB2 == 0))
  2995  001204  B481               	btfsc	129,2,c	;volatile
  2996  001206  EF07  F009         	goto	u1271
  2997  00120A  EF09  F009         	goto	u1270
  2998  00120E                     u1271:
  2999  00120E  EF16  F009         	goto	l1604
  3000  001212                     u1270:
  3001  001212                     
  3002                           ;main.c: 225:         {;main.c: 226:             isHeatingOn = isHeatingOn == 1 ? 0 : 1;
  3003  001212  0424               	decf	_isHeatingOn^0,w,c
  3004  001214  1025               	iorwf	(_isHeatingOn+1)^0,w,c
  3005  001216  A4D8               	btfss	status,2,c
  3006  001218  EF10  F009         	goto	u1281
  3007  00121C  EF13  F009         	goto	u1280
  3008  001220                     u1281:
  3009  001220  0E01               	movlw	1
  3010  001222  EF14  F009         	goto	u1290
  3011  001226                     u1280:
  3012  001226  0E00               	movlw	0
  3013  001228                     u1290:
  3014  001228  6E24               	movwf	_isHeatingOn^0,c
  3015  00122A  6A25               	clrf	(_isHeatingOn+1)^0,c
  3016  00122C                     l1604:
  3017                           
  3018                           ;main.c: 230:     if((PORTBbits.RB5 == 0))
  3019  00122C  BA81               	btfsc	129,5,c	;volatile
  3020  00122E  EF1B  F009         	goto	u1301
  3021  001232  EF1D  F009         	goto	u1300
  3022  001236                     u1301:
  3023  001236  EF30  F009         	goto	l1612
  3024  00123A                     u1300:
  3025  00123A                     
  3026                           ;main.c: 231:     {;main.c: 232:         if (power < 2) {
  3027  00123A  5027               	movf	(_power+1)^0,w,c
  3028  00123C  E107               	bnz	u1311
  3029  00123E  0E02               	movlw	2
  3030  001240  5C26               	subwf	_power^0,w,c
  3031  001242  B0D8               	btfsc	status,0,c
  3032  001244  EF26  F009         	goto	u1311
  3033  001248  EF28  F009         	goto	u1310
  3034  00124C                     u1311:
  3035  00124C  EF2C  F009         	goto	l1610
  3036  001250                     u1310:
  3037  001250                     
  3038                           ;main.c: 233:             power++;
  3039  001250  4A26               	infsnz	_power^0,f,c
  3040  001252  2A27               	incf	(_power+1)^0,f,c
  3041                           
  3042                           ;main.c: 234:         } else {
  3043  001254  EF30  F009         	goto	l1612
  3044  001258                     l1610:
  3045                           
  3046                           ;main.c: 235:             power = 0;
  3047  001258  0E00               	movlw	0
  3048  00125A  6E27               	movwf	(_power+1)^0,c
  3049  00125C  0E00               	movlw	0
  3050  00125E  6E26               	movwf	_power^0,c
  3051  001260                     l1612:
  3052                           
  3053                           ;main.c: 238:    }
  3054  001260  2A05               	incf	cook@j^0,f,c
  3055  001262  0EC7               	movlw	199
  3056  001264  6405               	cpfsgt	cook@j^0,c
  3057  001266  EF37  F009         	goto	u1321
  3058  00126A  EF39  F009         	goto	u1320
  3059  00126E                     u1321:
  3060  00126E  EF45  F008         	goto	l61
  3061  001272                     u1320:
  3062  001272                     
  3063                           ;main.c: 239:  }
  3064  001272  4A03               	infsnz	cook@i^0,f,c
  3065  001274  2A04               	incf	(cook@i+1)^0,f,c
  3066  001276                     l1618:
  3067  001276  5001               	movf	cook@ms^0,w,c
  3068  001278  5C03               	subwf	cook@i^0,w,c
  3069  00127A  5002               	movf	(cook@ms+1)^0,w,c
  3070  00127C  5804               	subwfb	(cook@i+1)^0,w,c
  3071  00127E  A0D8               	btfss	status,0,c
  3072  001280  EF44  F009         	goto	u1331
  3073  001284  EF46  F009         	goto	u1330
  3074  001288                     u1331:
  3075  001288  EF43  F008         	goto	l1540
  3076  00128C                     u1330:
  3077  00128C  0012               	return		;funcret
  3078  00128E                     __end_of_cook:
  3079                           	opt callstack 0
  3080                           
  3081                           	psect	rparam
  3082  0000                     tosu	equ	0xFFF
  3083                           tosh	equ	0xFFE
  3084                           tosl	equ	0xFFD
  3085                           stkptr	equ	0xFFC
  3086                           pclatu	equ	0xFFB
  3087                           pclath	equ	0xFFA
  3088                           pcl	equ	0xFF9
  3089                           tblptru	equ	0xFF8
  3090                           tblptrh	equ	0xFF7
  3091                           tblptrl	equ	0xFF6
  3092                           tablat	equ	0xFF5
  3093                           prodh	equ	0xFF4
  3094                           prodl	equ	0xFF3
  3095                           indf0	equ	0xFEF
  3096                           postinc0	equ	0xFEE
  3097                           postdec0	equ	0xFED
  3098                           preinc0	equ	0xFEC
  3099                           plusw0	equ	0xFEB
  3100                           fsr0h	equ	0xFEA
  3101                           fsr0l	equ	0xFE9
  3102                           wreg	equ	0xFE8
  3103                           indf1	equ	0xFE7
  3104                           postinc1	equ	0xFE6
  3105                           postdec1	equ	0xFE5
  3106                           preinc1	equ	0xFE4
  3107                           plusw1	equ	0xFE3
  3108                           fsr1h	equ	0xFE2
  3109                           fsr1l	equ	0xFE1
  3110                           bsr	equ	0xFE0
  3111                           indf2	equ	0xFDF
  3112                           postinc2	equ	0xFDE
  3113                           postdec2	equ	0xFDD
  3114                           preinc2	equ	0xFDC
  3115                           plusw2	equ	0xFDB
  3116                           fsr2h	equ	0xFDA
  3117                           fsr2l	equ	0xFD9
  3118                           status	equ	0xFD8


Data Sizes:
    Strings     120
    Constant    0
    Data        2
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     35      45
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sp__cprog_itos	PTR unsigned char  size(2) Largest target is 5
		 -> printTime@secondsBuffer(COMRAM[3]), printTime@minutesBuffer(COMRAM[5]), 

    cprog_itos@buf	PTR unsigned char  size(2) Largest target is 5
		 -> printTime@secondsBuffer(COMRAM[3]), printTime@minutesBuffer(COMRAM[5]), 

    cprog_itos@digits	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    sp__cprog_strrev	PTR unsigned char  size(2) Largest target is 5
		 -> printTime@secondsBuffer(COMRAM[3]), printTime@minutesBuffer(COMRAM[5]), 

    cprog_strrev@s	PTR unsigned char  size(2) Largest target is 5
		 -> printTime@secondsBuffer(COMRAM[3]), printTime@minutesBuffer(COMRAM[5]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_11(CODE[5]), STR_10(CODE[6]), printTime@secondsBuffer(COMRAM[3]), printTime@minutesBuffer(COMRAM[5]), 
		 -> STR_9(CODE[10]), STR_8(CODE[13]), STR_7(CODE[10]), STR_6(CODE[13]), 
		 -> STR_5(CODE[10]), STR_4(CODE[13]), STR_3(CODE[10]), STR_2(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_printTime
    _lcd_init->_delay
    _heating->_printTime
    _printTime->_cprog_itos
    _lcd_cmd->_lcd_wr
    _cprog_itos->_abs
    _abs->___awmod
    _printPowerSettings->_lcd_str
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9717
                            _heating
                            _lcd_cmd
                           _lcd_init
                 _printPowerSettings
                          _printTime
                      _updateMinutes
                _updatePowerSettings
                      _updateSeconds
              _updateSettingsOnReset
                 _updateStartHeating
 ---------------------------------------------------------------------------------
 (1) _updateStartHeating                                   2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _updateSettingsOnReset                                2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _updateSeconds                                        2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _updatePowerSettings                                  2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _updateMinutes                                        2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     350
                              _delay
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2     320
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _heating                                              0     0      0    4730
                               _cook
                            _lcd_cmd
                 _printPowerSettings
                          _printTime
 ---------------------------------------------------------------------------------
 (1) _printTime                                            8     8      0    3500
                                             27 COMRAM     8     8      0
                         _cprog_itos
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      30
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _cprog_itos                                          17    11      6    2322
                                             10 COMRAM    17    11      6
                            ___awdiv
                            ___awmod
                                _abs
                       _cprog_strrev
 ---------------------------------------------------------------------------------
 (3) _cprog_strrev                                         9     5      4     443
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _printPowerSettings                                   2     2      0    1032
                                              7 COMRAM     2     2      0
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    1032
                                              2 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0      30
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _cook                                                 5     3      2     168
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _heating
     _cook
     _lcd_cmd
       _lcd_wr
     _printPowerSettings
       _lcd_str
         _lcd_dat
           _lcd_wr
     _printTime
       _cprog_itos
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _cprog_strrev
       _lcd_cmd
         _lcd_wr
       _lcd_str
         _lcd_dat
           _lcd_wr
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _delay
     _lcd_cmd
       _lcd_wr
   _printPowerSettings
     _lcd_str
       _lcd_dat
         _lcd_wr
   _printTime
     _cprog_itos
       ___awdiv
       ___awmod
       _abs
         ___awmod (ARG)
       _cprog_strrev
     _lcd_cmd
       _lcd_wr
     _lcd_str
       _lcd_dat
         _lcd_wr
   _updateMinutes
   _updatePowerSettings
   _updateSeconds
   _updateSettingsOnReset
   _updateStartHeating

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     23      2D       1       35.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      34        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jun  7 16:16:20 2020

                            l42 1C26                              l61 108A                              l53 1B5E  
                            l39 1C2E                              l48 18F0                              l56 1B94  
                            l84 128C                              l93 1874                    ___awdiv@sign 0006  
                   __CFG_BORV$3 000000              _updateStartHeating 1A3A                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                           l102 13AC                             l105 1C14                             l115 1998  
                           l108 1AF2                             l143 1A08                             l119 19D4  
                           l136 14B6                             l160 1964                             l153 1720  
                           l146 1A38                             l157 1778                             l167 1B26  
                           l176 1A6C                             l193 163C                             l169 1B4C  
                           l450 16EC                             l178 1A96                             l437 157A  
                           l881 1BCC                             l890 1C1A                             l892 1C20  
                           l884 1BD4                             l886 1C2A                             l894 1C22  
                           l896 1C24                             l888 1C18                    __CFG_CPB$OFF 000000  
                           u600 1A08                             u601 1A04                             u610 1A16  
                  __CFG_CPD$OFF 000000                             u611 1A12                             u620 1A34  
                           u700 1B34                             u621 1A30                             u701 1B30  
                           u550 1986                             u630 170E                             u710 1A5A  
                           u551 1982                             u631 170A                             u711 1A56  
                           u560 1998                             u640 1720                             u720 1A6C  
                           u561 1994                             u641 171C                             u721 1A68  
                           u570 19A6                             u650 172E                             u730 1A7A  
                           u571 19A2                             u651 172A                             u731 1A76  
                           u900 1544                             u580 19C4                             u660 174A  
                           u740 1A90                             u901 1540                             u581 19C0  
                           u661 1746                             u741 1A8A                             u910 156A  
                           u590 19F6                             u670 1760                             u750 1A92  
                           u911 1566                             u591 19F2                             u671 175C  
                           u920 1650                             u840 186C                             u680 1B14  
                           u921 164C                             u841 1868                             u681 1B10  
                           u930 166A                             u850 1BB0                             u690 1B26  
                           u931 1666                             u851 1BAC                             u691 1B22  
                           u860 14CA                             u940 1684                             u861 14C6  
                           u941 1680                             u870 14E4                             u950 16A2  
                           u871 14E0                             u951 169E                             u880 150A  
                           u960 16B8                             u881 1506                             u961 16B4  
                           u890 1528                             u970 16DC                             u891 1524  
                           u971 16D8                             u980 18AC                             u990 18E0  
                           u987 18A2                             u997 18D6                             _abs 1B96  
                  ___awmod@sign 0006                             wreg 000FE8             ?_updateStartHeating 0001  
                  __CFG_LVP$OFF 000000                    __CFG_WDT$OFF 000000                            l1040 1C0E  
                          l1042 1C10                            ?_abs 0007                            l1044 1C12  
                          l1036 1C06                            l1220 1986                            l1038 1C08  
                          l1222 19A6                            l1214 1966                            l1400 186C  
                          l1240 1A16                            l1232 19D6                            l1224 19AE  
                          l1216 1972                            l1410 14BC                            l1242 1A1E  
                          l1234 19E2                            l1226 19C4                            l1218 1978  
                          l1250 16FA                            l1420 14EC                            l1412 14CA  
                          l1404 1B96                            l1500 12BA                            l1244 1A34  
                          l1236 19E8                            l1228 19CC                            l1260 174A  
                          l1252 1700                            l1430 151A                            l1422 14F0  
                          l1414 14D2                            l1406 1BB0                            l1510 1362  
                          l1502 12C2                            l1238 19F6                            l1262 1760  
                          l1254 170E                            l1270 1AF4                            l1600 1204  
                          l1440 154E                            l1432 1528                            l1424 14F8  
                          l1416 14D6                            l1408 14B8                            l1512 1374  
                          l1504 130A                            l1264 1764                            l1256 172E  
                          l1248 16EE                            l1272 1B00                            l1610 1258  
                          l1602 1212                            l1442 1554                            l1434 152E  
                          l1426 150A                            l1418 14E4                            l1514 1384  
                          l1506 130E                            l1530 1B68                            l1522 1B4E  
                          l1266 1770                            l1258 1736                            l1274 1B06  
                          l1290 1A7A                            l1282 1A3A                            l1612 1260  
                          l1604 122C                            l1540 1086                            l1620 13AE  
                          l1436 1544                            l1428 1512                            l1444 155A  
                          l1460 165C                            l1452 163E                            l1516 1388  
                          l1508 133C                            l1700 15A2                            l1532 1B6A  
                          l1524 1B5A                            l1276 1B14                            l1292 1A7C  
                          l1284 1A46                            l1614 1262                            l1606 123A  
                          l1550 10C2                            l1630 13F6                            l1622 13B2  
                          l1446 156A                            l1438 154C                            l1470 1694  
                          l1462 166A                            l1454 1642                            l1390 1820  
                          l1518 1398                            l1710 15DE                            l1702 15B4  
                          l1534 1B7A                            l1278 1B34                            l1286 1A4C  
                          l1616 1272                            l1608 1250                            l1560 10F8  
                          l1552 10D8                            l1640 1448                            l1632 1406  
                          l1624 13C4                            l1448 1572                            l1472 16A2  
                          l1480 16CC                            l1464 1672                            l1456 1650  
                          l1392 183C                            l1384 17F8                            l1720 162C  
                          l1704 15C6                            l1712 15EA                            l1536 1B7E  
                          l1288 1A5A                            l1570 1146                            l1562 1112  
                          l1554 10E0                            l1546 109A                            l1618 1276  
                          l1538 107A                            l1490 187E                            l1642 145A  
                          l1634 1416                            l1626 13D4                            l1482 16DC  
                          l1474 16B8                            l1466 1684                            l1458 1658  
                          l1394 184C                            l1386 1800                            l1722 1630  
                          l1714 15FC                            l1706 15D0                            l1730 179E  
                          l1580 1194                            l1572 1148                            l1564 1120  
                          l1556 10E8                            l1548 10B4                            l1492 18B0  
                          l1644 146A                            l1636 1428                            l1628 13E4  
                          l1484 16E4                            l1476 16C0                            l1468 168C  
                          l1396 1850                            l1388 1810                            l1660 1940  
                          l1724 1634                            l1716 160E                            l1708 15D8  
                          l1732 17B0                            l1740 17C6                            l1590 11CE  
                          l1582 119C                            l1574 1156                            l1566 1136  
                          l1558 10EA                            l1494 18B2                            l1638 1438  
                          l1478 16C6                            l1398 1856                            l1662 194C  
                          l1654 18F2                            l1718 1620                            l1670 1AA8  
                          l1750 17DA                            l1742 17CA                            l1734 17B6  
                          l1726 177A                            l1592 11DC                            l1584 11A4  
                          l1576 1170                            l1568 113E                            l1488 1876  
                          l1648 147A                            l1496 1290                            l1664 1958  
                          l1656 192E                            l1680 1AD4                            l1672 1AAA  
                          l1752 17EC                            l1744 17CE                            l1736 17BA  
                          l1728 179A                            l1594 11F2                            l1586 11A6  
                          l1578 117E                            l1498 12A8                            l1658 1934  
                          l1690 157C                            l1682 1ADA                            l1674 1AB0  
                          l1666 1A98                            l1746 17D2                            l1738 17BE  
                          l1596 11FA                            l1588 11B4                            l1692 1582  
                          l1684 1AE0                            l1676 1AC2                            l1668 1A9C  
                          l1748 17D6                            l1598 1202                            l1758 1490  
                          l1694 1588                            l1686 1AE6                            l1678 1ACE  
                          l1696 158C                            l1688 1AEC                            l1698 1590  
                          STR_1 1001                            STR_2 102C                            STR_3 105A  
                          STR_4 101F                            STR_5 1050                            STR_6 1039  
                          STR_7 1064                            STR_8 1012                            STR_9 1046  
                          u1000 18F0                            u1001 18EC                            u1010 12BA  
                          u1011 12B6                            u1100 10C2                            u1020 133C  
                          u1101 10BE                            u1021 1338                            u1110 10D8  
                          u1030 1362                            u1111 10D4                            u1031 135E  
                          u1200 117E                            u1120 10F8                            u1040 1374  
                          u1201 117A                            u1121 10F4                            u1041 1370  
                          u1210 1194                            u1130 110C                            u1050 1B7A  
                          u1211 1190                            u1131 1106                            u1051 1B76  
                          u1300 123A                            u1220 11B4                            u1140 110E  
                          u1060 1B94                            u1301 1236                            u1221 11B0  
                          u1061 1B90                            u1310 1250                            u1230 11C8  
                          u1150 1120                            u1070 109A                            u1311 124C  
                          u1231 11C2                            u1151 111C                            u1071 1096  
                          u1320 1272                            u1240 11CA                            u1160 1136  
                          u1080 10AE                            u1400 15C6                            u1321 126E  
                          u1161 1132                            u1081 10A8                            u1401 15C2  
                          u1330 128C                            u1250 11DC                            u1170 1156  
                          u1090 10B0                            u1410 15FC                            u1331 1288  
                          u1251 11D8                            u1171 1152                            u1411 15F8  
                          u1260 11F2                            u1180 116A                            u1340 13C4  
                          u1420 160E                            u1261 11EE                            u1181 1164  
                          u1341 13C0                            u1421 160A                            u1270 1212  
                          u1190 116C                            u1350 13F6                            u1430 1620  
                          u1271 120E                            u1351 13F2                            u1431 161C  
                          u1280 1226                            u1360 1428                            u1440 17B0  
                          u1281 1220                            u1361 1424                            u1441 17AC  
                          u1290 1228                            u1370 145A                            u1450 17EC  
                          u1371 1456                            u1451 17E8                            u1380 15A2  
                          u1381 159E                            u1390 15B4                            u1391 15B0  
         ??_updatePowerSettings 0001                    __CFG_PWRT$ON 000000                            abs@a 0007  
                          _cook 107A                            _main 177A                            fsr1h 000FE2  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          fsr2l 000FD9                  ?_updateMinutes 0001                  ?_updateSeconds 0001  
                          start 0000                   __CFG_IESO$OFF 000000            ??_updateStartHeating 0001  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000000                           ??_abs 0009  
                 ?_cprog_strrev 0001                           ?_cook 0001                           ?_main 0001  
               __end_of___awdiv 157C                           STR_10 106E                           STR_11 1074  
               __end_of___awmod 16EE                 ___awdiv@divisor 0003                 ___awdiv@counter 0005  
                         _PORTD 000F83                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000  
                 __CFG_WRT3$OFF 000000                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000                 __end_of_heating 163E  
                __CFG_EBTR3$OFF 000000                 __end_of_lcd_dat 1C28                 __end_of_lcd_cmd 1C16  
                 __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000                 __end_of_lcd_str 18F2  
                 __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000                           _delay 1B4E  
                         cook@i 0003                           cook@j 0005                           _power 0026  
                __CFG_BOREN$OFF 000000                           tablat 000FF5                     cprog_itos@n 001A  
                         status 000FD8                 __initialization 1BD6                    __end_of_cook 128E  
                  __end_of_main 17F8                  __CFG_OSC$HSPLL 000000                  ??_cprog_strrev 0005  
                        ??_cook 0003                          ??_main 0024                   __activetblptr 000002  
            _printPowerSettings 13AE                          ?_delay 0001                          _ADCON0 000FC2  
                        _ADCON1 000FC1                          _ADCON2 000FC0                ___awdiv@dividend 0001  
           ?_printPowerSettings 0001                 ??_updateMinutes 0001                 ??_updateSeconds 0001  
                __CFG_XINST$OFF 000000                __end_of_lcd_init 1AF4                       ??___awdiv 0005  
                     ??___awmod 0005                          _lcd_wr 1C28            ??_printPowerSettings 0008  
                        delay@i 0003                          delay@j 0005                          clear_0 1BF4  
              ___awdiv@quotient 0007                 ___awmod@divisor 0003                 ___awmod@counter 0005  
                        cook@ms 0001                       ??_heating 0024                       ??_lcd_dat 0002  
                     ??_lcd_cmd 0002                       ??_lcd_str 0005                    __pdataCOMRAM 002C  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                      __accesstop 0080         __end_of__initialization 1BFA  
               __CFG_PBADEN$OFF 000000  __size_of_updateSettingsOnReset 005A                   ___rparam_used 000001  
 __end_of_updateSettingsOnReset 1B4E                  __pcstackCOMRAM 0001                   __end_of_delay 1B96  
        printTime@minutesBuffer 001C                         ??_delay 0003          printTime@secondsBuffer 0021  
          __end_of_cprog_strrev 1876                         ?_lcd_wr 0001             updateStartHeating@i 0001  
            __size_of_printTime 0074     __end_of_updatePowerSettings 19D6            updatePowerSettings@i 0001  
                     ?_lcd_init 0001                      _cprog_itos 128E                         __Hparam 0000  
                       __Lparam 0000     __size_of_updateStartHeating 005E                         ___awdiv 14B8  
                       ___awmod 163E                    __psmallconst 1000                 __size_of_lcd_wr 0008  
               __CFG_STVREN$OFF 000000                         __pcinit 1BD6                         __ramtop 1000  
                       __ptext0 177A                         __ptext1 1A3A                         __ptext2 1AF4  
                       __ptext3 16EE                         __ptext4 1966                         __ptext5 19D6  
                       __ptext6 1A98                         __ptext7 1B4E                         __ptext8 157C  
                       __ptext9 18F2                         _heating 157C                         _lcd_dat 1C16  
                       _lcd_cmd 1C04                         _lcd_str 1876                    __size_of_abs 0040  
                       delay@ms 0001                ___awmod@dividend 0001                      ??_lcd_init 0006  
          end_of_initialization 1BFA                   __Lmediumconst 0000                   cprog_itos@buf 000B  
             __end_of_printTime 1966                         postinc0 000FEE                   cprog_strrev@i 0006  
                 cprog_strrev@j 0008                   cprog_strrev@n 0003                       _PORTBbits 000F81  
                 cprog_strrev@s 0001                       _PORTEbits 000F84                      lcd_dat@val 0002  
                    lcd_cmd@val 0002           __size_of_cprog_strrev 007E                  updateMinutes@i 0001  
                updateSeconds@i 0001                     ?_cprog_itos 000B           __end_of_updateMinutes 1A3A  
         __end_of_updateSeconds 177A                      lcd_str@str 0003     __size_of_printPowerSettings 010A  
                 __pidataCOMRAM 1C30                  __end_of_lcd_wr 1C30                    _cprog_strrev 17F8  
           start_initialization 1BD6                     __end_of_abs 1BD6           _updateSettingsOnReset 1AF4  
                      ??_lcd_wr 0001                __CFG_LPT1OSC$OFF 000000             _wereSettingsUpdated 002C  
           __size_of_cprog_itos 0120                     __pbssCOMRAM 0024               __size_of_lcd_init 005C  
             __CFG_CCP2MX$PORTC 000000                cprog_itos@digits 0015                  _heatingMinutes 002A  
                _heatingSeconds 0028                        ?___awdiv 0001                        ?___awmod 0001  
        updateSettingsOnReset@i 0001                        ?_heating 0001                        ?_lcd_dat 0001  
                      ?_lcd_cmd 0001                        ?_lcd_str 0003                     __smallconst 1000  
                   _isHeatingOn 0024                  __size_of_delay 0048    __size_of_updatePowerSettings 0070  
    __end_of_updateStartHeating 1A98          ?_updateSettingsOnReset 0001                __CFG_WDTPS$32768 000000  
                     _printTime 18F2                       lcd_wr@val 0001               cprog_strrev@savev 0005  
                  ??_cprog_itos 0011                        __Hrparam 0000                        __Lrparam 0000  
                    ?_printTime 0001                __size_of___awdiv 00C4                __size_of___awmod 00B0  
              __size_of_heating 00C2                __size_of_lcd_dat 0012                __size_of_lcd_cmd 0012  
              __size_of_lcd_str 007C              __end_of_cprog_itos 13AE                 cprog_itos@radix 000F  
                      __ptext10 1C04                        __ptext11 128E                        __ptext20 107A  
                      __ptext12 17F8                        __ptext13 1B96                        __ptext14 163E  
                      __ptext15 14B8                        __ptext16 13AE                        __ptext17 1876  
                      __ptext18 1C16                        __ptext19 1C28                 cprog_itos@value 0019  
                      _lcd_init 1A98                   __size_of_cook 0214                   __size_of_main 007E  
    __end_of_printPowerSettings 14B8                        lcd_str@i 0007          __size_of_updateMinutes 0064  
        __size_of_updateSeconds 008C                  cprog_itos@sign 0017                  cprog_itos@size 000D  
                   ??_printTime 001C             _updatePowerSettings 1966            ?_updatePowerSettings 0001  
       ??_updateSettingsOnReset 0001                   _updateMinutes 19D6                   _updateSeconds 16EE  
