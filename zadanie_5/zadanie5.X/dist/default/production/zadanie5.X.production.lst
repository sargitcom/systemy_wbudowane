

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jun  7 20:26:17 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4620 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     _TRISE	set	3990
    65  0000                     _TRISD	set	3989
    66  0000                     _TRISC	set	3988
    67  0000                     _TRISB	set	3987
    68  0000                     _TRISA	set	3986
    69  0000                     _ADCON2	set	4032
    70  0000                     _ADCON1	set	4033
    71  0000                     _PORTBbits	set	3969
    72  0000                     _PORTEbits	set	3972
    73  0000                     _PORTD	set	3971
    74  0000                     _ADRESL	set	4035
    75  0000                     _ADRESH	set	4036
    76  0000                     _ADCON0bits	set	4034
    77  0000                     _ADCON0	set	4034
    78                           
    79                           	psect	smallconst
    80  001000                     __psmallconst:
    81                           	opt callstack 0
    82  001000  00                 	db	0
    83  001001                     STR_1:
    84  001001  30                 	db	48	;'0'
    85  001002  31                 	db	49	;'1'
    86  001003  32                 	db	50	;'2'
    87  001004  33                 	db	51	;'3'
    88  001005  34                 	db	52	;'4'
    89  001006  35                 	db	53	;'5'
    90  001007  36                 	db	54	;'6'
    91  001008  37                 	db	55	;'7'
    92  001009  38                 	db	56	;'8'
    93  00100A  39                 	db	57	;'9'
    94  00100B  41                 	db	65	;'A'
    95  00100C  42                 	db	66	;'B'
    96  00100D  43                 	db	67	;'C'
    97  00100E  44                 	db	68	;'D'
    98  00100F  45                 	db	69	;'E'
    99  001010  46                 	db	70	;'F'
   100  001011  00                 	db	0
   101  001012                     STR_2:
   102  001012  47                 	db	71	;'G'
   103  001013  52                 	db	82	;'R'
   104  001014  41                 	db	65	;'A'
   105  001015  43                 	db	67	;'C'
   106  001016  5A                 	db	90	;'Z'
   107  001017  20                 	db	32
   108  001018  31                 	db	49	;'1'
   109  001019  20                 	db	32
   110  00101A  50                 	db	80	;'P'
   111  00101B  52                 	db	82	;'R'
   112  00101C  5A                 	db	90	;'Z'
   113  00101D  45                 	db	69	;'E'
   114  00101E  47                 	db	71	;'G'
   115  00101F  52                 	db	82	;'R'
   116  001020  41                 	db	65	;'A'
   117  001021  4C                 	db	76	;'L'
   118  001022  00                 	db	0
   119  001023                     STR_3:
   120  001023  47                 	db	71	;'G'
   121  001024  52                 	db	82	;'R'
   122  001025  41                 	db	65	;'A'
   123  001026  43                 	db	67	;'C'
   124  001027  5A                 	db	90	;'Z'
   125  001028  20                 	db	32
   126  001029  32                 	db	50	;'2'
   127  00102A  20                 	db	32
   128  00102B  50                 	db	80	;'P'
   129  00102C  52                 	db	82	;'R'
   130  00102D  5A                 	db	90	;'Z'
   131  00102E  45                 	db	69	;'E'
   132  00102F  47                 	db	71	;'G'
   133  001030  52                 	db	82	;'R'
   134  001031  41                 	db	65	;'A'
   135  001032  4C                 	db	76	;'L'
   136  001033  00                 	db	0
   137  001034                     STR_8:
   138  001034  55                 	db	85	;'U'
   139  001035  53                 	db	83	;'S'
   140  001036  54                 	db	84	;'T'
   141  001037  41                 	db	65	;'A'
   142  001038  4C                 	db	76	;'L'
   143  001039  20                 	db	32
   144  00103A  43                 	db	67	;'C'
   145  00103B  5A                 	db	90	;'Z'
   146  00103C  41                 	db	65	;'A'
   147  00103D  53                 	db	83	;'S'
   148  00103E  20                 	db	32
   149  00103F  47                 	db	71	;'G'
   150  001040  52                 	db	82	;'R'
   151  001041  59                 	db	89	;'Y'
   152  001042  00                 	db	0
   153  001043                     STR_9:
   154  001043  55                 	db	85	;'U'
   155  001044  5A                 	db	90	;'Z'
   156  001045  59                 	db	89	;'Y'
   157  001046  57                 	db	87	;'W'
   158  001047  41                 	db	65	;'A'
   159  001048  4A                 	db	74	;'J'
   160  001049  41                 	db	65	;'A'
   161  00104A  43                 	db	67	;'C'
   162  00104B  20                 	db	32
   163  00104C  50                 	db	80	;'P'
   164  00104D  32                 	db	50	;'2'
   165  00104E  00                 	db	0
   166  00104F                     STR_4:
   167  00104F  20                 	db	32
   168  001050  4D                 	db	77	;'M'
   169  001051  49                 	db	73	;'I'
   170  001052  4E                 	db	78	;'N'
   171  001053  20                 	db	32
   172  001054  00                 	db	0
   173  001055                     STR_5:
   174  001055  20                 	db	32
   175  001056  53                 	db	83	;'S'
   176  001057  45                 	db	69	;'E'
   177  001058  43                 	db	67	;'C'
   178  001059  00                 	db	0
   179  0000                     
   180                           ; #config settings
   181  00105A  00                 	db	0	; dummy byte at the end
   182  0000                     
   183                           	psect	cinit
   184  001A90                     __pcinit:
   185                           	opt callstack 0
   186  001A90                     start_initialization:
   187                           	opt callstack 0
   188  001A90                     __initialization:
   189                           	opt callstack 0
   190                           
   191                           ; Clear objects allocated to COMRAM (12 bytes)
   192  001A90  EE00  F02C         	lfsr	0,__pbssCOMRAM
   193  001A94  0E0C               	movlw	12
   194  001A96                     clear_0:
   195  001A96  6AEE               	clrf	postinc0,c
   196  001A98  06E8               	decf	wreg,f,c
   197  001A9A  E1FD               	bnz	clear_0
   198  001A9C                     end_of_initialization:
   199                           	opt callstack 0
   200  001A9C                     __end_of__initialization:
   201                           	opt callstack 0
   202  001A9C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   203  001A9E  6EF8               	movwf	tblptru,c
   204  001AA0  0100               	movlb	0
   205  001AA2  EF6F  F00B         	goto	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMRAM
   208  00002C                     __pbssCOMRAM:
   209                           	opt callstack 0
   210  00002C                     _playerNumberTimeIsElapsing:
   211                           	opt callstack 0
   212  00002C                     	ds	2
   213  00002E                     _timeForGame:
   214                           	opt callstack 0
   215  00002E                     	ds	2
   216  000030                     _player2seconds:
   217                           	opt callstack 0
   218  000030                     	ds	2
   219  000032                     _player2minutes:
   220                           	opt callstack 0
   221  000032                     	ds	2
   222  000034                     _player1seconds:
   223                           	opt callstack 0
   224  000034                     	ds	2
   225  000036                     _player1minutes:
   226                           	opt callstack 0
   227  000036                     	ds	2
   228                           
   229                           	psect	cstackCOMRAM
   230  000001                     __pcstackCOMRAM:
   231                           	opt callstack 0
   232  000001                     ?_cprog_strrev:
   233                           	opt callstack 0
   234  000001                     ?_adc:
   235                           	opt callstack 0
   236  000001                     ?___awdiv:
   237                           	opt callstack 0
   238  000001                     ?___awmod:
   239                           	opt callstack 0
   240  000001                     lcd_wr@val:
   241                           	opt callstack 0
   242  000001                     delay@ms:
   243                           	opt callstack 0
   244  000001                     reduceTime@ms:
   245                           	opt callstack 0
   246  000001                     cprog_strrev@s:
   247                           	opt callstack 0
   248  000001                     ___awdiv@dividend:
   249                           	opt callstack 0
   250  000001                     ___awmod@dividend:
   251                           	opt callstack 0
   252                           
   253                           ; 2 bytes @ 0x0
   254  000001                     	ds	1
   255  000002                     lcd_dat@val:
   256                           	opt callstack 0
   257  000002                     lcd_cmd@val:
   258                           	opt callstack 0
   259                           
   260                           ; 1 bytes @ 0x1
   261  000002                     	ds	1
   262  000003                     ??_adc:
   263  000003                     lcd_str@str:
   264                           	opt callstack 0
   265  000003                     delay@i:
   266                           	opt callstack 0
   267  000003                     reduceTime@i:
   268                           	opt callstack 0
   269  000003                     cprog_strrev@n:
   270                           	opt callstack 0
   271  000003                     ___awdiv@divisor:
   272                           	opt callstack 0
   273  000003                     ___awmod@divisor:
   274                           	opt callstack 0
   275                           
   276                           ; 2 bytes @ 0x2
   277  000003                     	ds	2
   278  000005                     ??_lcd_str:
   279  000005                     delay@j:
   280                           	opt callstack 0
   281  000005                     reduceTime@j:
   282                           	opt callstack 0
   283  000005                     cprog_strrev@savev:
   284                           	opt callstack 0
   285  000005                     ___awdiv@counter:
   286                           	opt callstack 0
   287  000005                     ___awmod@counter:
   288                           	opt callstack 0
   289                           
   290                           ; 1 bytes @ 0x4
   291  000005                     	ds	1
   292  000006                     ___awdiv@sign:
   293                           	opt callstack 0
   294  000006                     ___awmod@sign:
   295                           	opt callstack 0
   296  000006                     cprog_strrev@i:
   297                           	opt callstack 0
   298                           
   299                           ; 2 bytes @ 0x5
   300  000006                     	ds	1
   301  000007                     ?_abs:
   302                           	opt callstack 0
   303  000007                     adc@kanal:
   304                           	opt callstack 0
   305  000007                     lcd_str@i:
   306                           	opt callstack 0
   307  000007                     ___awdiv@quotient:
   308                           	opt callstack 0
   309  000007                     abs@a:
   310                           	opt callstack 0
   311                           
   312                           ; 2 bytes @ 0x6
   313  000007                     	ds	1
   314  000008                     ?___lwdiv:
   315                           	opt callstack 0
   316  000008                     cprog_strrev@j:
   317                           	opt callstack 0
   318  000008                     ___lwdiv@dividend:
   319                           	opt callstack 0
   320                           
   321                           ; 2 bytes @ 0x7
   322  000008                     	ds	1
   323  000009                     ??_abs:
   324                           
   325                           ; 1 bytes @ 0x8
   326  000009                     	ds	1
   327  00000A                     ___lwdiv@divisor:
   328                           	opt callstack 0
   329                           
   330                           ; 2 bytes @ 0x9
   331  00000A                     	ds	1
   332  00000B                     cprog_itos@buf:
   333                           	opt callstack 0
   334                           
   335                           ; 2 bytes @ 0xA
   336  00000B                     	ds	1
   337  00000C                     ___lwdiv@quotient:
   338                           	opt callstack 0
   339                           
   340                           ; 2 bytes @ 0xB
   341  00000C                     	ds	1
   342  00000D                     cprog_itos@size:
   343                           	opt callstack 0
   344                           
   345                           ; 2 bytes @ 0xC
   346  00000D                     	ds	1
   347  00000E                     ___lwdiv@counter:
   348                           	opt callstack 0
   349                           
   350                           ; 1 bytes @ 0xD
   351  00000E                     	ds	1
   352  00000F                     ??_updateTimeRemainingSet:
   353  00000F                     cprog_itos@radix:
   354                           	opt callstack 0
   355                           
   356                           ; 2 bytes @ 0xE
   357  00000F                     	ds	2
   358  000011                     ??_cprog_itos:
   359  000011                     updateTimeRemainingSet@time:
   360                           	opt callstack 0
   361                           
   362                           ; 2 bytes @ 0x10
   363  000011                     	ds	4
   364  000015                     cprog_itos@digits:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x14
   368  000015                     	ds	2
   369  000017                     cprog_itos@sign:
   370                           	opt callstack 0
   371                           
   372                           ; 2 bytes @ 0x16
   373  000017                     	ds	2
   374  000019                     cprog_itos@value:
   375                           	opt callstack 0
   376                           
   377                           ; 1 bytes @ 0x18
   378  000019                     	ds	1
   379  00001A                     cprog_itos@n:
   380                           	opt callstack 0
   381                           
   382                           ; 2 bytes @ 0x19
   383  00001A                     	ds	2
   384  00001C                     printTime@player1minutesBuffer:
   385                           	opt callstack 0
   386                           
   387                           ; 5 bytes @ 0x1B
   388  00001C                     	ds	5
   389  000021                     printTime@player2minutesBuffer:
   390                           	opt callstack 0
   391                           
   392                           ; 5 bytes @ 0x20
   393  000021                     	ds	5
   394  000026                     printTime@player1secondsBuffer:
   395                           	opt callstack 0
   396                           
   397                           ; 3 bytes @ 0x25
   398  000026                     	ds	3
   399  000029                     printTime@player2secondsBuffer:
   400                           	opt callstack 0
   401                           
   402                           ; 3 bytes @ 0x28
   403  000029                     	ds	3
   404  00002C                     
   405                           ; 1 bytes @ 0x2B
   406 ;;
   407 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   408 ;;
   409 ;; *************** function _main *****************
   410 ;; Defined at:
   411 ;;		line 387 in file "main.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   429 ;;Total ram usage:        0 bytes
   430 ;; Hardware stack levels required when called:    4
   431 ;; This function calls:
   432 ;;		_lcd_cmd
   433 ;;		_lcd_init
   434 ;;		_lcd_str
   435 ;;		_printTime
   436 ;;		_reduceTime
   437 ;;		_updatePlayersTime
   438 ;;		_updateTimeRemainingSet
   439 ;; This function is called by:
   440 ;;		Startup code after reset
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text0
   445  0016DE                     __ptext0:
   446                           	opt callstack 0
   447  0016DE                     _main:
   448                           	opt callstack 27
   449  0016DE                     
   450                           ;main.c: 389:     ADCON0=0x01;
   451  0016DE  0E01               	movlw	1
   452  0016E0  6EC2               	movwf	194,c	;volatile
   453                           
   454                           ;main.c: 390:     ADCON1=0x0B;
   455  0016E2  0E0B               	movlw	11
   456  0016E4  6EC1               	movwf	193,c	;volatile
   457                           
   458                           ;main.c: 391:     ADCON2=0x01;
   459  0016E6  0E01               	movlw	1
   460  0016E8  6EC0               	movwf	192,c	;volatile
   461                           
   462                           ;main.c: 393:     TRISA=0xC3;
   463  0016EA  0EC3               	movlw	195
   464  0016EC  6E92               	movwf	146,c	;volatile
   465                           
   466                           ;main.c: 394:     TRISB=0x3F;
   467  0016EE  0E3F               	movlw	63
   468  0016F0  6E93               	movwf	147,c	;volatile
   469                           
   470                           ;main.c: 395:     TRISC=0x01;
   471  0016F2  0E01               	movlw	1
   472  0016F4  6E94               	movwf	148,c	;volatile
   473                           
   474                           ;main.c: 396:     TRISD=0x00;
   475  0016F6  0E00               	movlw	0
   476  0016F8  6E95               	movwf	149,c	;volatile
   477                           
   478                           ;main.c: 397:     TRISE=0x00;
   479  0016FA  0E00               	movlw	0
   480  0016FC  6E96               	movwf	150,c	;volatile
   481  0016FE                     
   482                           ;main.c: 399:     lcd_init();
   483  0016FE  ECBF  F00C         	call	_lcd_init	;wreg free
   484  001702                     l1622:
   485                           
   486                           ;main.c: 402:         updateTimeRemainingSet();
   487  001702  EC33  F00A         	call	_updateTimeRemainingSet	;wreg free
   488  001706                     
   489                           ;main.c: 403:         updatePlayersTime();
   490  001706  EC31  F00D         	call	_updatePlayersTime	;wreg free
   491  00170A                     
   492                           ;main.c: 405:         if (timeForGame != 0) {
   493  00170A  502E               	movf	_timeForGame^0,w,c
   494  00170C  102F               	iorwf	(_timeForGame+1)^0,w,c
   495  00170E  B4D8               	btfsc	status,2,c
   496  001710  EF8C  F00B         	goto	u981
   497  001714  EF8E  F00B         	goto	u980
   498  001718                     u981:
   499  001718  EF92  F00B         	goto	l1630
   500  00171C                     u980:
   501  00171C                     
   502                           ;main.c: 406:             printTime();
   503  00171C  EC2E  F008         	call	_printTime	;wreg free
   504                           
   505                           ;main.c: 407:         } else {
   506  001720  EFA4  F00B         	goto	l1636
   507  001724                     l1630:
   508                           
   509                           ;main.c: 408:             lcd_cmd(0x80);
   510  001724  0E80               	movlw	128
   511  001726  EC5C  F00D         	call	_lcd_cmd
   512  00172A                     
   513                           ;main.c: 409:             lcd_str("USTAL CZAS GRY");
   514  00172A  0E34               	movlw	low STR_8
   515  00172C  6E03               	movwf	lcd_str@str^0,c
   516  00172E  0E10               	movlw	high STR_8
   517  001730  6E04               	movwf	(lcd_str@str+1)^0,c
   518  001732  EC47  F00C         	call	_lcd_str	;wreg free
   519  001736                     
   520                           ;main.c: 410:             lcd_cmd(0xC0);
   521  001736  0EC0               	movlw	192
   522  001738  EC5C  F00D         	call	_lcd_cmd
   523                           
   524                           ;main.c: 411:             lcd_str("UZYWAJAC P2");
   525  00173C  0E43               	movlw	low STR_9
   526  00173E  6E03               	movwf	lcd_str@str^0,c
   527  001740  0E10               	movlw	high STR_9
   528  001742  6E04               	movwf	(lcd_str@str+1)^0,c
   529  001744  EC47  F00C         	call	_lcd_str	;wreg free
   530  001748                     l1636:
   531                           
   532                           ;main.c: 414:         if (timeForGame != 0 && playerNumberTimeIsElapsing != 0) {
   533  001748  502E               	movf	_timeForGame^0,w,c
   534  00174A  102F               	iorwf	(_timeForGame+1)^0,w,c
   535  00174C  B4D8               	btfsc	status,2,c
   536  00174E  EFAB  F00B         	goto	u991
   537  001752  EFAD  F00B         	goto	u990
   538  001756                     u991:
   539  001756  EF81  F00B         	goto	l1622
   540  00175A                     u990:
   541  00175A  502C               	movf	_playerNumberTimeIsElapsing^0,w,c
   542  00175C  102D               	iorwf	(_playerNumberTimeIsElapsing+1)^0,w,c
   543  00175E  B4D8               	btfsc	status,2,c
   544  001760  EFB4  F00B         	goto	u1001
   545  001764  EFB6  F00B         	goto	u1000
   546  001768                     u1001:
   547  001768  EF81  F00B         	goto	l1622
   548  00176C                     u1000:
   549  00176C                     
   550                           ;main.c: 415:             reduceTime(20);
   551  00176C  0E00               	movlw	0
   552  00176E  6E02               	movwf	(reduceTime@ms+1)^0,c
   553  001770  0E14               	movlw	20
   554  001772  6E01               	movwf	reduceTime@ms^0,c
   555  001774  ECA4  F009         	call	_reduceTime	;wreg free
   556  001778  EF81  F00B         	goto	l1622
   557  00177C  EF00  F000         	goto	start
   558  001780                     __end_of_main:
   559                           	opt callstack 0
   560                           
   561 ;; *************** function _updateTimeRemainingSet *****************
   562 ;; Defined at:
   563 ;;		line 349 in file "main.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;  time            2   16[COMRAM] unsigned int 
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, status,2, status,0, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;Total ram usage:        4 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; Hardware stack levels required when called:    1
   584 ;; This function calls:
   585 ;;		___lwdiv
   586 ;;		_adc
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text1
   593  001466                     __ptext1:
   594                           	opt callstack 0
   595  001466                     _updateTimeRemainingSet:
   596                           	opt callstack 29
   597  001466                     
   598                           ;main.c: 351:     unsigned int time = (unsigned int)(((unsigned int)adc(1)) / 85);
   599  001466  0E01               	movlw	1
   600  001468  ECC0  F00B         	call	_adc
   601  00146C  C001  F008         	movff	?_adc,___lwdiv@dividend
   602  001470  C002  F009         	movff	?_adc+1,___lwdiv@dividend+1
   603  001474  0E00               	movlw	0
   604  001476  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
   605  001478  0E55               	movlw	85
   606  00147A  6E0A               	movwf	___lwdiv@divisor^0,c
   607  00147C  EC85  F00C         	call	___lwdiv	;wreg free
   608  001480  C008  F011         	movff	?___lwdiv,updateTimeRemainingSet@time
   609  001484  C009  F012         	movff	?___lwdiv+1,updateTimeRemainingSet@time+1
   610  001488                     
   611                           ;main.c: 353:     if(timeForGame == 0 || playerNumberTimeIsElapsing == 0) {
   612  001488  502E               	movf	_timeForGame^0,w,c
   613  00148A  102F               	iorwf	(_timeForGame+1)^0,w,c
   614  00148C  B4D8               	btfsc	status,2,c
   615  00148E  EF4B  F00A         	goto	u961
   616  001492  EF4D  F00A         	goto	u960
   617  001496                     u961:
   618  001496  EF9A  F00A         	goto	l1612
   619  00149A                     u960:
   620  00149A  502C               	movf	_playerNumberTimeIsElapsing^0,w,c
   621  00149C  102D               	iorwf	(_playerNumberTimeIsElapsing+1)^0,w,c
   622  00149E  A4D8               	btfss	status,2,c
   623  0014A0  EF54  F00A         	goto	u971
   624  0014A4  EF56  F00A         	goto	u970
   625  0014A8                     u971:
   626  0014A8  EFB4  F00A         	goto	l146
   627  0014AC                     u970:
   628  0014AC  EF9A  F00A         	goto	l1612
   629  0014B0                     l1604:
   630                           
   631                           ;main.c: 356:                 timeForGame = 5;
   632  0014B0  0E00               	movlw	0
   633  0014B2  6E2F               	movwf	(_timeForGame+1)^0,c
   634  0014B4  0E05               	movlw	5
   635  0014B6  6E2E               	movwf	_timeForGame^0,c
   636                           
   637                           ;main.c: 358:                 player1minutes = 5;
   638  0014B8  0E00               	movlw	0
   639  0014BA  6E37               	movwf	(_player1minutes+1)^0,c
   640  0014BC  0E05               	movlw	5
   641  0014BE  6E36               	movwf	_player1minutes^0,c
   642                           
   643                           ;main.c: 359:                 player1seconds = 0;
   644  0014C0  0E00               	movlw	0
   645  0014C2  6E35               	movwf	(_player1seconds+1)^0,c
   646  0014C4  0E00               	movlw	0
   647  0014C6  6E34               	movwf	_player1seconds^0,c
   648                           
   649                           ;main.c: 360:                 player2minutes = 5;
   650  0014C8  0E00               	movlw	0
   651  0014CA  6E33               	movwf	(_player2minutes+1)^0,c
   652  0014CC  0E05               	movlw	5
   653  0014CE  6E32               	movwf	_player2minutes^0,c
   654                           
   655                           ;main.c: 361:                 player2seconds = 0;
   656  0014D0  0E00               	movlw	0
   657  0014D2  6E31               	movwf	(_player2seconds+1)^0,c
   658  0014D4  0E00               	movlw	0
   659  0014D6  6E30               	movwf	_player2seconds^0,c
   660                           
   661                           ;main.c: 362:                 break;
   662  0014D8  EFB4  F00A         	goto	l146
   663  0014DC                     l1606:
   664                           
   665                           ;main.c: 365:                 timeForGame = 3;
   666  0014DC  0E00               	movlw	0
   667  0014DE  6E2F               	movwf	(_timeForGame+1)^0,c
   668  0014E0  0E03               	movlw	3
   669  0014E2  6E2E               	movwf	_timeForGame^0,c
   670                           
   671                           ;main.c: 367:                 player1minutes = 3;
   672  0014E4  0E00               	movlw	0
   673  0014E6  6E37               	movwf	(_player1minutes+1)^0,c
   674  0014E8  0E03               	movlw	3
   675  0014EA  6E36               	movwf	_player1minutes^0,c
   676                           
   677                           ;main.c: 368:                 player1seconds = 0;
   678  0014EC  0E00               	movlw	0
   679  0014EE  6E35               	movwf	(_player1seconds+1)^0,c
   680  0014F0  0E00               	movlw	0
   681  0014F2  6E34               	movwf	_player1seconds^0,c
   682                           
   683                           ;main.c: 369:                 player2minutes = 3;
   684  0014F4  0E00               	movlw	0
   685  0014F6  6E33               	movwf	(_player2minutes+1)^0,c
   686  0014F8  0E03               	movlw	3
   687  0014FA  6E32               	movwf	_player2minutes^0,c
   688                           
   689                           ;main.c: 370:                 player2seconds = 0;
   690  0014FC  0E00               	movlw	0
   691  0014FE  6E31               	movwf	(_player2seconds+1)^0,c
   692  001500  0E00               	movlw	0
   693  001502  6E30               	movwf	_player2seconds^0,c
   694                           
   695                           ;main.c: 371:                 break;
   696  001504  EFB4  F00A         	goto	l146
   697  001508                     l1608:
   698                           
   699                           ;main.c: 374:                 timeForGame = 1;
   700  001508  0E00               	movlw	0
   701  00150A  6E2F               	movwf	(_timeForGame+1)^0,c
   702  00150C  0E01               	movlw	1
   703  00150E  6E2E               	movwf	_timeForGame^0,c
   704                           
   705                           ;main.c: 376:                 player1minutes = 1;
   706  001510  0E00               	movlw	0
   707  001512  6E37               	movwf	(_player1minutes+1)^0,c
   708  001514  0E01               	movlw	1
   709  001516  6E36               	movwf	_player1minutes^0,c
   710                           
   711                           ;main.c: 377:                 player1seconds = 0;
   712  001518  0E00               	movlw	0
   713  00151A  6E35               	movwf	(_player1seconds+1)^0,c
   714  00151C  0E00               	movlw	0
   715  00151E  6E34               	movwf	_player1seconds^0,c
   716                           
   717                           ;main.c: 378:                 player2minutes = 1;
   718  001520  0E00               	movlw	0
   719  001522  6E33               	movwf	(_player2minutes+1)^0,c
   720  001524  0E01               	movlw	1
   721  001526  6E32               	movwf	_player2minutes^0,c
   722                           
   723                           ;main.c: 379:                 player2seconds = 0;
   724  001528  0E00               	movlw	0
   725  00152A  6E31               	movwf	(_player2seconds+1)^0,c
   726  00152C  0E00               	movlw	0
   727  00152E  6E30               	movwf	_player2seconds^0,c
   728                           
   729                           ;main.c: 380:                 break;
   730  001530  EFB4  F00A         	goto	l146
   731  001534                     l1612:
   732  001534  C011  F00F         	movff	updateTimeRemainingSet@time,??_updateTimeRemainingSet
   733  001538  C012  F010         	movff	updateTimeRemainingSet@time+1,??_updateTimeRemainingSet+1
   734                           
   735                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   736                           ; Switch size 1, requested type "simple"
   737                           ; Number of cases is 1, Range of values is 0 to 0
   738                           ; switch strategies available:
   739                           ; Name         Instructions Cycles
   740                           ; simple_byte            4     3 (average)
   741                           ;	Chosen strategy is simple_byte
   742  00153C  5010               	movf	(??_updateTimeRemainingSet+1)^0,w,c
   743  00153E  0A00               	xorlw	0	; case 0
   744  001540  B4D8               	btfsc	status,2,c
   745  001542  EFA5  F00A         	goto	l1650
   746  001546  EFB4  F00A         	goto	l146
   747  00154A                     l1650:
   748                           
   749                           ; Switch size 1, requested type "simple"
   750                           ; Number of cases is 3, Range of values is 1 to 3
   751                           ; switch strategies available:
   752                           ; Name         Instructions Cycles
   753                           ; simple_byte           10     6 (average)
   754                           ;	Chosen strategy is simple_byte
   755  00154A  500F               	movf	??_updateTimeRemainingSet^0,w,c
   756  00154C  0A01               	xorlw	1	; case 1
   757  00154E  B4D8               	btfsc	status,2,c
   758  001550  EF58  F00A         	goto	l1604
   759  001554  0A03               	xorlw	3	; case 2
   760  001556  B4D8               	btfsc	status,2,c
   761  001558  EF6E  F00A         	goto	l1606
   762  00155C  0A01               	xorlw	1	; case 3
   763  00155E  B4D8               	btfsc	status,2,c
   764  001560  EF84  F00A         	goto	l1608
   765  001564  EFB4  F00A         	goto	l146
   766  001568                     l146:
   767  001568  0012               	return		;funcret
   768  00156A                     __end_of_updateTimeRemainingSet:
   769                           	opt callstack 0
   770                           
   771 ;; *************** function _adc *****************
   772 ;; Defined at:
   773 ;;		line 85 in file "main.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;  kanal           1    wreg     unsigned char 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  kanal           1    6[COMRAM] unsigned char 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  2    0[COMRAM] unsigned int 
   780 ;; Registers used:
   781 ;;		wreg, status,2, status,0
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;Total ram usage:        7 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; This function calls:
   794 ;;		Nothing
   795 ;; This function is called by:
   796 ;;		_updateTimeRemainingSet
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           	psect	text2
   801  001780                     __ptext2:
   802                           	opt callstack 0
   803  001780                     _adc:
   804                           	opt callstack 29
   805                           
   806                           ;incstack = 0
   807                           ;adc@kanal stored from wreg
   808  001780  6E07               	movwf	adc@kanal^0,c
   809  001782                     
   810                           ;main.c: 85: unsigned int adc(unsigned char kanal);main.c: 86: {;main.c: 87:     switch(
      +                          kanal)
   811  001782  EFCF  F00B         	goto	l1384
   812  001786                     l1376:
   813  001786  0E01               	movlw	1
   814  001788  6EC2               	movwf	194,c	;volatile
   815  00178A  EFE8  F00B         	goto	l49
   816  00178E                     l1378:
   817  00178E  0E05               	movlw	5
   818  001790  6EC2               	movwf	194,c	;volatile
   819  001792  EFE8  F00B         	goto	l49
   820  001796                     l1380:
   821  001796  0E09               	movlw	9
   822  001798  6EC2               	movwf	194,c	;volatile
   823  00179A  EFE8  F00B         	goto	l49
   824  00179E                     l1384:
   825  00179E  5007               	movf	adc@kanal^0,w,c
   826  0017A0  6E03               	movwf	??_adc^0,c
   827  0017A2  6A04               	clrf	(??_adc+1)^0,c
   828                           
   829                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   830                           ; Switch size 1, requested type "simple"
   831                           ; Number of cases is 1, Range of values is 0 to 0
   832                           ; switch strategies available:
   833                           ; Name         Instructions Cycles
   834                           ; simple_byte            4     3 (average)
   835                           ;	Chosen strategy is simple_byte
   836  0017A4  5004               	movf	(??_adc+1)^0,w,c
   837  0017A6  0A00               	xorlw	0	; case 0
   838  0017A8  B4D8               	btfsc	status,2,c
   839  0017AA  EFD9  F00B         	goto	l1652
   840  0017AE  EFE8  F00B         	goto	l49
   841  0017B2                     l1652:
   842                           
   843                           ; Switch size 1, requested type "simple"
   844                           ; Number of cases is 3, Range of values is 0 to 2
   845                           ; switch strategies available:
   846                           ; Name         Instructions Cycles
   847                           ; simple_byte           10     6 (average)
   848                           ;	Chosen strategy is simple_byte
   849  0017B2  5003               	movf	??_adc^0,w,c
   850  0017B4  0A00               	xorlw	0	; case 0
   851  0017B6  B4D8               	btfsc	status,2,c
   852  0017B8  EFC3  F00B         	goto	l1376
   853  0017BC  0A01               	xorlw	1	; case 1
   854  0017BE  B4D8               	btfsc	status,2,c
   855  0017C0  EFC7  F00B         	goto	l1378
   856  0017C4  0A03               	xorlw	3	; case 2
   857  0017C6  B4D8               	btfsc	status,2,c
   858  0017C8  EFCB  F00B         	goto	l1380
   859  0017CC  EFE8  F00B         	goto	l49
   860  0017D0                     l49:
   861                           
   862                           ;main.c: 94:     ADCON0bits.GO=1;
   863  0017D0  82C2               	bsf	194,1,c	;volatile
   864  0017D2                     l52:
   865  0017D2  B2C2               	btfsc	194,1,c	;volatile
   866  0017D4  EFEE  F00B         	goto	u661
   867  0017D8  EFF0  F00B         	goto	u660
   868  0017DC                     u661:
   869  0017DC  EFE9  F00B         	goto	l52
   870  0017E0                     u660:
   871  0017E0                     
   872                           ;main.c: 97:    return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
   873  0017E0  CFC3 F003          	movff	4035,??_adc	;volatile
   874  0017E4  0E06               	movlw	6
   875  0017E6  6E04               	movwf	(??_adc+1)^0,c
   876  0017E8                     u675:
   877  0017E8  90D8               	bcf	status,0,c
   878  0017EA  3203               	rrcf	??_adc^0,f,c
   879  0017EC  2E04               	decfsz	(??_adc+1)^0,f,c
   880  0017EE  EFF4  F00B         	goto	u675
   881  0017F2  5003               	movf	??_adc^0,w,c
   882  0017F4  CFC4 F005          	movff	4036,??_adc+2	;volatile
   883  0017F8  6A06               	clrf	(??_adc+3)^0,c
   884  0017FA  90D8               	bcf	status,0,c
   885  0017FC  3605               	rlcf	(??_adc+2)^0,f,c
   886  0017FE  3606               	rlcf	(??_adc+3)^0,f,c
   887  001800  90D8               	bcf	status,0,c
   888  001802  3605               	rlcf	(??_adc+2)^0,f,c
   889  001804  3606               	rlcf	(??_adc+3)^0,f,c
   890  001806  1005               	iorwf	(??_adc+2)^0,w,c
   891  001808  6E01               	movwf	?_adc^0,c
   892  00180A  5006               	movf	(??_adc+3)^0,w,c
   893  00180C  6E02               	movwf	(?_adc+1)^0,c
   894  00180E  0012               	return		;funcret
   895  001810                     __end_of_adc:
   896                           	opt callstack 0
   897                           
   898 ;; *************** function ___lwdiv *****************
   899 ;; Defined at:
   900 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lwdiv.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  dividend        2    7[COMRAM] unsigned int 
   903 ;;  divisor         2    9[COMRAM] unsigned int 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  quotient        2   11[COMRAM] unsigned int 
   906 ;;  counter         1   13[COMRAM] unsigned char 
   907 ;; Return value:  Size  Location     Type
   908 ;;                  2    7[COMRAM] unsigned int 
   909 ;; Registers used:
   910 ;;		wreg, status,2, status,0
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   916 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;Total ram usage:        7 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_updateTimeRemainingSet
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text3
   930  00190A                     __ptext3:
   931                           	opt callstack 0
   932  00190A                     ___lwdiv:
   933                           	opt callstack 29
   934  00190A  0E00               	movlw	0
   935  00190C  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
   936  00190E  0E00               	movlw	0
   937  001910  6E0C               	movwf	___lwdiv@quotient^0,c
   938  001912  500A               	movf	___lwdiv@divisor^0,w,c
   939  001914  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
   940  001916  B4D8               	btfsc	status,2,c
   941  001918  EF90  F00C         	goto	u771
   942  00191C  EF92  F00C         	goto	u770
   943  001920                     u771:
   944  001920  EFBA  F00C         	goto	l651
   945  001924                     u770:
   946  001924  0E01               	movlw	1
   947  001926  6E0E               	movwf	___lwdiv@counter^0,c
   948  001928  EF9A  F00C         	goto	l1452
   949  00192C                     l1450:
   950  00192C  90D8               	bcf	status,0,c
   951  00192E  360A               	rlcf	___lwdiv@divisor^0,f,c
   952  001930  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
   953  001932  2A0E               	incf	___lwdiv@counter^0,f,c
   954  001934                     l1452:
   955  001934  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
   956  001936  EF9F  F00C         	goto	u781
   957  00193A  EFA1  F00C         	goto	u780
   958  00193E                     u781:
   959  00193E  EF96  F00C         	goto	l1450
   960  001942                     u780:
   961  001942                     l1454:
   962  001942  90D8               	bcf	status,0,c
   963  001944  360C               	rlcf	___lwdiv@quotient^0,f,c
   964  001946  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
   965  001948  500A               	movf	___lwdiv@divisor^0,w,c
   966  00194A  5C08               	subwf	___lwdiv@dividend^0,w,c
   967  00194C  500B               	movf	(___lwdiv@divisor+1)^0,w,c
   968  00194E  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
   969  001950  A0D8               	btfss	status,0,c
   970  001952  EFAD  F00C         	goto	u791
   971  001956  EFAF  F00C         	goto	u790
   972  00195A                     u791:
   973  00195A  EFB4  F00C         	goto	l1462
   974  00195E                     u790:
   975  00195E  500A               	movf	___lwdiv@divisor^0,w,c
   976  001960  5E08               	subwf	___lwdiv@dividend^0,f,c
   977  001962  500B               	movf	(___lwdiv@divisor+1)^0,w,c
   978  001964  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
   979  001966  800C               	bsf	___lwdiv@quotient^0,0,c
   980  001968                     l1462:
   981  001968  90D8               	bcf	status,0,c
   982  00196A  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
   983  00196C  320A               	rrcf	___lwdiv@divisor^0,f,c
   984  00196E  2E0E               	decfsz	___lwdiv@counter^0,f,c
   985  001970  EFA1  F00C         	goto	l1454
   986  001974                     l651:
   987  001974  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
   988  001978  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
   989  00197C  0012               	return		;funcret
   990  00197E                     __end_of___lwdiv:
   991                           	opt callstack 0
   992                           
   993 ;; *************** function _reduceTime *****************
   994 ;; Defined at:
   995 ;;		line 160 in file "main.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  ms              2    0[COMRAM] unsigned int 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  i               2    2[COMRAM] unsigned int 
  1000 ;;  j               1    4[COMRAM] unsigned char 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, status,2, status,0, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;Total ram usage:        5 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; Hardware stack levels required when called:    1
  1017 ;; This function calls:
  1018 ;;		_updatePlayersTime
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text4
  1025  001348                     __ptext4:
  1026                           	opt callstack 0
  1027  001348                     _reduceTime:
  1028                           	opt callstack 29
  1029  001348                     
  1030                           ;main.c: 160: void reduceTime(unsigned int ms);main.c: 161: {;main.c: 162:     unsigned 
      +                          int i;;main.c: 163:     unsigned char j;;main.c: 165:  for (i =0; i< ms; i++)
  1031  001348  0E00               	movlw	0
  1032  00134A  6E04               	movwf	(reduceTime@i+1)^0,c
  1033  00134C  0E00               	movlw	0
  1034  00134E  6E03               	movwf	reduceTime@i^0,c
  1035  001350  EFC6  F009         	goto	l1490
  1036  001354                     l1468:
  1037                           
  1038                           ;main.c: 166:  {;main.c: 168:   for (j =0 ; j < 200; j++)
  1039  001354  0E00               	movlw	0
  1040  001356  6E05               	movwf	reduceTime@j^0,c
  1041  001358                     l85:
  1042                           
  1043                           ;main.c: 169:    {;main.c: 170:         __nop();
  1044  001358  F000               	nop	
  1045  00135A                     
  1046                           ;main.c: 172:         updatePlayersTime();
  1047  00135A  EC31  F00D         	call	_updatePlayersTime	;wreg free
  1048  00135E                     
  1049                           ;main.c: 174:         __nop();
  1050  00135E  F000               	nop	
  1051                           
  1052                           ;main.c: 176:         updatePlayersTime();
  1053  001360  EC31  F00D         	call	_updatePlayersTime	;wreg free
  1054  001364                     
  1055                           ;main.c: 178:         __nop();
  1056  001364  F000               	nop	
  1057                           
  1058                           ;main.c: 180:         updatePlayersTime();
  1059  001366  EC31  F00D         	call	_updatePlayersTime	;wreg free
  1060  00136A                     
  1061                           ;main.c: 182:         __nop();
  1062  00136A  F000               	nop	
  1063                           
  1064                           ;main.c: 184:         updatePlayersTime();
  1065  00136C  EC31  F00D         	call	_updatePlayersTime	;wreg free
  1066  001370                     
  1067                           ;main.c: 186:         __nop();
  1068  001370  F000               	nop	
  1069                           
  1070                           ;main.c: 188:         updatePlayersTime();
  1071  001372  EC31  F00D         	call	_updatePlayersTime	;wreg free
  1072  001376                     
  1073                           ;main.c: 189:    }
  1074  001376  2A05               	incf	reduceTime@j^0,f,c
  1075  001378  0EC7               	movlw	199
  1076  00137A  6405               	cpfsgt	reduceTime@j^0,c
  1077  00137C  EFC2  F009         	goto	u801
  1078  001380  EFC4  F009         	goto	u800
  1079  001384                     u801:
  1080  001384  EFAC  F009         	goto	l85
  1081  001388                     u800:
  1082  001388                     
  1083                           ;main.c: 190:  }
  1084  001388  4A03               	infsnz	reduceTime@i^0,f,c
  1085  00138A  2A04               	incf	(reduceTime@i+1)^0,f,c
  1086  00138C                     l1490:
  1087  00138C  5001               	movf	reduceTime@ms^0,w,c
  1088  00138E  5C03               	subwf	reduceTime@i^0,w,c
  1089  001390  5002               	movf	(reduceTime@ms+1)^0,w,c
  1090  001392  5804               	subwfb	(reduceTime@i+1)^0,w,c
  1091  001394  A0D8               	btfss	status,0,c
  1092  001396  EFCF  F009         	goto	u811
  1093  00139A  EFD1  F009         	goto	u810
  1094  00139E                     u811:
  1095  00139E  EFAA  F009         	goto	l1468
  1096  0013A2                     u810:
  1097  0013A2                     
  1098                           ;main.c: 192:     if (playerNumberTimeIsElapsing == 1) {
  1099  0013A2  042C               	decf	_playerNumberTimeIsElapsing^0,w,c
  1100  0013A4  102D               	iorwf	(_playerNumberTimeIsElapsing+1)^0,w,c
  1101  0013A6  A4D8               	btfss	status,2,c
  1102  0013A8  EFD8  F009         	goto	u821
  1103  0013AC  EFDA  F009         	goto	u820
  1104  0013B0                     u821:
  1105  0013B0  EF01  F00A         	goto	l1506
  1106  0013B4                     u820:
  1107  0013B4                     
  1108                           ;main.c: 193:         if (player1seconds > 0 || player1minutes > 0) {
  1109  0013B4  5034               	movf	_player1seconds^0,w,c
  1110  0013B6  1035               	iorwf	(_player1seconds+1)^0,w,c
  1111  0013B8  A4D8               	btfss	status,2,c
  1112  0013BA  EFE1  F009         	goto	u831
  1113  0013BE  EFE3  F009         	goto	u830
  1114  0013C2                     u831:
  1115  0013C2  EFEC  F009         	goto	l1498
  1116  0013C6                     u830:
  1117  0013C6  5036               	movf	_player1minutes^0,w,c
  1118  0013C8  1037               	iorwf	(_player1minutes+1)^0,w,c
  1119  0013CA  B4D8               	btfsc	status,2,c
  1120  0013CC  EFEA  F009         	goto	u841
  1121  0013D0  EFEC  F009         	goto	u840
  1122  0013D4                     u841:
  1123  0013D4  EF01  F00A         	goto	l1506
  1124  0013D8                     u840:
  1125  0013D8                     l1498:
  1126                           
  1127                           ;main.c: 194:             if (player1seconds > 0) {
  1128  0013D8  5034               	movf	_player1seconds^0,w,c
  1129  0013DA  1035               	iorwf	(_player1seconds+1)^0,w,c
  1130  0013DC  B4D8               	btfsc	status,2,c
  1131  0013DE  EFF3  F009         	goto	u851
  1132  0013E2  EFF5  F009         	goto	u850
  1133  0013E6                     u851:
  1134  0013E6  EFFA  F009         	goto	l1502
  1135  0013EA                     u850:
  1136  0013EA                     
  1137                           ;main.c: 195:                 player1seconds--;
  1138  0013EA  0634               	decf	_player1seconds^0,f,c
  1139  0013EC  A0D8               	btfss	status,0,c
  1140  0013EE  0635               	decf	(_player1seconds+1)^0,f,c
  1141                           
  1142                           ;main.c: 196:             } else {
  1143  0013F0  EF01  F00A         	goto	l1506
  1144  0013F4                     l1502:
  1145                           
  1146                           ;main.c: 197:                 player1minutes--;
  1147  0013F4  0636               	decf	_player1minutes^0,f,c
  1148  0013F6  A0D8               	btfss	status,0,c
  1149  0013F8  0637               	decf	(_player1minutes+1)^0,f,c
  1150  0013FA                     
  1151                           ;main.c: 198:                 player1seconds = 59;
  1152  0013FA  0E00               	movlw	0
  1153  0013FC  6E35               	movwf	(_player1seconds+1)^0,c
  1154  0013FE  0E3B               	movlw	59
  1155  001400  6E34               	movwf	_player1seconds^0,c
  1156  001402                     l1506:
  1157                           
  1158                           ;main.c: 203:     if (playerNumberTimeIsElapsing == 2) {
  1159  001402  0E02               	movlw	2
  1160  001404  182C               	xorwf	_playerNumberTimeIsElapsing^0,w,c
  1161  001406  102D               	iorwf	(_playerNumberTimeIsElapsing+1)^0,w,c
  1162  001408  A4D8               	btfss	status,2,c
  1163  00140A  EF09  F00A         	goto	u861
  1164  00140E  EF0B  F00A         	goto	u860
  1165  001412                     u861:
  1166  001412  EF32  F00A         	goto	l100
  1167  001416                     u860:
  1168  001416                     
  1169                           ;main.c: 204:         if (player1seconds > 0 || player1minutes > 0) {
  1170  001416  5034               	movf	_player1seconds^0,w,c
  1171  001418  1035               	iorwf	(_player1seconds+1)^0,w,c
  1172  00141A  A4D8               	btfss	status,2,c
  1173  00141C  EF12  F00A         	goto	u871
  1174  001420  EF14  F00A         	goto	u870
  1175  001424                     u871:
  1176  001424  EF1D  F00A         	goto	l1512
  1177  001428                     u870:
  1178  001428  5036               	movf	_player1minutes^0,w,c
  1179  00142A  1037               	iorwf	(_player1minutes+1)^0,w,c
  1180  00142C  B4D8               	btfsc	status,2,c
  1181  00142E  EF1B  F00A         	goto	u881
  1182  001432  EF1D  F00A         	goto	u880
  1183  001436                     u881:
  1184  001436  EF32  F00A         	goto	l100
  1185  00143A                     u880:
  1186  00143A                     l1512:
  1187                           
  1188                           ;main.c: 205:             if (player2seconds > 0) {
  1189  00143A  5030               	movf	_player2seconds^0,w,c
  1190  00143C  1031               	iorwf	(_player2seconds+1)^0,w,c
  1191  00143E  B4D8               	btfsc	status,2,c
  1192  001440  EF24  F00A         	goto	u891
  1193  001444  EF26  F00A         	goto	u890
  1194  001448                     u891:
  1195  001448  EF2B  F00A         	goto	l1516
  1196  00144C                     u890:
  1197  00144C                     
  1198                           ;main.c: 206:                 player2seconds--;
  1199  00144C  0630               	decf	_player2seconds^0,f,c
  1200  00144E  A0D8               	btfss	status,0,c
  1201  001450  0631               	decf	(_player2seconds+1)^0,f,c
  1202                           
  1203                           ;main.c: 207:             } else {
  1204  001452  EF32  F00A         	goto	l100
  1205  001456                     l1516:
  1206                           
  1207                           ;main.c: 208:                 player2minutes--;
  1208  001456  0632               	decf	_player2minutes^0,f,c
  1209  001458  A0D8               	btfss	status,0,c
  1210  00145A  0633               	decf	(_player2minutes+1)^0,f,c
  1211  00145C                     
  1212                           ;main.c: 209:                 player2seconds = 59;
  1213  00145C  0E00               	movlw	0
  1214  00145E  6E31               	movwf	(_player2seconds+1)^0,c
  1215  001460  0E3B               	movlw	59
  1216  001462  6E30               	movwf	_player2seconds^0,c
  1217  001464                     l100:
  1218  001464  0012               	return		;funcret
  1219  001466                     __end_of_reduceTime:
  1220                           	opt callstack 0
  1221                           
  1222 ;; *************** function _updatePlayersTime *****************
  1223 ;; Defined at:
  1224 ;;		line 147 in file "main.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;Total ram usage:        0 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		_reduceTime
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text5
  1253  001A62                     __ptext5:
  1254                           	opt callstack 0
  1255  001A62                     _updatePlayersTime:
  1256                           	opt callstack 30
  1257  001A62                     
  1258                           ;main.c: 149:     if(PORTBbits.RB3 == 0) {
  1259  001A62  B681               	btfsc	129,3,c	;volatile
  1260  001A64  EF36  F00D         	goto	u221
  1261  001A68  EF38  F00D         	goto	u220
  1262  001A6C                     u221:
  1263  001A6C  EF3C  F00D         	goto	l1004
  1264  001A70                     u220:
  1265  001A70                     
  1266                           ;main.c: 150:         playerNumberTimeIsElapsing = 2;
  1267  001A70  0E00               	movlw	0
  1268  001A72  6E2D               	movwf	(_playerNumberTimeIsElapsing+1)^0,c
  1269  001A74  0E02               	movlw	2
  1270  001A76  6E2C               	movwf	_playerNumberTimeIsElapsing^0,c
  1271  001A78                     l1004:
  1272                           
  1273                           ;main.c: 154:     if((PORTBbits.RB5 == 0))
  1274  001A78  BA81               	btfsc	129,5,c	;volatile
  1275  001A7A  EF41  F00D         	goto	u231
  1276  001A7E  EF43  F00D         	goto	u230
  1277  001A82                     u231:
  1278  001A82  EF47  F00D         	goto	l80
  1279  001A86                     u230:
  1280  001A86                     
  1281                           ;main.c: 155:     {;main.c: 156:         playerNumberTimeIsElapsing = 1;
  1282  001A86  0E00               	movlw	0
  1283  001A88  6E2D               	movwf	(_playerNumberTimeIsElapsing+1)^0,c
  1284  001A8A  0E01               	movlw	1
  1285  001A8C  6E2C               	movwf	_playerNumberTimeIsElapsing^0,c
  1286  001A8E                     l80:
  1287  001A8E  0012               	return		;funcret
  1288  001A90                     __end_of_updatePlayersTime:
  1289                           	opt callstack 0
  1290                           
  1291 ;; *************** function _printTime *****************
  1292 ;; Defined at:
  1293 ;;		line 298 in file "main.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  player2minut    5   32[COMRAM] unsigned char [5]
  1298 ;;  player1minut    5   27[COMRAM] unsigned char [5]
  1299 ;;  player2secon    3   40[COMRAM] unsigned char [3]
  1300 ;;  player1secon    3   37[COMRAM] unsigned char [3]
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;Total ram usage:       16 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    3
  1317 ;; This function calls:
  1318 ;;		_cprog_itos
  1319 ;;		_delay
  1320 ;;		_lcd_cmd
  1321 ;;		_lcd_str
  1322 ;; This function is called by:
  1323 ;;		_main
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text6
  1328  00105C                     __ptext6:
  1329                           	opt callstack 0
  1330  00105C                     _printTime:
  1331                           	opt callstack 27
  1332  00105C                     
  1333                           ;main.c: 300:     char player1minutesBuffer[5];;main.c: 301:     char player1secondsBuff
      +                          er[3];;main.c: 303:     char player2minutesBuffer[5];;main.c: 304:     char player2secon
      +                          dsBuffer[3];;main.c: 306:     cprog_itos(player1minutes, player1minutesBuffer, 5, 10);
  1334  00105C  0E1C               	movlw	low printTime@player1minutesBuffer
  1335  00105E  6E0B               	movwf	cprog_itos@buf^0,c
  1336  001060  0E00               	movlw	high printTime@player1minutesBuffer
  1337  001062  6E0C               	movwf	(cprog_itos@buf+1)^0,c
  1338  001064  0E00               	movlw	0
  1339  001066  6E0E               	movwf	(cprog_itos@size+1)^0,c
  1340  001068  0E05               	movlw	5
  1341  00106A  6E0D               	movwf	cprog_itos@size^0,c
  1342  00106C  0E00               	movlw	0
  1343  00106E  6E10               	movwf	(cprog_itos@radix+1)^0,c
  1344  001070  0E0A               	movlw	10
  1345  001072  6E0F               	movwf	cprog_itos@radix^0,c
  1346  001074  5036               	movf	_player1minutes^0,w,c
  1347  001076  EC14  F009         	call	_cprog_itos
  1348                           
  1349                           ;main.c: 307:     cprog_itos(player1seconds, player1secondsBuffer, 5, 10);
  1350  00107A  0E26               	movlw	low printTime@player1secondsBuffer
  1351  00107C  6E0B               	movwf	cprog_itos@buf^0,c
  1352  00107E  0E00               	movlw	high printTime@player1secondsBuffer
  1353  001080  6E0C               	movwf	(cprog_itos@buf+1)^0,c
  1354  001082  0E00               	movlw	0
  1355  001084  6E0E               	movwf	(cprog_itos@size+1)^0,c
  1356  001086  0E05               	movlw	5
  1357  001088  6E0D               	movwf	cprog_itos@size^0,c
  1358  00108A  0E00               	movlw	0
  1359  00108C  6E10               	movwf	(cprog_itos@radix+1)^0,c
  1360  00108E  0E0A               	movlw	10
  1361  001090  6E0F               	movwf	cprog_itos@radix^0,c
  1362  001092  5034               	movf	_player1seconds^0,w,c
  1363  001094  EC14  F009         	call	_cprog_itos
  1364                           
  1365                           ;main.c: 309:     cprog_itos(player2minutes, player2minutesBuffer, 5, 10);
  1366  001098  0E21               	movlw	low printTime@player2minutesBuffer
  1367  00109A  6E0B               	movwf	cprog_itos@buf^0,c
  1368  00109C  0E00               	movlw	high printTime@player2minutesBuffer
  1369  00109E  6E0C               	movwf	(cprog_itos@buf+1)^0,c
  1370  0010A0  0E00               	movlw	0
  1371  0010A2  6E0E               	movwf	(cprog_itos@size+1)^0,c
  1372  0010A4  0E05               	movlw	5
  1373  0010A6  6E0D               	movwf	cprog_itos@size^0,c
  1374  0010A8  0E00               	movlw	0
  1375  0010AA  6E10               	movwf	(cprog_itos@radix+1)^0,c
  1376  0010AC  0E0A               	movlw	10
  1377  0010AE  6E0F               	movwf	cprog_itos@radix^0,c
  1378  0010B0  5032               	movf	_player2minutes^0,w,c
  1379  0010B2  EC14  F009         	call	_cprog_itos
  1380                           
  1381                           ;main.c: 310:     cprog_itos(player2seconds, player2secondsBuffer, 5, 10);
  1382  0010B6  0E29               	movlw	low printTime@player2secondsBuffer
  1383  0010B8  6E0B               	movwf	cprog_itos@buf^0,c
  1384  0010BA  0E00               	movlw	high printTime@player2secondsBuffer
  1385  0010BC  6E0C               	movwf	(cprog_itos@buf+1)^0,c
  1386  0010BE  0E00               	movlw	0
  1387  0010C0  6E0E               	movwf	(cprog_itos@size+1)^0,c
  1388  0010C2  0E05               	movlw	5
  1389  0010C4  6E0D               	movwf	cprog_itos@size^0,c
  1390  0010C6  0E00               	movlw	0
  1391  0010C8  6E10               	movwf	(cprog_itos@radix+1)^0,c
  1392  0010CA  0E0A               	movlw	10
  1393  0010CC  6E0F               	movwf	cprog_itos@radix^0,c
  1394  0010CE  5030               	movf	_player2seconds^0,w,c
  1395  0010D0  EC14  F009         	call	_cprog_itos
  1396  0010D4                     
  1397                           ;main.c: 312:     if ((player1minutes == 0 && player1seconds == 0) || (player2minutes ==
      +                           0 && player2seconds == 0)) {
  1398  0010D4  5036               	movf	_player1minutes^0,w,c
  1399  0010D6  1037               	iorwf	(_player1minutes+1)^0,w,c
  1400  0010D8  A4D8               	btfss	status,2,c
  1401  0010DA  EF71  F008         	goto	u901
  1402  0010DE  EF73  F008         	goto	u900
  1403  0010E2                     u901:
  1404  0010E2  EF7C  F008         	goto	l1550
  1405  0010E6                     u900:
  1406  0010E6  5034               	movf	_player1seconds^0,w,c
  1407  0010E8  1035               	iorwf	(_player1seconds+1)^0,w,c
  1408  0010EA  B4D8               	btfsc	status,2,c
  1409  0010EC  EF7A  F008         	goto	u911
  1410  0010F0  EF7C  F008         	goto	u910
  1411  0010F4                     u911:
  1412  0010F4  EF8E  F008         	goto	l1554
  1413  0010F8                     u910:
  1414  0010F8                     l1550:
  1415  0010F8  5032               	movf	_player2minutes^0,w,c
  1416  0010FA  1033               	iorwf	(_player2minutes+1)^0,w,c
  1417  0010FC  A4D8               	btfss	status,2,c
  1418  0010FE  EF83  F008         	goto	u921
  1419  001102  EF85  F008         	goto	u920
  1420  001106                     u921:
  1421  001106  EFDA  F008         	goto	l1580
  1422  00110A                     u920:
  1423  00110A  5030               	movf	_player2seconds^0,w,c
  1424  00110C  1031               	iorwf	(_player2seconds+1)^0,w,c
  1425  00110E  A4D8               	btfss	status,2,c
  1426  001110  EF8C  F008         	goto	u931
  1427  001114  EF8E  F008         	goto	u930
  1428  001118                     u931:
  1429  001118  EFDA  F008         	goto	l1580
  1430  00111C                     u930:
  1431  00111C                     l1554:
  1432                           
  1433                           ;main.c: 313:         if (player1minutes == 0 && player1seconds == 0) {
  1434  00111C  5036               	movf	_player1minutes^0,w,c
  1435  00111E  1037               	iorwf	(_player1minutes+1)^0,w,c
  1436  001120  A4D8               	btfss	status,2,c
  1437  001122  EF95  F008         	goto	u941
  1438  001126  EF97  F008         	goto	u940
  1439  00112A                     u941:
  1440  00112A  EFAE  F008         	goto	l1562
  1441  00112E                     u940:
  1442  00112E  5034               	movf	_player1seconds^0,w,c
  1443  001130  1035               	iorwf	(_player1seconds+1)^0,w,c
  1444  001132  A4D8               	btfss	status,2,c
  1445  001134  EF9E  F008         	goto	u951
  1446  001138  EFA0  F008         	goto	u950
  1447  00113C                     u951:
  1448  00113C  EFAE  F008         	goto	l1562
  1449  001140                     u950:
  1450  001140                     
  1451                           ;main.c: 314:             lcd_cmd(0x01);
  1452  001140  0E01               	movlw	1
  1453  001142  EC5C  F00D         	call	_lcd_cmd
  1454                           
  1455                           ;main.c: 315:             lcd_cmd(0x80);
  1456  001146  0E80               	movlw	128
  1457  001148  EC5C  F00D         	call	_lcd_cmd
  1458  00114C                     
  1459                           ;main.c: 316:             lcd_str("GRACZ 1 PRZEGRAL");
  1460  00114C  0E12               	movlw	low STR_2
  1461  00114E  6E03               	movwf	lcd_str@str^0,c
  1462  001150  0E10               	movlw	high STR_2
  1463  001152  6E04               	movwf	(lcd_str@str+1)^0,c
  1464  001154  EC47  F00C         	call	_lcd_str	;wreg free
  1465                           
  1466                           ;main.c: 317:         } else {
  1467  001158  EFBA  F008         	goto	l1566
  1468  00115C                     l1562:
  1469                           
  1470                           ;main.c: 318:             lcd_cmd(0x01);
  1471  00115C  0E01               	movlw	1
  1472  00115E  EC5C  F00D         	call	_lcd_cmd
  1473                           
  1474                           ;main.c: 319:             lcd_cmd(0x80);
  1475  001162  0E80               	movlw	128
  1476  001164  EC5C  F00D         	call	_lcd_cmd
  1477  001168                     
  1478                           ;main.c: 320:             lcd_str("GRACZ 2 PRZEGRAL");
  1479  001168  0E23               	movlw	low STR_3
  1480  00116A  6E03               	movwf	lcd_str@str^0,c
  1481  00116C  0E10               	movlw	high STR_3
  1482  00116E  6E04               	movwf	(lcd_str@str+1)^0,c
  1483  001170  EC47  F00C         	call	_lcd_str	;wreg free
  1484  001174                     l1566:
  1485                           
  1486                           ;main.c: 323:         delay(200);
  1487  001174  0E00               	movlw	0
  1488  001176  6E02               	movwf	(delay@ms+1)^0,c
  1489  001178  0EC8               	movlw	200
  1490  00117A  6E01               	movwf	delay@ms^0,c
  1491  00117C  ECED  F00C         	call	_delay	;wreg free
  1492  001180                     
  1493                           ;main.c: 325:         playerNumberTimeIsElapsing = 0;
  1494  001180  0E00               	movlw	0
  1495  001182  6E2D               	movwf	(_playerNumberTimeIsElapsing+1)^0,c
  1496  001184  0E00               	movlw	0
  1497  001186  6E2C               	movwf	_playerNumberTimeIsElapsing^0,c
  1498  001188                     
  1499                           ;main.c: 326:         player1minutes = 0;
  1500  001188  0E00               	movlw	0
  1501  00118A  6E37               	movwf	(_player1minutes+1)^0,c
  1502  00118C  0E00               	movlw	0
  1503  00118E  6E36               	movwf	_player1minutes^0,c
  1504  001190                     
  1505                           ;main.c: 327:         player1seconds = 0;
  1506  001190  0E00               	movlw	0
  1507  001192  6E35               	movwf	(_player1seconds+1)^0,c
  1508  001194  0E00               	movlw	0
  1509  001196  6E34               	movwf	_player1seconds^0,c
  1510  001198                     
  1511                           ;main.c: 328:         player2minutes = 0;
  1512  001198  0E00               	movlw	0
  1513  00119A  6E33               	movwf	(_player2minutes+1)^0,c
  1514  00119C  0E00               	movlw	0
  1515  00119E  6E32               	movwf	_player2minutes^0,c
  1516  0011A0                     
  1517                           ;main.c: 329:         player2seconds = 0;
  1518  0011A0  0E00               	movlw	0
  1519  0011A2  6E31               	movwf	(_player2seconds+1)^0,c
  1520  0011A4  0E00               	movlw	0
  1521  0011A6  6E30               	movwf	_player2seconds^0,c
  1522  0011A8                     
  1523                           ;main.c: 331:         timeForGame = 0;
  1524  0011A8  0E00               	movlw	0
  1525  0011AA  6E2F               	movwf	(_timeForGame+1)^0,c
  1526  0011AC  0E00               	movlw	0
  1527  0011AE  6E2E               	movwf	_timeForGame^0,c
  1528                           
  1529                           ;main.c: 333:     } else {
  1530  0011B0  EF13  F009         	goto	l135
  1531  0011B4                     l1580:
  1532                           
  1533                           ;main.c: 334:         lcd_cmd(0x01);
  1534  0011B4  0E01               	movlw	1
  1535  0011B6  EC5C  F00D         	call	_lcd_cmd
  1536                           
  1537                           ;main.c: 335:         lcd_cmd(0x80);
  1538  0011BA  0E80               	movlw	128
  1539  0011BC  EC5C  F00D         	call	_lcd_cmd
  1540  0011C0                     
  1541                           ;main.c: 336:         lcd_str(player1minutesBuffer);
  1542  0011C0  0E1C               	movlw	low printTime@player1minutesBuffer
  1543  0011C2  6E03               	movwf	lcd_str@str^0,c
  1544  0011C4  0E00               	movlw	high printTime@player1minutesBuffer
  1545  0011C6  6E04               	movwf	(lcd_str@str+1)^0,c
  1546  0011C8  EC47  F00C         	call	_lcd_str	;wreg free
  1547  0011CC                     
  1548                           ;main.c: 337:         lcd_str(" MIN ");
  1549  0011CC  0E4F               	movlw	low STR_4
  1550  0011CE  6E03               	movwf	lcd_str@str^0,c
  1551  0011D0  0E10               	movlw	high STR_4
  1552  0011D2  6E04               	movwf	(lcd_str@str+1)^0,c
  1553  0011D4  EC47  F00C         	call	_lcd_str	;wreg free
  1554  0011D8                     
  1555                           ;main.c: 338:         lcd_str(player1secondsBuffer);
  1556  0011D8  0E26               	movlw	low printTime@player1secondsBuffer
  1557  0011DA  6E03               	movwf	lcd_str@str^0,c
  1558  0011DC  0E00               	movlw	high printTime@player1secondsBuffer
  1559  0011DE  6E04               	movwf	(lcd_str@str+1)^0,c
  1560  0011E0  EC47  F00C         	call	_lcd_str	;wreg free
  1561  0011E4                     
  1562                           ;main.c: 339:         lcd_str(" SEC");
  1563  0011E4  0E55               	movlw	low STR_5
  1564  0011E6  6E03               	movwf	lcd_str@str^0,c
  1565  0011E8  0E10               	movlw	high STR_5
  1566  0011EA  6E04               	movwf	(lcd_str@str+1)^0,c
  1567  0011EC  EC47  F00C         	call	_lcd_str	;wreg free
  1568                           
  1569                           ;main.c: 341:         lcd_cmd(0xC0);
  1570  0011F0  0EC0               	movlw	192
  1571  0011F2  EC5C  F00D         	call	_lcd_cmd
  1572  0011F6                     
  1573                           ;main.c: 342:         lcd_str(player2minutesBuffer);
  1574  0011F6  0E21               	movlw	low printTime@player2minutesBuffer
  1575  0011F8  6E03               	movwf	lcd_str@str^0,c
  1576  0011FA  0E00               	movlw	high printTime@player2minutesBuffer
  1577  0011FC  6E04               	movwf	(lcd_str@str+1)^0,c
  1578  0011FE  EC47  F00C         	call	_lcd_str	;wreg free
  1579  001202                     
  1580                           ;main.c: 343:         lcd_str(" MIN ");
  1581  001202  0E4F               	movlw	low STR_4
  1582  001204  6E03               	movwf	lcd_str@str^0,c
  1583  001206  0E10               	movlw	high STR_4
  1584  001208  6E04               	movwf	(lcd_str@str+1)^0,c
  1585  00120A  EC47  F00C         	call	_lcd_str	;wreg free
  1586  00120E                     
  1587                           ;main.c: 344:         lcd_str(player2secondsBuffer);
  1588  00120E  0E29               	movlw	low printTime@player2secondsBuffer
  1589  001210  6E03               	movwf	lcd_str@str^0,c
  1590  001212  0E00               	movlw	high printTime@player2secondsBuffer
  1591  001214  6E04               	movwf	(lcd_str@str+1)^0,c
  1592  001216  EC47  F00C         	call	_lcd_str	;wreg free
  1593  00121A                     
  1594                           ;main.c: 345:         lcd_str(" SEC");
  1595  00121A  0E55               	movlw	low STR_5
  1596  00121C  6E03               	movwf	lcd_str@str^0,c
  1597  00121E  0E10               	movlw	high STR_5
  1598  001220  6E04               	movwf	(lcd_str@str+1)^0,c
  1599  001222  EC47  F00C         	call	_lcd_str	;wreg free
  1600  001226                     l135:
  1601  001226  0012               	return		;funcret
  1602  001228                     __end_of_printTime:
  1603                           	opt callstack 0
  1604                           
  1605 ;; *************** function _lcd_str *****************
  1606 ;; Defined at:
  1607 ;;		line 117 in file "main.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  str             2    2[COMRAM] PTR const unsigned char 
  1610 ;;		 -> STR_9(12), STR_8(15), STR_7(5), STR_6(6), 
  1611 ;;		 -> STR_5(5), STR_4(6), STR_3(17), STR_2(17), 
  1612 ;;		 -> printTime@player2secondsBuffer(3), printTime@player2minutesBuffer(5), printTime@player1secondsBuffer(3), printTi
      +me@player1minutesBuffer(5), 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  i               1    6[COMRAM] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;Total ram usage:        5 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; Hardware stack levels required when called:    2
  1631 ;; This function calls:
  1632 ;;		_lcd_dat
  1633 ;; This function is called by:
  1634 ;;		_printTime
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text7
  1640  00188E                     __ptext7:
  1641                           	opt callstack 0
  1642  00188E                     _lcd_str:
  1643                           	opt callstack 27
  1644  00188E                     
  1645                           ;main.c: 117: void lcd_str(const char* str);main.c: 118: {;main.c: 119:  unsigned char i
      +                          =0;
  1646  00188E  0E00               	movlw	0
  1647  001890  6E07               	movwf	lcd_str@i^0,c
  1648                           
  1649                           ;main.c: 121:  while(str[i] != 0 )
  1650  001892  EF65  F00C         	goto	l1400
  1651  001896                     l1396:
  1652                           
  1653                           ;main.c: 122:  {;main.c: 123:    lcd_dat(str[i]);
  1654  001896  5007               	movf	lcd_str@i^0,w,c
  1655  001898  2403               	addwf	lcd_str@str^0,w,c
  1656  00189A  6E05               	movwf	??_lcd_str^0,c
  1657  00189C  0E00               	movlw	0
  1658  00189E  2004               	addwfc	(lcd_str@str+1)^0,w,c
  1659  0018A0  6E06               	movwf	(??_lcd_str+1)^0,c
  1660  0018A2  C005  FFF6         	movff	??_lcd_str,tblptrl
  1661  0018A6  C006  FFF7         	movff	??_lcd_str+1,tblptrh
  1662  0018AA  0E00               	movlw	low (__smallconst shr (0+16))
  1663  0018AC  6EF8               	movwf	tblptru,c
  1664  0018AE  0E0F               	movlw	(high __ramtop+-1)
  1665  0018B0  64F7               	cpfsgt	tblptrh,c
  1666  0018B2  D003               	bra	u687
  1667  0018B4  0008               	tblrd		*
  1668  0018B6  50F5               	movf	tablat,w,c
  1669  0018B8  D005               	bra	u680
  1670  0018BA                     u687:
  1671  0018BA  CFF6 FFE1          	movff	tblptrl,fsr1l
  1672  0018BE  CFF7 FFE2          	movff	tblptrh,fsr1h
  1673  0018C2  50E7               	movf	indf1,w,c
  1674  0018C4                     u680:
  1675  0018C4  EC53  F00D         	call	_lcd_dat
  1676  0018C8                     
  1677                           ;main.c: 124:    i++;
  1678  0018C8  2A07               	incf	lcd_str@i^0,f,c
  1679  0018CA                     l1400:
  1680                           
  1681                           ;main.c: 121:  while(str[i] != 0 )
  1682  0018CA  5007               	movf	lcd_str@i^0,w,c
  1683  0018CC  2403               	addwf	lcd_str@str^0,w,c
  1684  0018CE  6E05               	movwf	??_lcd_str^0,c
  1685  0018D0  0E00               	movlw	0
  1686  0018D2  2004               	addwfc	(lcd_str@str+1)^0,w,c
  1687  0018D4  6E06               	movwf	(??_lcd_str+1)^0,c
  1688  0018D6  C005  FFF6         	movff	??_lcd_str,tblptrl
  1689  0018DA  C006  FFF7         	movff	??_lcd_str+1,tblptrh
  1690  0018DE  0E00               	movlw	low (__smallconst shr (0+16))
  1691  0018E0  6EF8               	movwf	tblptru,c
  1692  0018E2  0E0F               	movlw	(high __ramtop+-1)
  1693  0018E4  64F7               	cpfsgt	tblptrh,c
  1694  0018E6  D003               	bra	u697
  1695  0018E8  0008               	tblrd		*
  1696  0018EA  50F5               	movf	tablat,w,c
  1697  0018EC  D005               	bra	u690
  1698  0018EE                     u697:
  1699  0018EE  CFF6 FFE1          	movff	tblptrl,fsr1l
  1700  0018F2  CFF7 FFE2          	movff	tblptrh,fsr1h
  1701  0018F6  50E7               	movf	indf1,w,c
  1702  0018F8                     u690:
  1703  0018F8  0900               	iorlw	0
  1704  0018FA  A4D8               	btfss	status,2,c
  1705  0018FC  EF82  F00C         	goto	u701
  1706  001900  EF84  F00C         	goto	u700
  1707  001904                     u701:
  1708  001904  EF4B  F00C         	goto	l1396
  1709  001908                     u700:
  1710  001908  0012               	return		;funcret
  1711  00190A                     __end_of_lcd_str:
  1712                           	opt callstack 0
  1713                           
  1714 ;; *************** function _lcd_dat *****************
  1715 ;; Defined at:
  1716 ;;		line 106 in file "main.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  val             1    wreg     unsigned char 
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  val             1    1[COMRAM] unsigned char 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;Total ram usage:        1 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; Hardware stack levels required when called:    1
  1737 ;; This function calls:
  1738 ;;		_lcd_wr
  1739 ;; This function is called by:
  1740 ;;		_lcd_str
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text8
  1745  001AA6                     __ptext8:
  1746                           	opt callstack 0
  1747  001AA6                     _lcd_dat:
  1748                           	opt callstack 27
  1749                           
  1750                           ;incstack = 0
  1751                           ;lcd_dat@val stored from wreg
  1752  001AA6  6E02               	movwf	lcd_dat@val^0,c
  1753  001AA8                     
  1754                           ;main.c: 106: void lcd_dat(unsigned char val);main.c: 107: {;main.c: 108:  PORTEbits.RE1
      +                          =1;
  1755  001AA8  8284               	bsf	132,1,c	;volatile
  1756  001AAA                     
  1757                           ;main.c: 109:         lcd_wr(val);
  1758  001AAA  5002               	movf	lcd_dat@val^0,w,c
  1759  001AAC  EC65  F00D         	call	_lcd_wr
  1760  001AB0                     
  1761                           ;main.c: 110:         PORTEbits.RE2=1;
  1762  001AB0  8484               	bsf	132,2,c	;volatile
  1763  001AB2                     
  1764                           ;main.c: 112:         PORTEbits.RE1=0;
  1765  001AB2  9284               	bcf	132,1,c	;volatile
  1766  001AB4                     
  1767                           ;main.c: 114:  PORTEbits.RE1=1;
  1768  001AB4  8284               	bsf	132,1,c	;volatile
  1769  001AB6  0012               	return		;funcret
  1770  001AB8                     __end_of_lcd_dat:
  1771                           	opt callstack 0
  1772                           
  1773 ;; *************** function _cprog_itos *****************
  1774 ;; Defined at:
  1775 ;;		line 245 in file "main.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;  value           1    wreg     unsigned char 
  1778 ;;  buf             2   10[COMRAM] PTR unsigned char 
  1779 ;;		 -> printTime@player2secondsBuffer(3), printTime@player2minutesBuffer(5), printTime@player1secondsBuffer(3), printTi
      +me@player1minutesBuffer(5), 
  1780 ;;  size            2   12[COMRAM] unsigned int 
  1781 ;;  radix           2   14[COMRAM] int 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  value           1   24[COMRAM] unsigned char 
  1784 ;;  n               2   25[COMRAM] unsigned int 
  1785 ;;  sign            2   22[COMRAM] int 
  1786 ;;  digits          2   20[COMRAM] PTR const unsigned char 
  1787 ;;		 -> STR_1(17), 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  2   10[COMRAM] PTR unsigned char 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1797 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;Total ram usage:       17 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    1
  1804 ;; This function calls:
  1805 ;;		___awdiv
  1806 ;;		___awmod
  1807 ;;		_abs
  1808 ;;		_cprog_strrev
  1809 ;; This function is called by:
  1810 ;;		_printTime
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text9
  1815  001228                     __ptext9:
  1816                           	opt callstack 0
  1817  001228                     _cprog_itos:
  1818                           	opt callstack 28
  1819                           
  1820                           ;incstack = 0
  1821                           ;cprog_itos@value stored from wreg
  1822  001228  6E19               	movwf	cprog_itos@value^0,c
  1823  00122A                     
  1824                           ;main.c: 245: char *cprog_itos(unsigned char value, char *buf, size_t size, int radix);m
      +                          ain.c: 246: {;main.c: 247:     const char *digits = "0123456789ABCDEF";
  1825  00122A  0E01               	movlw	low STR_1
  1826  00122C  6E15               	movwf	cprog_itos@digits^0,c
  1827  00122E  0E10               	movlw	high STR_1
  1828  001230  6E16               	movwf	(cprog_itos@digits+1)^0,c
  1829                           
  1830                           ;main.c: 249:     int sign = value < 0;
  1831  001232  0E00               	movlw	0
  1832  001234  6E18               	movwf	(cprog_itos@sign+1)^0,c
  1833  001236  0E00               	movlw	0
  1834  001238  6E17               	movwf	cprog_itos@sign^0,c
  1835                           
  1836                           ;main.c: 250:     size_t n = 0;
  1837  00123A  0E00               	movlw	0
  1838  00123C  6E1B               	movwf	(cprog_itos@n+1)^0,c
  1839  00123E  0E00               	movlw	0
  1840  001240  6E1A               	movwf	cprog_itos@n^0,c
  1841  001242                     
  1842                           ;main.c: 252:     if (radix == 0) {
  1843  001242  500F               	movf	cprog_itos@radix^0,w,c
  1844  001244  1010               	iorwf	(cprog_itos@radix+1)^0,w,c
  1845  001246  A4D8               	btfss	status,2,c
  1846  001248  EF28  F009         	goto	u731
  1847  00124C  EF2A  F009         	goto	u730
  1848  001250                     u731:
  1849  001250  EF2E  F009         	goto	l1424
  1850  001254                     u730:
  1851  001254                     
  1852                           ;main.c: 253:         radix = 10;
  1853  001254  0E00               	movlw	0
  1854  001256  6E10               	movwf	(cprog_itos@radix+1)^0,c
  1855  001258  0E0A               	movlw	10
  1856  00125A  6E0F               	movwf	cprog_itos@radix^0,c
  1857  00125C                     l1424:
  1858                           
  1859                           ;main.c: 257:         buf[n++] = digits[abs(value % radix)];
  1860  00125C  C019  F001         	movff	cprog_itos@value,___awmod@dividend
  1861  001260  6A02               	clrf	(___awmod@dividend+1)^0,c
  1862  001262  C00F  F003         	movff	cprog_itos@radix,___awmod@divisor
  1863  001266  C010  F004         	movff	cprog_itos@radix+1,___awmod@divisor+1
  1864  00126A  EC17  F00B         	call	___awmod	;wreg free
  1865  00126E  C001  F007         	movff	?___awmod,abs@a
  1866  001272  C002  F008         	movff	?___awmod+1,abs@a+1
  1867  001276  EC11  F00D         	call	_abs	;wreg free
  1868  00127A  C015  F011         	movff	cprog_itos@digits,??_cprog_itos
  1869  00127E  C016  F012         	movff	cprog_itos@digits+1,??_cprog_itos+1
  1870  001282  5007               	movf	?_abs^0,w,c
  1871  001284  2611               	addwf	??_cprog_itos^0,f,c
  1872  001286  5008               	movf	(?_abs+1)^0,w,c
  1873  001288  2212               	addwfc	(??_cprog_itos+1)^0,f,c
  1874  00128A  C011  FFF6         	movff	??_cprog_itos,tblptrl
  1875  00128E  C012  FFF7         	movff	??_cprog_itos+1,tblptrh
  1876  001292                     	if	0	;tblptru may be non-zero
  1877  001292                     	endif
  1878  001292                     	if	0	;tblptru may be non-zero
  1879  001292                     	endif
  1880  001292  501A               	movf	cprog_itos@n^0,w,c
  1881  001294  240B               	addwf	cprog_itos@buf^0,w,c
  1882  001296  6ED9               	movwf	fsr2l,c
  1883  001298  501B               	movf	(cprog_itos@n+1)^0,w,c
  1884  00129A  200C               	addwfc	(cprog_itos@buf+1)^0,w,c
  1885  00129C  6EDA               	movwf	fsr2h,c
  1886  00129E  0008               	tblrd		*
  1887  0012A0  CFF5 FFDF          	movff	tablat,indf2
  1888  0012A4  4A1A               	infsnz	cprog_itos@n^0,f,c
  1889  0012A6  2A1B               	incf	(cprog_itos@n+1)^0,f,c
  1890  0012A8  0EFF               	movlw	255
  1891  0012AA  6E11               	movwf	??_cprog_itos^0,c
  1892  0012AC  0EFF               	movlw	255
  1893  0012AE  6E12               	movwf	(??_cprog_itos+1)^0,c
  1894  0012B0  C00D  F013         	movff	cprog_itos@size,??_cprog_itos+2
  1895  0012B4  C00E  F014         	movff	cprog_itos@size+1,??_cprog_itos+3
  1896  0012B8  5011               	movf	??_cprog_itos^0,w,c
  1897  0012BA  2613               	addwf	(??_cprog_itos+2)^0,f,c
  1898  0012BC  5012               	movf	(??_cprog_itos+1)^0,w,c
  1899  0012BE  2214               	addwfc	(??_cprog_itos+3)^0,f,c
  1900  0012C0  5013               	movf	(??_cprog_itos+2)^0,w,c
  1901  0012C2  5C1A               	subwf	cprog_itos@n^0,w,c
  1902  0012C4  5014               	movf	(??_cprog_itos+3)^0,w,c
  1903  0012C6  581B               	subwfb	(cprog_itos@n+1)^0,w,c
  1904  0012C8  B0D8               	btfsc	status,0,c
  1905  0012CA  EF69  F009         	goto	u741
  1906  0012CE  EF6B  F009         	goto	u740
  1907  0012D2                     u741:
  1908  0012D2  EF7E  F009         	goto	l1432
  1909  0012D6                     u740:
  1910  0012D6  C019  F001         	movff	cprog_itos@value,___awdiv@dividend
  1911  0012DA  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1912  0012DC  C00F  F003         	movff	cprog_itos@radix,___awdiv@divisor
  1913  0012E0  C010  F004         	movff	cprog_itos@radix+1,___awdiv@divisor+1
  1914  0012E4  ECB5  F00A         	call	___awdiv	;wreg free
  1915  0012E8  5001               	movf	?___awdiv^0,w,c
  1916  0012EA  6E19               	movwf	cprog_itos@value^0,c
  1917  0012EC  5019               	movf	cprog_itos@value^0,w,c
  1918  0012EE  A4D8               	btfss	status,2,c
  1919  0012F0  EF7C  F009         	goto	u751
  1920  0012F4  EF7E  F009         	goto	u750
  1921  0012F8                     u751:
  1922  0012F8  EF2E  F009         	goto	l1424
  1923  0012FC                     u750:
  1924  0012FC                     l1432:
  1925                           
  1926                           ;main.c: 260:     if (sign)
  1927  0012FC  5017               	movf	cprog_itos@sign^0,w,c
  1928  0012FE  1018               	iorwf	(cprog_itos@sign+1)^0,w,c
  1929  001300  B4D8               	btfsc	status,2,c
  1930  001302  EF85  F009         	goto	u761
  1931  001306  EF87  F009         	goto	u760
  1932  00130A                     u761:
  1933  00130A  EF91  F009         	goto	l1438
  1934  00130E                     u760:
  1935  00130E                     
  1936                           ;main.c: 261:         buf[n++] = '-';
  1937  00130E  501A               	movf	cprog_itos@n^0,w,c
  1938  001310  240B               	addwf	cprog_itos@buf^0,w,c
  1939  001312  6ED9               	movwf	fsr2l,c
  1940  001314  501B               	movf	(cprog_itos@n+1)^0,w,c
  1941  001316  200C               	addwfc	(cprog_itos@buf+1)^0,w,c
  1942  001318  6EDA               	movwf	fsr2h,c
  1943  00131A  0E2D               	movlw	45
  1944  00131C  6EDF               	movwf	indf2,c
  1945  00131E  4A1A               	infsnz	cprog_itos@n^0,f,c
  1946  001320  2A1B               	incf	(cprog_itos@n+1)^0,f,c
  1947  001322                     l1438:
  1948                           
  1949                           ;main.c: 263:     buf[n] = '\0';
  1950  001322  501A               	movf	cprog_itos@n^0,w,c
  1951  001324  240B               	addwf	cprog_itos@buf^0,w,c
  1952  001326  6ED9               	movwf	fsr2l,c
  1953  001328  501B               	movf	(cprog_itos@n+1)^0,w,c
  1954  00132A  200C               	addwfc	(cprog_itos@buf+1)^0,w,c
  1955  00132C  6EDA               	movwf	fsr2h,c
  1956  00132E  0E00               	movlw	0
  1957  001330  6EDF               	movwf	indf2,c
  1958  001332                     
  1959                           ;main.c: 265:     return cprog_strrev(buf, n);;	Return value of _cprog_itos is never use
      +                          d
  1960  001332  C00B  F001         	movff	cprog_itos@buf,cprog_strrev@s
  1961  001336  C00C  F002         	movff	cprog_itos@buf+1,cprog_strrev@s+1
  1962  00133A  C01A  F003         	movff	cprog_itos@n,cprog_strrev@n
  1963  00133E  C01B  F004         	movff	cprog_itos@n+1,cprog_strrev@n+1
  1964  001342  EC08  F00C         	call	_cprog_strrev	;wreg free
  1965  001346  0012               	return		;funcret
  1966  001348                     __end_of_cprog_itos:
  1967                           	opt callstack 0
  1968                           
  1969 ;; *************** function _cprog_strrev *****************
  1970 ;; Defined at:
  1971 ;;		line 232 in file "main.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  s               2    0[COMRAM] PTR unsigned char 
  1974 ;;		 -> printTime@player2secondsBuffer(3), printTime@player2minutesBuffer(5), printTime@player1secondsBuffer(3), printTi
      +me@player1minutesBuffer(5), 
  1975 ;;  n               2    2[COMRAM] unsigned int 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  savev           1    4[COMRAM] unsigned char 
  1978 ;;  j               2    7[COMRAM] unsigned int 
  1979 ;;  i               2    5[COMRAM] unsigned int 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  2    0[COMRAM] PTR unsigned char 
  1982 ;; Registers used:
  1983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1989 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;Total ram usage:        9 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_cprog_itos
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text10
  2003  001810                     __ptext10:
  2004                           	opt callstack 0
  2005  001810                     _cprog_strrev:
  2006                           	opt callstack 28
  2007  001810                     
  2008                           ;main.c: 232: char *cprog_strrev(char *s, size_t n);main.c: 233: {;main.c: 234:     size
      +                          _t i, j;;main.c: 236:     for (i = 0, j = n - 1; i < j; i++, j--) {
  2009  001810  0E00               	movlw	0
  2010  001812  6E07               	movwf	(cprog_strrev@i+1)^0,c
  2011  001814  0E00               	movlw	0
  2012  001816  6E06               	movwf	cprog_strrev@i^0,c
  2013  001818  0EFF               	movlw	255
  2014  00181A  2403               	addwf	cprog_strrev@n^0,w,c
  2015  00181C  6E08               	movwf	cprog_strrev@j^0,c
  2016  00181E  0EFF               	movlw	255
  2017  001820  2004               	addwfc	(cprog_strrev@n+1)^0,w,c
  2018  001822  6E09               	movwf	(cprog_strrev@j+1)^0,c
  2019  001824  EF37  F00C         	goto	l1284
  2020  001828                     l1274:
  2021                           
  2022                           ;main.c: 237:         char savev = s[i];
  2023  001828  5006               	movf	cprog_strrev@i^0,w,c
  2024  00182A  2401               	addwf	cprog_strrev@s^0,w,c
  2025  00182C  6ED9               	movwf	fsr2l,c
  2026  00182E  5007               	movf	(cprog_strrev@i+1)^0,w,c
  2027  001830  2002               	addwfc	(cprog_strrev@s+1)^0,w,c
  2028  001832  6EDA               	movwf	fsr2h,c
  2029  001834  50DF               	movf	indf2,w,c
  2030  001836  6E05               	movwf	cprog_strrev@savev^0,c
  2031  001838                     
  2032                           ;main.c: 238:         s[i] = s[j];
  2033  001838  5008               	movf	cprog_strrev@j^0,w,c
  2034  00183A  2401               	addwf	cprog_strrev@s^0,w,c
  2035  00183C  6ED9               	movwf	fsr2l,c
  2036  00183E  5009               	movf	(cprog_strrev@j+1)^0,w,c
  2037  001840  2002               	addwfc	(cprog_strrev@s+1)^0,w,c
  2038  001842  6EDA               	movwf	fsr2h,c
  2039  001844  5006               	movf	cprog_strrev@i^0,w,c
  2040  001846  2401               	addwf	cprog_strrev@s^0,w,c
  2041  001848  6EE1               	movwf	fsr1l,c
  2042  00184A  5007               	movf	(cprog_strrev@i+1)^0,w,c
  2043  00184C  2002               	addwfc	(cprog_strrev@s+1)^0,w,c
  2044  00184E  6EE2               	movwf	fsr1h,c
  2045  001850  CFDF FFE7          	movff	indf2,indf1
  2046  001854                     
  2047                           ;main.c: 239:         s[j] = savev;
  2048  001854  5008               	movf	cprog_strrev@j^0,w,c
  2049  001856  2401               	addwf	cprog_strrev@s^0,w,c
  2050  001858  6ED9               	movwf	fsr2l,c
  2051  00185A  5009               	movf	(cprog_strrev@j+1)^0,w,c
  2052  00185C  2002               	addwfc	(cprog_strrev@s+1)^0,w,c
  2053  00185E  6EDA               	movwf	fsr2h,c
  2054  001860  C005  FFDF         	movff	cprog_strrev@savev,indf2
  2055  001864                     
  2056                           ;main.c: 240:     }
  2057  001864  4A06               	infsnz	cprog_strrev@i^0,f,c
  2058  001866  2A07               	incf	(cprog_strrev@i+1)^0,f,c
  2059  001868  0608               	decf	cprog_strrev@j^0,f,c
  2060  00186A  A0D8               	btfss	status,0,c
  2061  00186C  0609               	decf	(cprog_strrev@j+1)^0,f,c
  2062  00186E                     l1284:
  2063  00186E  5008               	movf	cprog_strrev@j^0,w,c
  2064  001870  5C06               	subwf	cprog_strrev@i^0,w,c
  2065  001872  5009               	movf	(cprog_strrev@j+1)^0,w,c
  2066  001874  5807               	subwfb	(cprog_strrev@i+1)^0,w,c
  2067  001876  A0D8               	btfss	status,0,c
  2068  001878  EF40  F00C         	goto	u521
  2069  00187C  EF42  F00C         	goto	u520
  2070  001880                     u521:
  2071  001880  EF14  F00C         	goto	l1274
  2072  001884                     u520:
  2073  001884                     
  2074                           ;main.c: 242:     return s;
  2075  001884  C001  F001         	movff	cprog_strrev@s,?_cprog_strrev
  2076  001888  C002  F002         	movff	cprog_strrev@s+1,?_cprog_strrev+1
  2077  00188C  0012               	return		;funcret
  2078  00188E                     __end_of_cprog_strrev:
  2079                           	opt callstack 0
  2080                           
  2081 ;; *************** function _abs *****************
  2082 ;; Defined at:
  2083 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  a               2    6[COMRAM] int 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  2    6[COMRAM] int 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;Total ram usage:        4 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_cprog_itos
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text11
  2111  001A22                     __ptext11:
  2112                           	opt callstack 0
  2113  001A22                     _abs:
  2114                           	opt callstack 28
  2115  001A22  BE08               	btfsc	(abs@a+1)^0,7,c
  2116  001A24  EF1E  F00D         	goto	u530
  2117  001A28  5008               	movf	(abs@a+1)^0,w,c
  2118  001A2A  E106               	bnz	u531
  2119  001A2C  0407               	decf	abs@a^0,w,c
  2120  001A2E  B0D8               	btfsc	status,0,c
  2121  001A30  EF1C  F00D         	goto	u531
  2122  001A34  EF1E  F00D         	goto	u530
  2123  001A38                     u531:
  2124  001A38  EF2C  F00D         	goto	l835
  2125  001A3C                     u530:
  2126  001A3C  C007  F009         	movff	abs@a,??_abs
  2127  001A40  C008  F00A         	movff	abs@a+1,??_abs+1
  2128  001A44  1E09               	comf	??_abs^0,f,c
  2129  001A46  1E0A               	comf	(??_abs+1)^0,f,c
  2130  001A48  4A09               	infsnz	??_abs^0,f,c
  2131  001A4A  2A0A               	incf	(??_abs+1)^0,f,c
  2132  001A4C  C009  F007         	movff	??_abs,?_abs
  2133  001A50  C00A  F008         	movff	??_abs+1,?_abs+1
  2134  001A54  EF30  F00D         	goto	l838
  2135  001A58                     l835:
  2136  001A58  C007  F007         	movff	abs@a,?_abs
  2137  001A5C  C008  F008         	movff	abs@a+1,?_abs+1
  2138  001A60                     l838:
  2139  001A60  0012               	return		;funcret
  2140  001A62                     __end_of_abs:
  2141                           	opt callstack 0
  2142                           
  2143 ;; *************** function ___awmod *****************
  2144 ;; Defined at:
  2145 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  dividend        2    0[COMRAM] int 
  2148 ;;  divisor         2    2[COMRAM] int 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  sign            1    5[COMRAM] unsigned char 
  2151 ;;  counter         1    4[COMRAM] unsigned char 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  2    0[COMRAM] int 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;Total ram usage:        6 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_cprog_itos
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text12
  2175  00162E                     __ptext12:
  2176                           	opt callstack 0
  2177  00162E                     ___awmod:
  2178                           	opt callstack 28
  2179  00162E  0E00               	movlw	0
  2180  001630  6E06               	movwf	___awmod@sign^0,c
  2181  001632  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2182  001634  EF20  F00B         	goto	u600
  2183  001638  EF1E  F00B         	goto	u601
  2184  00163C                     u601:
  2185  00163C  EF26  F00B         	goto	l1346
  2186  001640                     u600:
  2187  001640  6C01               	negf	___awmod@dividend^0,c
  2188  001642  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2189  001644  B0D8               	btfsc	status,0,c
  2190  001646  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2191  001648  0E01               	movlw	1
  2192  00164A  6E06               	movwf	___awmod@sign^0,c
  2193  00164C                     l1346:
  2194  00164C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2195  00164E  EF2D  F00B         	goto	u610
  2196  001652  EF2B  F00B         	goto	u611
  2197  001656                     u611:
  2198  001656  EF31  F00B         	goto	l1350
  2199  00165A                     u610:
  2200  00165A  6C03               	negf	___awmod@divisor^0,c
  2201  00165C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2202  00165E  B0D8               	btfsc	status,0,c
  2203  001660  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2204  001662                     l1350:
  2205  001662  5003               	movf	___awmod@divisor^0,w,c
  2206  001664  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2207  001666  B4D8               	btfsc	status,2,c
  2208  001668  EF38  F00B         	goto	u621
  2209  00166C  EF3A  F00B         	goto	u620
  2210  001670                     u621:
  2211  001670  EF5E  F00B         	goto	l1366
  2212  001674                     u620:
  2213  001674  0E01               	movlw	1
  2214  001676  6E05               	movwf	___awmod@counter^0,c
  2215  001678  EF42  F00B         	goto	l1356
  2216  00167C                     l1354:
  2217  00167C  90D8               	bcf	status,0,c
  2218  00167E  3603               	rlcf	___awmod@divisor^0,f,c
  2219  001680  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2220  001682  2A05               	incf	___awmod@counter^0,f,c
  2221  001684                     l1356:
  2222  001684  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2223  001686  EF47  F00B         	goto	u631
  2224  00168A  EF49  F00B         	goto	u630
  2225  00168E                     u631:
  2226  00168E  EF3E  F00B         	goto	l1354
  2227  001692                     u630:
  2228  001692                     l1358:
  2229  001692  5003               	movf	___awmod@divisor^0,w,c
  2230  001694  5C01               	subwf	___awmod@dividend^0,w,c
  2231  001696  5004               	movf	(___awmod@divisor+1)^0,w,c
  2232  001698  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2233  00169A  A0D8               	btfss	status,0,c
  2234  00169C  EF52  F00B         	goto	u641
  2235  0016A0  EF54  F00B         	goto	u640
  2236  0016A4                     u641:
  2237  0016A4  EF58  F00B         	goto	l1362
  2238  0016A8                     u640:
  2239  0016A8  5003               	movf	___awmod@divisor^0,w,c
  2240  0016AA  5E01               	subwf	___awmod@dividend^0,f,c
  2241  0016AC  5004               	movf	(___awmod@divisor+1)^0,w,c
  2242  0016AE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2243  0016B0                     l1362:
  2244  0016B0  90D8               	bcf	status,0,c
  2245  0016B2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2246  0016B4  3203               	rrcf	___awmod@divisor^0,f,c
  2247  0016B6  2E05               	decfsz	___awmod@counter^0,f,c
  2248  0016B8  EF49  F00B         	goto	l1358
  2249  0016BC                     l1366:
  2250  0016BC  5006               	movf	___awmod@sign^0,w,c
  2251  0016BE  B4D8               	btfsc	status,2,c
  2252  0016C0  EF64  F00B         	goto	u651
  2253  0016C4  EF66  F00B         	goto	u650
  2254  0016C8                     u651:
  2255  0016C8  EF6A  F00B         	goto	l1370
  2256  0016CC                     u650:
  2257  0016CC  6C01               	negf	___awmod@dividend^0,c
  2258  0016CE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2259  0016D0  B0D8               	btfsc	status,0,c
  2260  0016D2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2261  0016D4                     l1370:
  2262  0016D4  C001  F001         	movff	___awmod@dividend,?___awmod
  2263  0016D8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2264  0016DC  0012               	return		;funcret
  2265  0016DE                     __end_of___awmod:
  2266                           	opt callstack 0
  2267                           
  2268 ;; *************** function ___awdiv *****************
  2269 ;; Defined at:
  2270 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  dividend        2    0[COMRAM] int 
  2273 ;;  divisor         2    2[COMRAM] int 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  quotient        2    6[COMRAM] int 
  2276 ;;  sign            1    5[COMRAM] unsigned char 
  2277 ;;  counter         1    4[COMRAM] unsigned char 
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  2    0[COMRAM] int 
  2280 ;; Registers used:
  2281 ;;		wreg, status,2, status,0
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2287 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;Total ram usage:        8 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_cprog_itos
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text13
  2301  00156A                     __ptext13:
  2302                           	opt callstack 0
  2303  00156A                     ___awdiv:
  2304                           	opt callstack 28
  2305  00156A  0E00               	movlw	0
  2306  00156C  6E06               	movwf	___awdiv@sign^0,c
  2307  00156E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2308  001570  EFBE  F00A         	goto	u540
  2309  001574  EFBC  F00A         	goto	u541
  2310  001578                     u541:
  2311  001578  EFC4  F00A         	goto	l1302
  2312  00157C                     u540:
  2313  00157C  6C03               	negf	___awdiv@divisor^0,c
  2314  00157E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2315  001580  B0D8               	btfsc	status,0,c
  2316  001582  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2317  001584  0E01               	movlw	1
  2318  001586  6E06               	movwf	___awdiv@sign^0,c
  2319  001588                     l1302:
  2320  001588  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2321  00158A  EFCB  F00A         	goto	u550
  2322  00158E  EFC9  F00A         	goto	u551
  2323  001592                     u551:
  2324  001592  EFD1  F00A         	goto	l1308
  2325  001596                     u550:
  2326  001596  6C01               	negf	___awdiv@dividend^0,c
  2327  001598  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2328  00159A  B0D8               	btfsc	status,0,c
  2329  00159C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2330  00159E  0E01               	movlw	1
  2331  0015A0  1A06               	xorwf	___awdiv@sign^0,f,c
  2332  0015A2                     l1308:
  2333  0015A2  0E00               	movlw	0
  2334  0015A4  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2335  0015A6  0E00               	movlw	0
  2336  0015A8  6E07               	movwf	___awdiv@quotient^0,c
  2337  0015AA  5003               	movf	___awdiv@divisor^0,w,c
  2338  0015AC  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2339  0015AE  B4D8               	btfsc	status,2,c
  2340  0015B0  EFDC  F00A         	goto	u561
  2341  0015B4  EFDE  F00A         	goto	u560
  2342  0015B8                     u561:
  2343  0015B8  EF06  F00B         	goto	l1330
  2344  0015BC                     u560:
  2345  0015BC  0E01               	movlw	1
  2346  0015BE  6E05               	movwf	___awdiv@counter^0,c
  2347  0015C0  EFE6  F00A         	goto	l1316
  2348  0015C4                     l1314:
  2349  0015C4  90D8               	bcf	status,0,c
  2350  0015C6  3603               	rlcf	___awdiv@divisor^0,f,c
  2351  0015C8  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2352  0015CA  2A05               	incf	___awdiv@counter^0,f,c
  2353  0015CC                     l1316:
  2354  0015CC  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2355  0015CE  EFEB  F00A         	goto	u571
  2356  0015D2  EFED  F00A         	goto	u570
  2357  0015D6                     u571:
  2358  0015D6  EFE2  F00A         	goto	l1314
  2359  0015DA                     u570:
  2360  0015DA                     l1318:
  2361  0015DA  90D8               	bcf	status,0,c
  2362  0015DC  3607               	rlcf	___awdiv@quotient^0,f,c
  2363  0015DE  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2364  0015E0  5003               	movf	___awdiv@divisor^0,w,c
  2365  0015E2  5C01               	subwf	___awdiv@dividend^0,w,c
  2366  0015E4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2367  0015E6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2368  0015E8  A0D8               	btfss	status,0,c
  2369  0015EA  EFF9  F00A         	goto	u581
  2370  0015EE  EFFB  F00A         	goto	u580
  2371  0015F2                     u581:
  2372  0015F2  EF00  F00B         	goto	l1326
  2373  0015F6                     u580:
  2374  0015F6  5003               	movf	___awdiv@divisor^0,w,c
  2375  0015F8  5E01               	subwf	___awdiv@dividend^0,f,c
  2376  0015FA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2377  0015FC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2378  0015FE  8007               	bsf	___awdiv@quotient^0,0,c
  2379  001600                     l1326:
  2380  001600  90D8               	bcf	status,0,c
  2381  001602  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2382  001604  3203               	rrcf	___awdiv@divisor^0,f,c
  2383  001606  2E05               	decfsz	___awdiv@counter^0,f,c
  2384  001608  EFED  F00A         	goto	l1318
  2385  00160C                     l1330:
  2386  00160C  5006               	movf	___awdiv@sign^0,w,c
  2387  00160E  B4D8               	btfsc	status,2,c
  2388  001610  EF0C  F00B         	goto	u591
  2389  001614  EF0E  F00B         	goto	u590
  2390  001618                     u591:
  2391  001618  EF12  F00B         	goto	l1334
  2392  00161C                     u590:
  2393  00161C  6C07               	negf	___awdiv@quotient^0,c
  2394  00161E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2395  001620  B0D8               	btfsc	status,0,c
  2396  001622  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2397  001624                     l1334:
  2398  001624  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2399  001628  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2400  00162C  0012               	return		;funcret
  2401  00162E                     __end_of___awdiv:
  2402                           	opt callstack 0
  2403                           
  2404 ;; *************** function _lcd_init *****************
  2405 ;; Defined at:
  2406 ;;		line 279 in file "main.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;Total ram usage:        0 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    2
  2427 ;; This function calls:
  2428 ;;		_delay
  2429 ;;		_lcd_cmd
  2430 ;; This function is called by:
  2431 ;;		_main
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text14
  2436  00197E                     __ptext14:
  2437                           	opt callstack 0
  2438  00197E                     _lcd_init:
  2439                           	opt callstack 28
  2440  00197E                     
  2441                           ;main.c: 281:  PORTEbits.RE1=0;
  2442  00197E  9284               	bcf	132,1,c	;volatile
  2443                           
  2444                           ;main.c: 282:  PORTEbits.RE2=0;
  2445  001980  9484               	bcf	132,2,c	;volatile
  2446  001982                     
  2447                           ;main.c: 283:  delay(20);
  2448  001982  0E00               	movlw	0
  2449  001984  6E02               	movwf	(delay@ms+1)^0,c
  2450  001986  0E14               	movlw	20
  2451  001988  6E01               	movwf	delay@ms^0,c
  2452  00198A  ECED  F00C         	call	_delay	;wreg free
  2453  00198E                     
  2454                           ;main.c: 284:  PORTEbits.RE1=1;
  2455  00198E  8284               	bsf	132,1,c	;volatile
  2456  001990                     
  2457                           ;main.c: 286:  lcd_cmd(0x38);
  2458  001990  0E38               	movlw	56
  2459  001992  EC5C  F00D         	call	_lcd_cmd
  2460  001996                     
  2461                           ;main.c: 287:  delay(5);
  2462  001996  0E00               	movlw	0
  2463  001998  6E02               	movwf	(delay@ms+1)^0,c
  2464  00199A  0E05               	movlw	5
  2465  00199C  6E01               	movwf	delay@ms^0,c
  2466  00199E  ECED  F00C         	call	_delay	;wreg free
  2467                           
  2468                           ;main.c: 288:  lcd_cmd(0x38);
  2469  0019A2  0E38               	movlw	56
  2470  0019A4  EC5C  F00D         	call	_lcd_cmd
  2471  0019A8                     
  2472                           ;main.c: 289:     delay(1);
  2473  0019A8  0E00               	movlw	0
  2474  0019AA  6E02               	movwf	(delay@ms+1)^0,c
  2475  0019AC  0E01               	movlw	1
  2476  0019AE  6E01               	movwf	delay@ms^0,c
  2477  0019B0  ECED  F00C         	call	_delay	;wreg free
  2478  0019B4                     
  2479                           ;main.c: 290:  lcd_cmd(0x38);
  2480  0019B4  0E38               	movlw	56
  2481  0019B6  EC5C  F00D         	call	_lcd_cmd
  2482  0019BA                     
  2483                           ;main.c: 291:  lcd_cmd(0x08);
  2484  0019BA  0E08               	movlw	8
  2485  0019BC  EC5C  F00D         	call	_lcd_cmd
  2486  0019C0                     
  2487                           ;main.c: 292:  lcd_cmd(0x0F);
  2488  0019C0  0E0F               	movlw	15
  2489  0019C2  EC5C  F00D         	call	_lcd_cmd
  2490  0019C6                     
  2491                           ;main.c: 293:  lcd_cmd(0x01);
  2492  0019C6  0E01               	movlw	1
  2493  0019C8  EC5C  F00D         	call	_lcd_cmd
  2494  0019CC                     
  2495                           ;main.c: 294:  lcd_cmd(0x38);
  2496  0019CC  0E38               	movlw	56
  2497  0019CE  EC5C  F00D         	call	_lcd_cmd
  2498  0019D2                     
  2499                           ;main.c: 295:     lcd_cmd(0x80);
  2500  0019D2  0E80               	movlw	128
  2501  0019D4  EC5C  F00D         	call	_lcd_cmd
  2502  0019D8  0012               	return		;funcret
  2503  0019DA                     __end_of_lcd_init:
  2504                           	opt callstack 0
  2505                           
  2506 ;; *************** function _lcd_cmd *****************
  2507 ;; Defined at:
  2508 ;;		line 268 in file "main.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  val             1    wreg     unsigned char 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  val             1    1[COMRAM] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;Total ram usage:        1 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    1
  2529 ;; This function calls:
  2530 ;;		_lcd_wr
  2531 ;; This function is called by:
  2532 ;;		_lcd_init
  2533 ;;		_printTime
  2534 ;;		_main
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text15
  2539  001AB8                     __ptext15:
  2540                           	opt callstack 0
  2541  001AB8                     _lcd_cmd:
  2542                           	opt callstack 28
  2543                           
  2544                           ;incstack = 0
  2545                           ;lcd_cmd@val stored from wreg
  2546  001AB8  6E02               	movwf	lcd_cmd@val^0,c
  2547  001ABA                     
  2548                           ;main.c: 268: void lcd_cmd(unsigned char val);main.c: 269: {;main.c: 270:  PORTEbits.RE1
      +                          =1;
  2549  001ABA  8284               	bsf	132,1,c	;volatile
  2550  001ABC                     
  2551                           ;main.c: 271:         lcd_wr(val);
  2552  001ABC  5002               	movf	lcd_cmd@val^0,w,c
  2553  001ABE  EC65  F00D         	call	_lcd_wr
  2554  001AC2                     
  2555                           ;main.c: 272:         PORTEbits.RE2=0;
  2556  001AC2  9484               	bcf	132,2,c	;volatile
  2557  001AC4                     
  2558                           ;main.c: 274:         PORTEbits.RE1=0;
  2559  001AC4  9284               	bcf	132,1,c	;volatile
  2560  001AC6                     
  2561                           ;main.c: 276:  PORTEbits.RE1=1;
  2562  001AC6  8284               	bsf	132,1,c	;volatile
  2563  001AC8  0012               	return		;funcret
  2564  001ACA                     __end_of_lcd_cmd:
  2565                           	opt callstack 0
  2566                           
  2567 ;; *************** function _lcd_wr *****************
  2568 ;; Defined at:
  2569 ;;		line 100 in file "main.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  val             1    wreg     unsigned char 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  val             1    0[COMRAM] unsigned char 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;Total ram usage:        1 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; This function calls:
  2590 ;;		Nothing
  2591 ;; This function is called by:
  2592 ;;		_lcd_dat
  2593 ;;		_lcd_cmd
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           	psect	text16
  2598  001ACA                     __ptext16:
  2599                           	opt callstack 0
  2600  001ACA                     _lcd_wr:
  2601                           	opt callstack 27
  2602                           
  2603                           ;incstack = 0
  2604                           ;lcd_wr@val stored from wreg
  2605  001ACA  6E01               	movwf	lcd_wr@val^0,c
  2606  001ACC                     
  2607                           ;main.c: 100: void lcd_wr(unsigned char val);main.c: 101: {;main.c: 102:   PORTD=val;
  2608  001ACC  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  2609  001AD0  0012               	return		;funcret
  2610  001AD2                     __end_of_lcd_wr:
  2611                           	opt callstack 0
  2612                           
  2613 ;; *************** function _delay *****************
  2614 ;; Defined at:
  2615 ;;		line 128 in file "main.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  ms              2    0[COMRAM] unsigned int 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  i               2    2[COMRAM] unsigned int 
  2620 ;;  j               1    4[COMRAM] unsigned char 
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      void 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2, status,0
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;Total ram usage:        5 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; This function calls:
  2637 ;;		Nothing
  2638 ;; This function is called by:
  2639 ;;		_lcd_init
  2640 ;;		_printTime
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text17
  2645  0019DA                     __ptext17:
  2646                           	opt callstack 0
  2647  0019DA                     _delay:
  2648                           	opt callstack 29
  2649  0019DA                     
  2650                           ;main.c: 128: void delay(unsigned int ms);main.c: 129: {;main.c: 130:     unsigned int i
      +                          ;;main.c: 131:     unsigned char j;;main.c: 133:  for (i =0; i< ms; i++)
  2651  0019DA  0E00               	movlw	0
  2652  0019DC  6E04               	movwf	(delay@i+1)^0,c
  2653  0019DE  0E00               	movlw	0
  2654  0019E0  6E03               	movwf	delay@i^0,c
  2655  0019E2  EF05  F00D         	goto	l1416
  2656  0019E6                     l1404:
  2657                           
  2658                           ;main.c: 134:  {;main.c: 136:   for (j =0 ; j < 200; j++)
  2659  0019E6  0E00               	movlw	0
  2660  0019E8  6E05               	movwf	delay@j^0,c
  2661  0019EA                     l72:
  2662                           
  2663                           ;main.c: 137:    {;main.c: 138:       __nop();
  2664  0019EA  F000               	nop	
  2665                           
  2666                           ;main.c: 139:       __nop();
  2667  0019EC  F000               	nop	
  2668                           
  2669                           ;main.c: 140:       __nop();
  2670  0019EE  F000               	nop	
  2671                           
  2672                           ;main.c: 141:       __nop();
  2673  0019F0  F000               	nop	
  2674                           
  2675                           ;main.c: 142:       __nop();
  2676  0019F2  F000               	nop	
  2677  0019F4                     
  2678                           ;main.c: 143:    }
  2679  0019F4  2A05               	incf	delay@j^0,f,c
  2680  0019F6  0EC7               	movlw	199
  2681  0019F8  6405               	cpfsgt	delay@j^0,c
  2682  0019FA  EF01  F00D         	goto	u711
  2683  0019FE  EF03  F00D         	goto	u710
  2684  001A02                     u711:
  2685  001A02  EFF5  F00C         	goto	l72
  2686  001A06                     u710:
  2687  001A06                     
  2688                           ;main.c: 144:  }
  2689  001A06  4A03               	infsnz	delay@i^0,f,c
  2690  001A08  2A04               	incf	(delay@i+1)^0,f,c
  2691  001A0A                     l1416:
  2692  001A0A  5001               	movf	delay@ms^0,w,c
  2693  001A0C  5C03               	subwf	delay@i^0,w,c
  2694  001A0E  5002               	movf	(delay@ms+1)^0,w,c
  2695  001A10  5804               	subwfb	(delay@i+1)^0,w,c
  2696  001A12  A0D8               	btfss	status,0,c
  2697  001A14  EF0E  F00D         	goto	u721
  2698  001A18  EF10  F00D         	goto	u720
  2699  001A1C                     u721:
  2700  001A1C  EFF3  F00C         	goto	l1404
  2701  001A20                     u720:
  2702  001A20  0012               	return		;funcret
  2703  001A22                     __end_of_delay:
  2704                           	opt callstack 0
  2705                           
  2706                           	psect	rparam
  2707  0000                     tosu	equ	0xFFF
  2708                           tosh	equ	0xFFE
  2709                           tosl	equ	0xFFD
  2710                           stkptr	equ	0xFFC
  2711                           pclatu	equ	0xFFB
  2712                           pclath	equ	0xFFA
  2713                           pcl	equ	0xFF9
  2714                           tblptru	equ	0xFF8
  2715                           tblptrh	equ	0xFF7
  2716                           tblptrl	equ	0xFF6
  2717                           tablat	equ	0xFF5
  2718                           prodh	equ	0xFF4
  2719                           prodl	equ	0xFF3
  2720                           indf0	equ	0xFEF
  2721                           postinc0	equ	0xFEE
  2722                           postdec0	equ	0xFED
  2723                           preinc0	equ	0xFEC
  2724                           plusw0	equ	0xFEB
  2725                           fsr0h	equ	0xFEA
  2726                           fsr0l	equ	0xFE9
  2727                           wreg	equ	0xFE8
  2728                           indf1	equ	0xFE7
  2729                           postinc1	equ	0xFE6
  2730                           postdec1	equ	0xFE5
  2731                           preinc1	equ	0xFE4
  2732                           plusw1	equ	0xFE3
  2733                           fsr1h	equ	0xFE2
  2734                           fsr1l	equ	0xFE1
  2735                           bsr	equ	0xFE0
  2736                           indf2	equ	0xFDF
  2737                           postinc2	equ	0xFDE
  2738                           postdec2	equ	0xFDD
  2739                           preinc2	equ	0xFDC
  2740                           plusw2	equ	0xFDB
  2741                           fsr2h	equ	0xFDA
  2742                           fsr2l	equ	0xFD9
  2743                           status	equ	0xFD8


Data Sizes:
    Strings     89
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     43      55
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sp__cprog_itos	PTR unsigned char  size(2) Largest target is 5
		 -> printTime@player2secondsBuffer(COMRAM[3]), printTime@player2minutesBuffer(COMRAM[5]), printTime@player1secondsBuffer(COMRAM[3]), printTime@player1minutesBuffer(COMRAM[5]), 

    cprog_itos@buf	PTR unsigned char  size(2) Largest target is 5
		 -> printTime@player2secondsBuffer(COMRAM[3]), printTime@player2minutesBuffer(COMRAM[5]), printTime@player1secondsBuffer(COMRAM[3]), printTime@player1minutesBuffer(COMRAM[5]), 

    cprog_itos@digits	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    sp__cprog_strrev	PTR unsigned char  size(2) Largest target is 5
		 -> printTime@player2secondsBuffer(COMRAM[3]), printTime@player2minutesBuffer(COMRAM[5]), printTime@player1secondsBuffer(COMRAM[3]), printTime@player1minutesBuffer(COMRAM[5]), 

    cprog_strrev@s	PTR unsigned char  size(2) Largest target is 5
		 -> printTime@player2secondsBuffer(COMRAM[3]), printTime@player2minutesBuffer(COMRAM[5]), printTime@player1secondsBuffer(COMRAM[3]), printTime@player1minutesBuffer(COMRAM[5]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[12]), STR_8(CODE[15]), STR_7(CODE[5]), STR_6(CODE[6]), 
		 -> STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> printTime@player2secondsBuffer(COMRAM[3]), printTime@player2minutesBuffer(COMRAM[5]), printTime@player1secondsBuffer(COMRAM[3]), printTime@player1minutesBuffer(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_printTime
    _updateTimeRemainingSet->___lwdiv
    ___lwdiv->_adc
    _printTime->_cprog_itos
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _cprog_itos->_abs
    _abs->___awmod
    _lcd_init->_delay
    _lcd_cmd->_lcd_wr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6483
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                          _printTime
                         _reduceTime
                  _updatePlayersTime
             _updateTimeRemainingSet
 ---------------------------------------------------------------------------------
 (1) _updateTimeRemainingSet                               4     4      0     359
                                             14 COMRAM     4     4      0
                            ___lwdiv
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              7 COMRAM     7     3      4
                                _adc (ARG)
 ---------------------------------------------------------------------------------
 (1) _reduceTime                                           5     3      2     168
                                              0 COMRAM     5     3      2
                  _updatePlayersTime
 ---------------------------------------------------------------------------------
 (1) _updatePlayersTime                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printTime                                           16    16      0    4468
                                             27 COMRAM    16    16      0
                         _cprog_itos
                              _delay
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    1032
                                              2 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0      30
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _cprog_itos                                          17    11      6    2778
                                             10 COMRAM    17    11      6
                            ___awdiv
                            ___awmod
                                _abs
                       _cprog_strrev
 ---------------------------------------------------------------------------------
 (3) _cprog_strrev                                         9     5      4     443
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     426
                              _delay
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      30
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2     396
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _delay
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_dat
       _lcd_wr
   _printTime
     _cprog_itos
       ___awdiv
       ___awmod
       _abs
         ___awmod (ARG)
       _cprog_strrev
     _delay
     _lcd_cmd
       _lcd_wr
     _lcd_str
       _lcd_dat
         _lcd_wr
   _reduceTime
     _updatePlayersTime
   _updatePlayersTime
   _updateTimeRemainingSet
     ___lwdiv
       _adc (ARG)
     _adc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2B      37       1       43.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      34        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jun  7 20:26:17 2020

                             l52 17D2                               l61 1AB6  
                             l55 180E                               l72 19EA  
                             l80 1A8E                               l49 17D0  
                             l58 1AD0                               l75 1A20  
                             l67 1908                               l85 1358  
                   ___awdiv@sign 0006                      __CFG_BORV$3 000000  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                            l100 1464                              l121 1AC8  
                            l124 19D8                              l109 188C  
                            l118 1346                              l135 1226  
                            l146 1568                              l404 16DC  
                            l391 162C                              l651 1974  
                            l840 1ACC                              l850 1AB4  
                            l842 1AA8                              l658 197C  
                            l835 1A58                              l844 1AAA  
                            l838 1A60                              l846 1AB0  
                            l848 1AB2                     __CFG_CPB$OFF 000000  
                            u220 1A70                              u221 1A6C  
                            u230 1A86                              u231 1A82  
                            u600 1640                              u520 1884  
                            u601 163C                              u521 1880  
                            u610 165A                              u530 1A3C  
                   __CFG_CPD$OFF 000000                              u611 1656  
                            u531 1A38                              u540 157C  
                            u620 1674                              u700 1908  
                            u541 1578                              u621 1670  
                            u701 1904                              u710 1A06  
                            u550 1596                              u630 1692  
                            u711 1A02                              u551 1592  
                            u631 168E                              u720 1A20  
                            u560 15BC                              u640 16A8  
                            u800 1388                              u721 1A1C  
                            u561 15B8                              u641 16A4  
                            u801 1384                              u570 15DA  
                            u650 16CC                              u730 1254  
                            u810 13A2                              u571 15D6  
                            u651 16C8                              u731 1250  
                            u811 139E                              u580 15F6  
                            u740 12D6                              u900 10E6  
                            u820 13B4                              u660 17E0  
                            u581 15F2                              u741 12D2  
                            u901 10E2                              u821 13B0  
                            u661 17DC                              u590 161C  
                            u750 12FC                              u910 10F8  
                            u830 13C6                              u591 1618  
                            u751 12F8                              u911 10F4  
                            u831 13C2                              u760 130E  
                            u680 18C4                              u920 110A  
                            u840 13D8                              u761 130A  
                            u921 1106                              u841 13D4  
                            u690 18F8                              u930 111C  
                            u850 13EA                              u770 1924  
                            u931 1118                              u851 13E6  
                            u771 1920                              u675 17E8  
                            u940 112E                              u860 1416  
                            u780 1942                              u941 112A  
                            u861 1412                              u781 193E  
                            u950 1140                              u870 1428  
                            u790 195E                              u687 18BA  
                            u951 113C                              u871 1424  
                            u791 195A                              u880 143A  
                            u960 149A                              u697 18EE  
                            u881 1436                              u961 1496  
                            u890 144C                              u970 14AC  
                            u891 1448                              u971 14A8  
                            u980 171C                              u981 1718  
                            u990 175A                              u991 1756  
                            _adc 1780                              _abs 1A22  
                   ___awmod@sign 0006                              wreg 000FE8  
                   __CFG_LVP$OFF 000000                     __CFG_WDT$OFF 000000  
                           ?_adc 0001                             l1000 1A62  
                           l1002 1A70                             l1004 1A78  
                           l1006 1A86                             l1040 1AC4  
                           l1042 1AC6                             l1034 1ABA  
                           ?_abs 0007                             l1036 1ABC  
                           l1300 1584                             l1038 1AC2  
                           l1310 15AA                             l1302 1588  
                           l1320 15E0                             l1312 15BC  
                           l1304 1596                             l1400 18CA  
                           l1410 19F4                             l1402 19DA  
                           l1322 15F6                             l1314 15C4  
                           l1330 160C                             l1306 159E  
                           l1412 19F6                             l1404 19E6  
                           l1332 161C                             l1324 15FE  
                           l1316 15CC                             l1308 15A2  
                           l1340 1632                             l1420 1242  
                           l1500 13EA                             l1414 1A06  
                           l1334 1624                             l1326 1600  
                           l1318 15DA                             l1350 1662  
                           l1342 1640                             l1270 1810  
                           l1430 12D6                             l1422 1254  
                           l1510 1428                             l1502 13F4  
                           l1416 1A0A                             l1520 197E  
                           l1328 1606                             l1360 16A8  
                           l1352 1674                             l1344 1648  
                           l1280 1864                             l1272 1818  
                           l1440 1332                             l1432 12FC  
                           l1424 125C                             l1512 143A  
                           l1504 13FA                             l1600 1488  
                           l1530 19A8                             l1522 1982  
                           l1370 16D4                             l1362 16B0  
                           l1354 167C                             l1346 164C  
                           l1338 162E                             l1290 1A22  
                           l1282 1868                             l1274 1828  
                           l1434 130E                             l1426 12A4  
                           l1418 122A                             l1514 144C  
                           l1506 1402                             l1450 192C  
                           l1602 149A                             l1540 19CC  
                           l1532 19B4                             l1524 198E  
                           l1364 16B6                             l1356 1684  
                           l1348 165A                             l1292 1A3C  
                           l1276 1838                             l1284 186E  
                           l1436 131E                             l1428 12A8  
                           l1516 1456                             l1508 1416  
                           l1460 1966                             l1452 1934  
                           l1444 190A                             l1380 1796  
                           l1604 14B0                             l1612 1534  
                           l1620 16FE                             l1542 19D2  
                           l1534 19BA                             l1526 1990  
                           l1294 156A                             l1358 1692  
                           l1366 16BC                             l1286 1884  
                           l1278 1854                             l1438 1322  
                           l1550 10F8                             l1518 145C  
                           l1462 1968                             l1454 1942  
                           l1446 1912                             l1374 1782  
                           l1606 14DC                             l1630 1724  
                           l1622 1702                             l1536 19C0  
                           l1528 1996                             l1296 156E  
                           l1368 16CC                             l1560 114C  
                           l1552 110A                             l1544 105C  
                           l1480 136A                             l1464 196E  
                           l1456 1948                             l1448 1924  
                           l1376 1786                             l1384 179E  
                           l1608 1508                             l1640 176C  
                           l1632 172A                             l1624 1706  
                           l1538 19C6                             l1298 157C  
                           l1394 188E                             l1570 1188  
                           l1562 115C                             l1554 111C  
                           l1546 10D4                             l1482 1370  
                           l1474 135A                             l1490 138C  
                           l1466 1348                             l1458 195E  
                           l1386 17E0                             l1378 178E  
                           l1650 154A                             l1634 1736  
                           l1626 170A                             l1618 16DE  
                           l1396 1896                             l1572 1190  
                           l1564 1168                             l1556 112E  
                           l1580 11B4                             l1548 10E6  
                           l1492 13A2                             l1484 1376  
                           l1476 135E                             l1468 1354  
                           l1652 17B2                             l1636 1748  
                           l1628 171C                             l1398 18C8  
                           l1590 11F6                             l1582 11C0  
                           l1574 1198                             l1566 1174  
                           l1558 1140                             l1494 13B4  
                           l1486 1378                             l1478 1364  
                           l1638 175A                             l1592 1202  
                           l1584 11CC                             l1576 11A0  
                           l1568 1180                             l1496 13C6  
                           l1488 1388                             l1594 120E  
                           l1586 11D8                             l1578 11A8  
                           l1498 13D8                             l1596 121A  
                           l1588 11E4                             l1598 1466  
                           STR_1 1001                             STR_2 1012  
                           STR_3 1023                             STR_4 104F  
                           STR_5 1055                             STR_6 104F  
                           STR_7 1055                             STR_8 1034  
                           STR_9 1043                             u1000 176C  
                           u1001 1768                     __CFG_PWRT$ON 000000  
                           abs@a 0007                             _main 16DE  
                           fsr1h 000FE2                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             start 0000  
                  __CFG_IESO$OFF 000000                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                            ??_adc 0003  
                          ??_abs 0009                    ?_cprog_strrev 0001  
                          ?_main 0001                  __end_of___awdiv 162E  
                __end_of___awmod 16DE                  ___awdiv@divisor 0003  
                __end_of___lwdiv 197E                  ___awdiv@counter 0005  
  printTime@player1minutesBuffer 001C                            _PORTD 000F83  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000    printTime@player1secondsBuffer 0026  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                  __end_of_lcd_dat 1AB8  
                __end_of_lcd_cmd 1ACA                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                  __end_of_lcd_str 190A  
                  __CFG_WRTD$OFF 000000                   __CFG_EBTRB$OFF 000000  
                          _delay 19DA       __size_of_updatePlayersTime 002E  
                 __CFG_BOREN$OFF 000000                            tablat 000FF5  
                    cprog_itos@n 001A                            status 000FD8  
                __initialization 1A90                     __end_of_main 1780  
                 __CFG_OSC$HSPLL 000000                   ??_cprog_strrev 0005  
                         ??_main 002C                    __activetblptr 000002  
                         ?_delay 0001                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
               ___awdiv@dividend 0001                   __CFG_XINST$OFF 000000  
               __end_of_lcd_init 19DA                        ??___awdiv 0005  
                      ??___awmod 0005                        ??___lwdiv 000C  
                         _lcd_wr 1ACA                   _player1minutes 0036  
                 _player1seconds 0034                           delay@i 0003  
                         delay@j 0005                           clear_0 1A96  
                 _player2minutes 0032                   _player2seconds 0030  
               ___awdiv@quotient 0007                  ___awmod@divisor 0003  
                ___awmod@counter 0005                        ??_lcd_dat 0002  
                      ??_lcd_cmd 0002                        ??_lcd_str 0005  
  printTime@player2minutesBuffer 0021          ?_updateTimeRemainingSet 0001  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
  printTime@player2secondsBuffer 0029                       __accesstop 0080  
        __end_of__initialization 1A9C                  __CFG_PBADEN$OFF 000000  
                  ___rparam_used 000001                   __pcstackCOMRAM 0001  
                  __end_of_delay 1A22   __end_of_updateTimeRemainingSet 156A  
                        ??_delay 0003             __end_of_cprog_strrev 188E  
                    reduceTime@i 0003                      reduceTime@j 0005  
     _playerNumberTimeIsElapsing 002C                          ?_lcd_wr 0001  
             __size_of_printTime 01CC                        ?_lcd_init 0001  
                     _cprog_itos 1228                          __Hparam 0000  
                        __Lparam 0000                          ___awdiv 156A  
                        ___awmod 162E                          ___lwdiv 190A  
                   __psmallconst 1000                  __size_of_lcd_wr 0008  
                __CFG_STVREN$OFF 000000                          __pcinit 1A90  
                        __ramtop 1000                          __ptext0 16DE  
                        __ptext1 1466                          __ptext2 1780  
                        __ptext3 190A                          __ptext4 1348  
                        __ptext5 1A62                          __ptext6 105C  
                        __ptext7 188E                          __ptext8 1AA6  
                        __ptext9 1228       updateTimeRemainingSet@time 0011  
                        _lcd_dat 1AA6                          _lcd_cmd 1AB8  
                        _lcd_str 188E                     __size_of_adc 0090  
                   __size_of_abs 0040                          delay@ms 0001  
               ___awmod@dividend 0001                       _reduceTime 1348  
                     ??_lcd_init 0006             end_of_initialization 1A9C  
                  __Lmediumconst 0000                    cprog_itos@buf 000B  
              __end_of_printTime 1228                          postinc0 000FEE  
                  cprog_strrev@i 0006                    cprog_strrev@j 0008  
                  cprog_strrev@n 0003                        _PORTBbits 000F81  
                  cprog_strrev@s 0001                        _PORTEbits 000F84  
                     lcd_dat@val 0002                       lcd_cmd@val 0002  
          __size_of_cprog_strrev 007E                      ?_cprog_itos 000B  
                     lcd_str@str 0003                   __end_of_lcd_wr 1AD2  
                   _cprog_strrev 1810              start_initialization 1A90  
                    __end_of_adc 1810                      __end_of_abs 1A62  
                    ?_reduceTime 0001                         ??_lcd_wr 0001  
               __CFG_LPT1OSC$OFF 000000              __size_of_cprog_itos 0120  
                    __pbssCOMRAM 002C                __size_of_lcd_init 005C  
                   reduceTime@ms 0001                 ___lwdiv@dividend 0008  
              __CFG_CCP2MX$PORTC 000000                 cprog_itos@digits 0015  
                       ?___awdiv 0001                         ?___awmod 0001  
                       ?___lwdiv 0008              __size_of_reduceTime 011E  
                       ?_lcd_dat 0001                         ?_lcd_cmd 0001  
                       ?_lcd_str 0003                      __smallconst 1000  
               ___lwdiv@quotient 000C                   __size_of_delay 0048  
               __CFG_WDTPS$32768 000000         ??_updateTimeRemainingSet 000F  
                      _printTime 105C                       _ADCON0bits 000FC2  
                      lcd_wr@val 0001                cprog_strrev@savev 0005  
                   ??_cprog_itos 0011                         __Hrparam 0000  
                       __Lrparam 0000                       ?_printTime 0001  
               __size_of___awdiv 00C4                 __size_of___awmod 00B0  
               __size_of___lwdiv 0074                         adc@kanal 0007  
               __size_of_lcd_dat 0012                 __size_of_lcd_cmd 0012  
               __size_of_lcd_str 007C               __end_of_cprog_itos 1348  
                ___lwdiv@divisor 000A                  ___lwdiv@counter 000E  
                cprog_itos@radix 000F                         __ptext10 1810  
                       __ptext11 1A22                         __ptext12 162E  
                       __ptext13 156A                         __ptext14 197E  
                       __ptext15 1AB8                         __ptext16 1ACA  
                       __ptext17 19DA                  cprog_itos@value 0019  
                   ??_reduceTime 0003                         _lcd_init 197E  
                  __size_of_main 00A2  __size_of_updateTimeRemainingSet 0104  
             __end_of_reduceTime 1466                         lcd_str@i 0007  
              _updatePlayersTime 1A62                   cprog_itos@sign 0017  
                 cprog_itos@size 000D               ?_updatePlayersTime 0001  
                    _timeForGame 002E              ??_updatePlayersTime 0001  
                    ??_printTime 001C        __end_of_updatePlayersTime 1A90  
         _updateTimeRemainingSet 1466  
