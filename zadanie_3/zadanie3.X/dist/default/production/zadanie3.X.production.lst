

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jun  6 04:25:30 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4620 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  00FCF0                     __pidataCOMRAM:
    55                           	opt callstack 0
    56                           
    57                           ;initializer for _isAlarmTurnedOn
    58  00FCF0  0001               	dw	1
    59  0000                     _TRISE	set	3990
    60  0000                     _TRISD	set	3989
    61  0000                     _TRISC	set	3988
    62  0000                     _TRISB	set	3987
    63  0000                     _TRISA	set	3986
    64  0000                     _ADCON2	set	4032
    65  0000                     _ADCON1	set	4033
    66  0000                     _PORTD	set	3971
    67  0000                     _PORTBbits	set	3969
    68  0000                     _ADRESL	set	4035
    69  0000                     _ADRESH	set	4036
    70  0000                     _ADCON0bits	set	4034
    71  0000                     _ADCON0	set	4034
    72                           
    73                           ; #config settings
    74  0000                     
    75                           	psect	cinit
    76  00FCF2                     __pcinit:
    77                           	opt callstack 0
    78  00FCF2                     start_initialization:
    79                           	opt callstack 0
    80  00FCF2                     __initialization:
    81                           	opt callstack 0
    82                           
    83                           ; Initialize objects allocated to COMRAM (2 bytes)
    84                           ; load TBLPTR registers with __pidataCOMRAM
    85  00FCF2  0EF0               	movlw	low __pidataCOMRAM
    86  00FCF4  6EF6               	movwf	tblptrl,c
    87  00FCF6  0EFC               	movlw	high __pidataCOMRAM
    88  00FCF8  6EF7               	movwf	tblptrh,c
    89  00FCFA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    90  00FCFC  6EF8               	movwf	tblptru,c
    91  00FCFE  0009               	tblrd		*+	;fetch initializer
    92  00FD00  CFF5 F010          	movff	tablat,__pdataCOMRAM
    93  00FD04  0009               	tblrd		*+	;fetch initializer
    94  00FD06  CFF5 F011          	movff	tablat,__pdataCOMRAM+1
    95                           
    96                           ; Clear objects allocated to COMRAM (2 bytes)
    97  00FD0A  6A0F               	clrf	(__pbssCOMRAM+1)& (0+255),c
    98  00FD0C  6A0E               	clrf	__pbssCOMRAM& (0+255),c
    99  00FD0E                     end_of_initialization:
   100                           	opt callstack 0
   101  00FD0E                     __end_of__initialization:
   102                           	opt callstack 0
   103  00FD0E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   104  00FD10  6EF8               	movwf	tblptru,c
   105  00FD12  0100               	movlb	0
   106  00FD14  EFED  F07E         	goto	_main	;jump to C main() function
   107                           
   108                           	psect	bssCOMRAM
   109  00000E                     __pbssCOMRAM:
   110                           	opt callstack 0
   111  00000E                     _isAlarmOn:
   112                           	opt callstack 0
   113  00000E                     	ds	2
   114                           
   115                           	psect	dataCOMRAM
   116  000010                     __pdataCOMRAM:
   117                           	opt callstack 0
   118  000010                     _isAlarmTurnedOn:
   119                           	opt callstack 0
   120  000010                     	ds	2
   121                           
   122                           	psect	cstackCOMRAM
   123  000001                     __pcstackCOMRAM:
   124                           	opt callstack 0
   125  000001                     ?_adc:
   126                           	opt callstack 0
   127  000001                     delay@ms:
   128                           	opt callstack 0
   129  000001                     updateStateOfTheReset@i:
   130                           	opt callstack 0
   131                           
   132                           ; 2 bytes @ 0x0
   133  000001                     	ds	2
   134  000003                     ??_adc:
   135  000003                     delay@i:
   136                           	opt callstack 0
   137                           
   138                           ; 2 bytes @ 0x2
   139  000003                     	ds	2
   140  000005                     delay@j:
   141                           	opt callstack 0
   142                           
   143                           ; 1 bytes @ 0x4
   144  000005                     	ds	2
   145  000007                     adc@kanal:
   146                           	opt callstack 0
   147                           
   148                           ; 1 bytes @ 0x6
   149  000007                     	ds	1
   150  000008                     lightDiod@trap:
   151                           	opt callstack 0
   152                           
   153                           ; 2 bytes @ 0x7
   154  000008                     	ds	2
   155  00000A                     lightDiod@i:
   156                           	opt callstack 0
   157                           
   158                           ; 2 bytes @ 0x9
   159  00000A                     	ds	2
   160  00000C                     main@trap:
   161                           	opt callstack 0
   162                           
   163                           ; 2 bytes @ 0xB
   164  00000C                     	ds	2
   165                           
   166 ;;
   167 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   168 ;;
   169 ;; *************** function _main *****************
   170 ;; Defined at:
   171 ;;		line 244 in file "main.c"
   172 ;; Parameters:    Size  Location     Type
   173 ;;		None
   174 ;; Auto vars:     Size  Location     Type
   175 ;;  trap            2   11[COMRAM] unsigned int 
   176 ;; Return value:  Size  Location     Type
   177 ;;                  1    wreg      void 
   178 ;; Registers used:
   179 ;;		wreg, status,2, status,0, cstack
   180 ;; Tracked objects:
   181 ;;		On entry : 0/0
   182 ;;		On exit  : 0/0
   183 ;;		Unchanged: 0/0
   184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   186 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   188 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   189 ;;Total ram usage:        2 bytes
   190 ;; Hardware stack levels required when called:    2
   191 ;; This function calls:
   192 ;;		_adc
   193 ;;		_lightDiod
   194 ;;		_updateStateOfTheReset
   195 ;; This function is called by:
   196 ;;		Startup code after reset
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           
   200                           	psect	text0
   201  00FDDA                     __ptext0:
   202                           	opt callstack 0
   203  00FDDA                     _main:
   204                           	opt callstack 29
   205  00FDDA                     
   206                           ;main.c: 246:     ADCON0=0x01;
   207  00FDDA  0E01               	movlw	1
   208  00FDDC  6EC2               	movwf	194,c	;volatile
   209                           
   210                           ;main.c: 247:     ADCON1=0x0B;
   211  00FDDE  0E0B               	movlw	11
   212  00FDE0  6EC1               	movwf	193,c	;volatile
   213                           
   214                           ;main.c: 248:     ADCON2=0x01;
   215  00FDE2  0E01               	movlw	1
   216  00FDE4  6EC0               	movwf	192,c	;volatile
   217                           
   218                           ;main.c: 250:     TRISA=0xC3;
   219  00FDE6  0EC3               	movlw	195
   220  00FDE8  6E92               	movwf	146,c	;volatile
   221                           
   222                           ;main.c: 251:     TRISB=0x3F;
   223  00FDEA  0E3F               	movlw	63
   224  00FDEC  6E93               	movwf	147,c	;volatile
   225                           
   226                           ;main.c: 252:     TRISC=0x01;
   227  00FDEE  0E01               	movlw	1
   228  00FDF0  6E94               	movwf	148,c	;volatile
   229                           
   230                           ;main.c: 253:     TRISD=0x00;
   231  00FDF2  0E00               	movlw	0
   232  00FDF4  6E95               	movwf	149,c	;volatile
   233                           
   234                           ;main.c: 254:     TRISE=0x00;
   235  00FDF6  0E00               	movlw	0
   236  00FDF8  6E96               	movwf	150,c	;volatile
   237  00FDFA                     l1050:
   238                           
   239                           ;main.c: 258:         updateStateOfTheReset();
   240  00FDFA  ECB0  F07E         	call	_updateStateOfTheReset	;wreg free
   241  00FDFE                     
   242                           ;main.c: 260:         if (isAlarmTurnedOn == 1) {
   243  00FDFE  0410               	decf	_isAlarmTurnedOn^0,w,c
   244  00FE00  1011               	iorwf	(_isAlarmTurnedOn+1)^0,w,c
   245  00FE02  A4D8               	btfss	status,2,c
   246  00FE04  EF06  F07F         	goto	u401
   247  00FE08  EF08  F07F         	goto	u400
   248  00FE0C                     u401:
   249  00FE0C  EFFD  F07E         	goto	l1050
   250  00FE10                     u400:
   251  00FE10                     
   252                           ;main.c: 261:             unsigned int trap = adc(0);
   253  00FE10  0E00               	movlw	0
   254  00FE12  EC33  F07F         	call	_adc
   255  00FE16  C001  F00C         	movff	?_adc,main@trap
   256  00FE1A  C002  F00D         	movff	?_adc+1,main@trap+1
   257  00FE1E                     
   258                           ;main.c: 263:             if (trap > 375) {
   259  00FE1E  0E78               	movlw	120
   260  00FE20  5C0C               	subwf	main@trap^0,w,c
   261  00FE22  0E01               	movlw	1
   262  00FE24  580D               	subwfb	(main@trap+1)^0,w,c
   263  00FE26  A0D8               	btfss	status,0,c
   264  00FE28  EF18  F07F         	goto	u411
   265  00FE2C  EF1A  F07F         	goto	u410
   266  00FE30                     u411:
   267  00FE30  EF27  F07F         	goto	l1062
   268  00FE34                     u410:
   269  00FE34                     
   270                           ;main.c: 265:                 if (isAlarmOn == 0) lightDiod();
   271  00FE34  500E               	movf	_isAlarmOn^0,w,c
   272  00FE36  100F               	iorwf	(_isAlarmOn+1)^0,w,c
   273  00FE38  A4D8               	btfss	status,2,c
   274  00FE3A  EF21  F07F         	goto	u421
   275  00FE3E  EF23  F07F         	goto	u420
   276  00FE42                     u421:
   277  00FE42  EF2F  F07F         	goto	l104
   278  00FE46                     u420:
   279  00FE46  EC7B  F07F         	call	_lightDiod	;wreg free
   280  00FE4A  EFFD  F07E         	goto	l1050
   281  00FE4E                     l1062:
   282                           
   283                           ;main.c: 269:                 PORTD = 0;
   284  00FE4E  0E00               	movlw	0
   285  00FE50  6E83               	movwf	131,c	;volatile
   286                           
   287                           ;main.c: 270:                 isAlarmOn = 0;
   288  00FE52  0E00               	movlw	0
   289  00FE54  6E0F               	movwf	(_isAlarmOn+1)^0,c
   290  00FE56  0E00               	movlw	0
   291  00FE58  6E0E               	movwf	_isAlarmOn^0,c
   292  00FE5A  EFFD  F07E         	goto	l1050
   293  00FE5E                     l104:
   294  00FE5E  EFFD  F07E         	goto	l1050
   295  00FE62  EF00  F000         	goto	start
   296  00FE66                     __end_of_main:
   297                           	opt callstack 0
   298                           
   299 ;; *************** function _lightDiod *****************
   300 ;; Defined at:
   301 ;;		line 180 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;  trap            2    7[COMRAM] unsigned int 
   306 ;;  i               2    9[COMRAM] int 
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg, status,2, status,0, cstack
   311 ;; Tracked objects:
   312 ;;		On entry : 0/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   317 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   319 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   320 ;;Total ram usage:        4 bytes
   321 ;; Hardware stack levels used:    1
   322 ;; Hardware stack levels required when called:    1
   323 ;; This function calls:
   324 ;;		_adc
   325 ;;		_delay
   326 ;;		_updateStateOfTheReset
   327 ;; This function is called by:
   328 ;;		_main
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           	psect	text1
   333  00FEF6                     __ptext1:
   334                           	opt callstack 0
   335  00FEF6                     _lightDiod:
   336                           	opt callstack 29
   337  00FEF6                     
   338                           ;main.c: 182:     isAlarmOn = 1;
   339  00FEF6  0E00               	movlw	0
   340  00FEF8  6E0F               	movwf	(_isAlarmOn+1)^0,c
   341  00FEFA  0E01               	movlw	1
   342  00FEFC  6E0E               	movwf	_isAlarmOn^0,c
   343                           
   344                           ;main.c: 184:     for (int i = 0; i < 5; i++) {
   345  00FEFE  0E00               	movlw	0
   346  00FF00  6E0B               	movwf	(lightDiod@i+1)^0,c
   347  00FF02  0E00               	movlw	0
   348  00FF04  6E0A               	movwf	lightDiod@i^0,c
   349  00FF06                     l990:
   350                           
   351                           ;main.c: 185:         updateStateOfTheReset();
   352  00FF06  ECB0  F07E         	call	_updateStateOfTheReset	;wreg free
   353  00FF0A                     
   354                           ;main.c: 187:         if (isAlarmTurnedOn == 0) {
   355  00FF0A  5010               	movf	_isAlarmTurnedOn^0,w,c
   356  00FF0C  1011               	iorwf	(_isAlarmTurnedOn+1)^0,w,c
   357  00FF0E  A4D8               	btfss	status,2,c
   358  00FF10  EF8C  F07F         	goto	u331
   359  00FF14  EF8E  F07F         	goto	u330
   360  00FF18                     u331:
   361  00FF18  EF96  F07F         	goto	l998
   362  00FF1C                     u330:
   363  00FF1C                     l994:
   364                           
   365                           ;main.c: 188:             PORTD = 0;
   366  00FF1C  0E00               	movlw	0
   367  00FF1E  6E83               	movwf	131,c	;volatile
   368                           
   369                           ;main.c: 189:             isAlarmOn = 0;
   370  00FF20  0E00               	movlw	0
   371  00FF22  6E0F               	movwf	(_isAlarmOn+1)^0,c
   372  00FF24  0E00               	movlw	0
   373  00FF26  6E0E               	movwf	_isAlarmOn^0,c
   374  00FF28  EFFF  F07F         	goto	l93
   375  00FF2C                     l998:
   376                           
   377                           ;main.c: 192:         unsigned int trap = adc(0);
   378  00FF2C  0E00               	movlw	0
   379  00FF2E  EC33  F07F         	call	_adc
   380  00FF32  C001  F008         	movff	?_adc,lightDiod@trap
   381  00FF36  C002  F009         	movff	?_adc+1,lightDiod@trap+1
   382  00FF3A                     
   383                           ;main.c: 194:         if (trap < 375) {
   384  00FF3A  0E77               	movlw	119
   385  00FF3C  5C08               	subwf	lightDiod@trap^0,w,c
   386  00FF3E  0E01               	movlw	1
   387  00FF40  5809               	subwfb	(lightDiod@trap+1)^0,w,c
   388  00FF42  B0D8               	btfsc	status,0,c
   389  00FF44  EFA6  F07F         	goto	u341
   390  00FF48  EFA8  F07F         	goto	u340
   391  00FF4C                     u341:
   392  00FF4C  EFAA  F07F         	goto	l1006
   393  00FF50                     u340:
   394  00FF50  EF8E  F07F         	goto	l994
   395  00FF54                     l1006:
   396                           
   397                           ;main.c: 200:         updateStateOfTheReset();
   398  00FF54  ECB0  F07E         	call	_updateStateOfTheReset	;wreg free
   399  00FF58                     
   400                           ;main.c: 202:         if (isAlarmTurnedOn == 0) {
   401  00FF58  5010               	movf	_isAlarmTurnedOn^0,w,c
   402  00FF5A  1011               	iorwf	(_isAlarmTurnedOn+1)^0,w,c
   403  00FF5C  A4D8               	btfss	status,2,c
   404  00FF5E  EFB3  F07F         	goto	u351
   405  00FF62  EFB5  F07F         	goto	u350
   406  00FF66                     u351:
   407  00FF66  EFB7  F07F         	goto	l1014
   408  00FF6A                     u350:
   409  00FF6A  EF8E  F07F         	goto	l994
   410  00FF6E                     l1014:
   411                           
   412                           ;main.c: 208:         PORTD = 1;
   413  00FF6E  0E01               	movlw	1
   414  00FF70  6E83               	movwf	131,c	;volatile
   415  00FF72                     
   416                           ;main.c: 210:         updateStateOfTheReset();
   417  00FF72  ECB0  F07E         	call	_updateStateOfTheReset	;wreg free
   418  00FF76                     
   419                           ;main.c: 212:         if (isAlarmTurnedOn == 0) {
   420  00FF76  5010               	movf	_isAlarmTurnedOn^0,w,c
   421  00FF78  1011               	iorwf	(_isAlarmTurnedOn+1)^0,w,c
   422  00FF7A  A4D8               	btfss	status,2,c
   423  00FF7C  EFC2  F07F         	goto	u361
   424  00FF80  EFC4  F07F         	goto	u360
   425  00FF84                     u361:
   426  00FF84  EFC6  F07F         	goto	l1024
   427  00FF88                     u360:
   428  00FF88  EF8E  F07F         	goto	l994
   429  00FF8C                     l1024:
   430                           
   431                           ;main.c: 218:         delay(500);
   432  00FF8C  0E01               	movlw	1
   433  00FF8E  6E02               	movwf	(delay@ms+1)^0,c
   434  00FF90  0EF4               	movlw	244
   435  00FF92  6E01               	movwf	delay@ms^0,c
   436  00FF94  EC8C  F07E         	call	_delay	;wreg free
   437                           
   438                           ;main.c: 220:         updateStateOfTheReset();
   439  00FF98  ECB0  F07E         	call	_updateStateOfTheReset	;wreg free
   440  00FF9C                     
   441                           ;main.c: 222:         if (isAlarmTurnedOn == 0) {
   442  00FF9C  5010               	movf	_isAlarmTurnedOn^0,w,c
   443  00FF9E  1011               	iorwf	(_isAlarmTurnedOn+1)^0,w,c
   444  00FFA0  A4D8               	btfss	status,2,c
   445  00FFA2  EFD5  F07F         	goto	u371
   446  00FFA6  EFD7  F07F         	goto	u370
   447  00FFAA                     u371:
   448  00FFAA  EFD9  F07F         	goto	l1032
   449  00FFAE                     u370:
   450  00FFAE  EF8E  F07F         	goto	l994
   451  00FFB2                     l1032:
   452                           
   453                           ;main.c: 228:         PORTD = 0;
   454  00FFB2  0E00               	movlw	0
   455  00FFB4  6E83               	movwf	131,c	;volatile
   456  00FFB6                     
   457                           ;main.c: 230:         updateStateOfTheReset();
   458  00FFB6  ECB0  F07E         	call	_updateStateOfTheReset	;wreg free
   459  00FFBA                     
   460                           ;main.c: 232:         if (isAlarmTurnedOn == 0) {
   461  00FFBA  5010               	movf	_isAlarmTurnedOn^0,w,c
   462  00FFBC  1011               	iorwf	(_isAlarmTurnedOn+1)^0,w,c
   463  00FFBE  A4D8               	btfss	status,2,c
   464  00FFC0  EFE4  F07F         	goto	u381
   465  00FFC4  EFE6  F07F         	goto	u380
   466  00FFC8                     u381:
   467  00FFC8  EFE8  F07F         	goto	l1042
   468  00FFCC                     u380:
   469  00FFCC  EF8E  F07F         	goto	l994
   470  00FFD0                     l1042:
   471                           
   472                           ;main.c: 238:         delay(500);
   473  00FFD0  0E01               	movlw	1
   474  00FFD2  6E02               	movwf	(delay@ms+1)^0,c
   475  00FFD4  0EF4               	movlw	244
   476  00FFD6  6E01               	movwf	delay@ms^0,c
   477  00FFD8  EC8C  F07E         	call	_delay	;wreg free
   478  00FFDC                     
   479                           ;main.c: 239:     }
   480  00FFDC  4A0A               	infsnz	lightDiod@i^0,f,c
   481  00FFDE  2A0B               	incf	(lightDiod@i+1)^0,f,c
   482  00FFE0  BE0B               	btfsc	(lightDiod@i+1)^0,7,c
   483  00FFE2  EFFC  F07F         	goto	u391
   484  00FFE6  500B               	movf	(lightDiod@i+1)^0,w,c
   485  00FFE8  E109               	bnz	u390
   486  00FFEA  0E05               	movlw	5
   487  00FFEC  5C0A               	subwf	lightDiod@i^0,w,c
   488  00FFEE  A0D8               	btfss	status,0,c
   489  00FFF0  EFFC  F07F         	goto	u391
   490  00FFF4  EFFE  F07F         	goto	u390
   491  00FFF8                     u391:
   492  00FFF8  EF83  F07F         	goto	l990
   493  00FFFC                     u390:
   494  00FFFC                     
   495                           ;main.c: 241:     PORTD = 255;
   496  00FFFC  6883               	setf	131,c	;volatile
   497  00FFFE                     l93:
   498  00FFFE  0012               	return		;funcret
   499  010000                     __end_of_lightDiod:
   500                           	opt callstack 0
   501                           
   502 ;; *************** function _updateStateOfTheReset *****************
   503 ;; Defined at:
   504 ;;		line 160 in file "main.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;  i               2    0[COMRAM] unsigned int 
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   519 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   521 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   522 ;;Total ram usage:        2 bytes
   523 ;; Hardware stack levels used:    1
   524 ;; This function calls:
   525 ;;		Nothing
   526 ;; This function is called by:
   527 ;;		_lightDiod
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           	psect	text2
   533  00FD60                     __ptext2:
   534                           	opt callstack 0
   535  00FD60                     _updateStateOfTheReset:
   536                           	opt callstack 30
   537  00FD60                     
   538                           ;main.c: 162:     unsigned int i = 6000;
   539  00FD60  0E17               	movlw	23
   540  00FD62  6E02               	movwf	(updateStateOfTheReset@i+1)^0,c
   541  00FD64  0E70               	movlw	112
   542  00FD66  6E01               	movwf	updateStateOfTheReset@i^0,c
   543                           
   544                           ;main.c: 164:     while(PORTBbits.RB3 && i > 0)
   545  00FD68  EFB9  F07E         	goto	l826
   546  00FD6C                     l824:
   547                           
   548                           ;main.c: 165:     {;main.c: 166:         i--;
   549  00FD6C  0601               	decf	updateStateOfTheReset@i^0,f,c
   550  00FD6E  A0D8               	btfss	status,0,c
   551  00FD70  0602               	decf	(updateStateOfTheReset@i+1)^0,f,c
   552  00FD72                     l826:
   553                           
   554                           ;main.c: 164:     while(PORTBbits.RB3 && i > 0)
   555  00FD72  A681               	btfss	129,3,c	;volatile
   556  00FD74  EFBE  F07E         	goto	u51
   557  00FD78  EFC0  F07E         	goto	u50
   558  00FD7C                     u51:
   559  00FD7C  EFC9  F07E         	goto	l84
   560  00FD80                     u50:
   561  00FD80  5001               	movf	updateStateOfTheReset@i^0,w,c
   562  00FD82  1002               	iorwf	(updateStateOfTheReset@i+1)^0,w,c
   563  00FD84  A4D8               	btfss	status,2,c
   564  00FD86  EFC7  F07E         	goto	u61
   565  00FD8A  EFC9  F07E         	goto	u60
   566  00FD8E                     u61:
   567  00FD8E  EFB6  F07E         	goto	l824
   568  00FD92                     u60:
   569  00FD92                     l84:
   570                           
   571                           ;main.c: 169:     if(PORTBbits.RB3 == 0)
   572  00FD92  B681               	btfsc	129,3,c	;volatile
   573  00FD94  EFCE  F07E         	goto	u71
   574  00FD98  EFD0  F07E         	goto	u70
   575  00FD9C                     u71:
   576  00FD9C  EFEC  F07E         	goto	l87
   577  00FDA0                     u70:
   578  00FDA0                     
   579                           ;main.c: 170:     {;main.c: 171:         isAlarmTurnedOn = isAlarmTurnedOn == 1 ? 0 : 1;
   580  00FDA0  0410               	decf	_isAlarmTurnedOn^0,w,c
   581  00FDA2  1011               	iorwf	(_isAlarmTurnedOn+1)^0,w,c
   582  00FDA4  A4D8               	btfss	status,2,c
   583  00FDA6  EFD7  F07E         	goto	u81
   584  00FDAA  EFDA  F07E         	goto	u80
   585  00FDAE                     u81:
   586  00FDAE  0E01               	movlw	1
   587  00FDB0  EFDB  F07E         	goto	u90
   588  00FDB4                     u80:
   589  00FDB4  0E00               	movlw	0
   590  00FDB6                     u90:
   591  00FDB6  6E10               	movwf	_isAlarmTurnedOn^0,c
   592  00FDB8  6A11               	clrf	(_isAlarmTurnedOn+1)^0,c
   593                           
   594                           ;main.c: 173:         if (isAlarmTurnedOn == 0) {
   595  00FDBA  5010               	movf	_isAlarmTurnedOn^0,w,c
   596  00FDBC  1011               	iorwf	(_isAlarmTurnedOn+1)^0,w,c
   597  00FDBE  A4D8               	btfss	status,2,c
   598  00FDC0  EFE4  F07E         	goto	u101
   599  00FDC4  EFE6  F07E         	goto	u100
   600  00FDC8                     u101:
   601  00FDC8  EFEC  F07E         	goto	l87
   602  00FDCC                     u100:
   603  00FDCC                     
   604                           ;main.c: 174:             PORTD = 0;
   605  00FDCC  0E00               	movlw	0
   606  00FDCE  6E83               	movwf	131,c	;volatile
   607                           
   608                           ;main.c: 175:             isAlarmOn = 0;
   609  00FDD0  0E00               	movlw	0
   610  00FDD2  6E0F               	movwf	(_isAlarmOn+1)^0,c
   611  00FDD4  0E00               	movlw	0
   612  00FDD6  6E0E               	movwf	_isAlarmOn^0,c
   613  00FDD8                     l87:
   614  00FDD8  0012               	return		;funcret
   615  00FDDA                     __end_of_updateStateOfTheReset:
   616                           	opt callstack 0
   617                           
   618 ;; *************** function _delay *****************
   619 ;; Defined at:
   620 ;;		line 82 in file "main.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;  ms              2    0[COMRAM] unsigned int 
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  i               2    2[COMRAM] unsigned int 
   625 ;;  j               1    4[COMRAM] unsigned char 
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;Total ram usage:        5 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; This function calls:
   642 ;;		Nothing
   643 ;; This function is called by:
   644 ;;		_lightDiod
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text3
   649  00FD18                     __ptext3:
   650                           	opt callstack 0
   651  00FD18                     _delay:
   652                           	opt callstack 29
   653  00FD18                     
   654                           ;main.c: 82: void delay(unsigned int ms);main.c: 83: {;main.c: 84:     unsigned int i;;m
      +                          ain.c: 85:     unsigned char j;;main.c: 87:  for (i =0; i< ms; i++)
   655  00FD18  0E00               	movlw	0
   656  00FD1A  6E04               	movwf	(delay@i+1)^0,c
   657  00FD1C  0E00               	movlw	0
   658  00FD1E  6E03               	movwf	delay@i^0,c
   659  00FD20  EFA4  F07E         	goto	l962
   660  00FD24                     l950:
   661                           
   662                           ;main.c: 88:  {;main.c: 90:   for (j =0 ; j < 200; j++)
   663  00FD24  0E00               	movlw	0
   664  00FD26  6E05               	movwf	delay@j^0,c
   665  00FD28                     l37:
   666                           
   667                           ;main.c: 91:    {;main.c: 92:       __nop();
   668  00FD28  F000               	nop	
   669                           
   670                           ;main.c: 93:       __nop();
   671  00FD2A  F000               	nop	
   672                           
   673                           ;main.c: 94:       __nop();
   674  00FD2C  F000               	nop	
   675                           
   676                           ;main.c: 95:       __nop();
   677  00FD2E  F000               	nop	
   678                           
   679                           ;main.c: 96:       __nop();
   680  00FD30  F000               	nop	
   681  00FD32                     
   682                           ;main.c: 97:    }
   683  00FD32  2A05               	incf	delay@j^0,f,c
   684  00FD34  0EC7               	movlw	199
   685  00FD36  6405               	cpfsgt	delay@j^0,c
   686  00FD38  EFA0  F07E         	goto	u291
   687  00FD3C  EFA2  F07E         	goto	u290
   688  00FD40                     u291:
   689  00FD40  EF94  F07E         	goto	l37
   690  00FD44                     u290:
   691  00FD44                     
   692                           ;main.c: 98:  }
   693  00FD44  4A03               	infsnz	delay@i^0,f,c
   694  00FD46  2A04               	incf	(delay@i+1)^0,f,c
   695  00FD48                     l962:
   696  00FD48  5001               	movf	delay@ms^0,w,c
   697  00FD4A  5C03               	subwf	delay@i^0,w,c
   698  00FD4C  5002               	movf	(delay@ms+1)^0,w,c
   699  00FD4E  5804               	subwfb	(delay@i+1)^0,w,c
   700  00FD50  A0D8               	btfss	status,0,c
   701  00FD52  EFAD  F07E         	goto	u301
   702  00FD56  EFAF  F07E         	goto	u300
   703  00FD5A                     u301:
   704  00FD5A  EF92  F07E         	goto	l950
   705  00FD5E                     u300:
   706  00FD5E  0012               	return		;funcret
   707  00FD60                     __end_of_delay:
   708                           	opt callstack 0
   709                           
   710 ;; *************** function _adc *****************
   711 ;; Defined at:
   712 ;;		line 101 in file "main.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  kanal           1    wreg     unsigned char 
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  kanal           1    6[COMRAM] unsigned char 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  2    0[COMRAM] unsigned int 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   728 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   729 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;Total ram usage:        7 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_lightDiod
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text4
   741  00FE66                     __ptext4:
   742                           	opt callstack 0
   743  00FE66                     _adc:
   744                           	opt callstack 29
   745                           
   746                           ;incstack = 0
   747                           ;adc@kanal stored from wreg
   748  00FE66  6E07               	movwf	adc@kanal^0,c
   749  00FE68                     
   750                           ;main.c: 101: unsigned int adc(unsigned char kanal);main.c: 102: {;main.c: 103:     swit
      +                          ch(kanal)
   751  00FE68  EF42  F07F         	goto	l974
   752  00FE6C                     l966:
   753  00FE6C  0E01               	movlw	1
   754  00FE6E  6EC2               	movwf	194,c	;volatile
   755  00FE70  EF5B  F07F         	goto	l45
   756  00FE74                     l968:
   757  00FE74  0E05               	movlw	5
   758  00FE76  6EC2               	movwf	194,c	;volatile
   759  00FE78  EF5B  F07F         	goto	l45
   760  00FE7C                     l970:
   761  00FE7C  0E09               	movlw	9
   762  00FE7E  6EC2               	movwf	194,c	;volatile
   763  00FE80  EF5B  F07F         	goto	l45
   764  00FE84                     l974:
   765  00FE84  5007               	movf	adc@kanal^0,w,c
   766  00FE86  6E03               	movwf	??_adc^0,c
   767  00FE88  6A04               	clrf	(??_adc+1)^0,c
   768                           
   769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   770                           ; Switch size 1, requested type "simple"
   771                           ; Number of cases is 1, Range of values is 0 to 0
   772                           ; switch strategies available:
   773                           ; Name         Instructions Cycles
   774                           ; simple_byte            4     3 (average)
   775                           ;	Chosen strategy is simple_byte
   776  00FE8A  5004               	movf	(??_adc+1)^0,w,c
   777  00FE8C  0A00               	xorlw	0	; case 0
   778  00FE8E  B4D8               	btfsc	status,2,c
   779  00FE90  EF4C  F07F         	goto	l1068
   780  00FE94  EF5B  F07F         	goto	l45
   781  00FE98                     l1068:
   782                           
   783                           ; Switch size 1, requested type "simple"
   784                           ; Number of cases is 3, Range of values is 0 to 2
   785                           ; switch strategies available:
   786                           ; Name         Instructions Cycles
   787                           ; simple_byte           10     6 (average)
   788                           ;	Chosen strategy is simple_byte
   789  00FE98  5003               	movf	??_adc^0,w,c
   790  00FE9A  0A00               	xorlw	0	; case 0
   791  00FE9C  B4D8               	btfsc	status,2,c
   792  00FE9E  EF36  F07F         	goto	l966
   793  00FEA2  0A01               	xorlw	1	; case 1
   794  00FEA4  B4D8               	btfsc	status,2,c
   795  00FEA6  EF3A  F07F         	goto	l968
   796  00FEAA  0A03               	xorlw	3	; case 2
   797  00FEAC  B4D8               	btfsc	status,2,c
   798  00FEAE  EF3E  F07F         	goto	l970
   799  00FEB2  EF5B  F07F         	goto	l45
   800  00FEB6                     l45:
   801                           
   802                           ;main.c: 110:     ADCON0bits.GO=1;
   803  00FEB6  82C2               	bsf	194,1,c	;volatile
   804  00FEB8                     l48:
   805  00FEB8  B2C2               	btfsc	194,1,c	;volatile
   806  00FEBA  EF61  F07F         	goto	u311
   807  00FEBE  EF63  F07F         	goto	u310
   808  00FEC2                     u311:
   809  00FEC2  EF5C  F07F         	goto	l48
   810  00FEC6                     u310:
   811  00FEC6                     
   812                           ;main.c: 113:    return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
   813  00FEC6  CFC3 F003          	movff	4035,??_adc	;volatile
   814  00FECA  0E06               	movlw	6
   815  00FECC  6E04               	movwf	(??_adc+1)^0,c
   816  00FECE                     u325:
   817  00FECE  90D8               	bcf	status,0,c
   818  00FED0  3203               	rrcf	??_adc^0,f,c
   819  00FED2  2E04               	decfsz	(??_adc+1)^0,f,c
   820  00FED4  EF67  F07F         	goto	u325
   821  00FED8  5003               	movf	??_adc^0,w,c
   822  00FEDA  CFC4 F005          	movff	4036,??_adc+2	;volatile
   823  00FEDE  6A06               	clrf	(??_adc+3)^0,c
   824  00FEE0  90D8               	bcf	status,0,c
   825  00FEE2  3605               	rlcf	(??_adc+2)^0,f,c
   826  00FEE4  3606               	rlcf	(??_adc+3)^0,f,c
   827  00FEE6  90D8               	bcf	status,0,c
   828  00FEE8  3605               	rlcf	(??_adc+2)^0,f,c
   829  00FEEA  3606               	rlcf	(??_adc+3)^0,f,c
   830  00FEEC  1005               	iorwf	(??_adc+2)^0,w,c
   831  00FEEE  6E01               	movwf	?_adc^0,c
   832  00FEF0  5006               	movf	(??_adc+3)^0,w,c
   833  00FEF2  6E02               	movwf	(?_adc+1)^0,c
   834  00FEF4  0012               	return		;funcret
   835  00FEF6                     __end_of_adc:
   836                           	opt callstack 0
   837  0000                     
   838                           	psect	rparam
   839  0000                     tosu	equ	0xFFF
   840                           tosh	equ	0xFFE
   841                           tosl	equ	0xFFD
   842                           stkptr	equ	0xFFC
   843                           pclatu	equ	0xFFB
   844                           pclath	equ	0xFFA
   845                           pcl	equ	0xFF9
   846                           tblptru	equ	0xFF8
   847                           tblptrh	equ	0xFF7
   848                           tblptrl	equ	0xFF6
   849                           tablat	equ	0xFF5
   850                           prodh	equ	0xFF4
   851                           prodl	equ	0xFF3
   852                           indf0	equ	0xFEF
   853                           postinc0	equ	0xFEE
   854                           postdec0	equ	0xFED
   855                           preinc0	equ	0xFEC
   856                           plusw0	equ	0xFEB
   857                           fsr0h	equ	0xFEA
   858                           fsr0l	equ	0xFE9
   859                           wreg	equ	0xFE8
   860                           indf1	equ	0xFE7
   861                           postinc1	equ	0xFE6
   862                           postdec1	equ	0xFE5
   863                           preinc1	equ	0xFE4
   864                           plusw1	equ	0xFE3
   865                           fsr1h	equ	0xFE2
   866                           fsr1l	equ	0xFE1
   867                           bsr	equ	0xFE0
   868                           indf2	equ	0xFDF
   869                           postinc2	equ	0xFDE
   870                           postdec2	equ	0xFDD
   871                           preinc2	equ	0xFDC
   872                           plusw2	equ	0xFDB
   873                           fsr2h	equ	0xFDA
   874                           fsr2l	equ	0xFD9
   875                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     13      17
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lightDiod
    _lightDiod->_adc

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     410
                                             11 COMRAM     2     2      0
                                _adc
                          _lightDiod
              _updateStateOfTheReset
 ---------------------------------------------------------------------------------
 (1) _lightDiod                                            4     4      0     350
                                              7 COMRAM     4     4      0
                                _adc
                              _delay
              _updateStateOfTheReset
 ---------------------------------------------------------------------------------
 (1) _updateStateOfTheReset                                2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2     244
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _adc                                                  7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc
   _lightDiod
     _adc
     _delay
     _updateStateOfTheReset
   _updateStateOfTheReset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      D      11       1       13.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      34        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jun  6 04:25:30 2020

                            l40 FD5E                              l51 FEF4                              l45 FEB6  
                            l37 FD28                              l48 FEB8                              l91 FFFC  
                            l84 FD92                              l93 FFFE                              l87 FDD8  
                            u50 FD80                              u51 FD7C                              u60 FD92  
                            u61 FD8E                              u70 FDA0                              u71 FD9C  
                            u80 FDB4                              u81 FDAE                              u90 FDB6  
               _isAlarmTurnedOn 0010                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                           l104 FE5E                             l830 FDA0                             l822 FD60  
                           l832 FDCC                             l824 FD6C                             l826 FD72  
                           l828 FD80                             l950 FD24                             l960 FD44  
                           l970 FE7C                             l962 FD48                             l964 FE68  
                           l956 FD32                             l948 FD18                             l966 FE6C  
                           l974 FE84                             l958 FD34                             l990 FF06  
                           l976 FEC6                             l968 FE74                             l992 FF0A  
                           l984 FEF6                             l994 FF1C                             l998 FF2C  
                  __CFG_CPB$OFF 000000                             u100 FDCC                             u101 FDC8  
                           u300 FD5E                             u301 FD5A                             u310 FEC6  
                           u311 FEC2                             u400 FE10                             u401 FE0C  
                           u330 FF1C                             u410 FE34                             u331 FF18  
                           u411 FE30                             u340 FF50                             u420 FE46  
                           u325 FECE                             u341 FF4C                             u421 FE42  
                           u350 FF6A                             u351 FF66                             u360 FF88  
                           u361 FF84                             u290 FD44                             u370 FFAE  
                  __CFG_CPD$OFF 000000                             u291 FD40                             u371 FFAA  
                           u380 FFCC                             u381 FFC8                             u390 FFFC  
                           u391 FFF8                             _adc FE66                    __CFG_LVP$OFF 000000  
                  __CFG_WDT$OFF 000000                            ?_adc 0001                            l1000 FF3A  
                          l1014 FF6E                            l1006 FF54                            l1032 FFB2  
                          l1024 FF8C                            l1016 FF72                            l1008 FF58  
                          l1042 FFD0                            l1034 FFB6                            l1026 FF9C  
                          l1018 FF76                            l1050 FDFA                            l1044 FFDC  
                          l1036 FFBA                            l1060 FE46                            l1052 FDFE  
                          l1046 FFE0                            l1062 FE4E                            l1054 FE10  
                          l1056 FE1E                            l1048 FDDA                            l1058 FE34  
                          l1068 FE98                    __CFG_PWRT$ON 000000                            _main FDDA  
                          start 0000                   __CFG_IESO$OFF 000000                   __CFG_MCLRE$ON 000000  
                  ___param_bank 000000                           ??_adc 0003                           ?_main 0001  
                         _PORTD 000F83                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
        ?_updateStateOfTheReset 0001                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000  
                __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000                           _delay FD18  
                __CFG_BOREN$OFF 000000                           tablat 000FF5                           status 000FD8  
               __initialization FCF2                    __end_of_main FE66                  __CFG_OSC$HSPLL 000000  
        updateStateOfTheReset@i 0001                          ??_main 000C                   __activetblptr 000002  
                        ?_delay 0001                          _ADCON0 000FC2                          _ADCON1 000FC1  
                        _ADCON2 000FC0                          _ADRESH 000FC4                          _ADRESL 000FC3  
                __CFG_XINST$OFF 000000                          delay@i 0003                          delay@j 0005  
                  __pdataCOMRAM 0010                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                      __accesstop 0080         __end_of__initialization FD0E  
               __CFG_PBADEN$OFF 000000                   ___rparam_used 000001                  __pcstackCOMRAM 0001  
                 __end_of_delay FD60                         ??_delay 0003              __size_of_lightDiod 010A  
       ??_updateStateOfTheReset 0001                         __Hparam 0000                         __Lparam 0000  
               __CFG_STVREN$OFF 000000                         __pcinit FCF2                         __ramtop 1000  
                       __ptext0 FDDA                         __ptext1 FEF6                         __ptext2 FD60  
                       __ptext3 FD18                         __ptext4 FE66               __end_of_lightDiod 0000  
                  __size_of_adc 0090                         delay@ms 0001            end_of_initialization FD0E  
                 __Lmediumconst 0000                       _PORTBbits 000F81                   __pidataCOMRAM FCF0  
           start_initialization FCF2                     __end_of_adc FEF6                      lightDiod@i 000A  
              __CFG_LPT1OSC$OFF 000000  __size_of_updateStateOfTheReset 007A   __end_of_updateStateOfTheReset FDDA  
                   __pbssCOMRAM 000E               __CFG_CCP2MX$PORTC 000000                       _isAlarmOn 000E  
                 lightDiod@trap 0008                       _lightDiod FEF6                  __size_of_delay 0048  
              __CFG_WDTPS$32768 000000                      _ADCON0bits 000FC2                      ?_lightDiod 0001  
                      __Hrparam 0000                        __Lrparam 0000                        adc@kanal 0007  
                 __size_of_main 008C                        main@trap 000C                     ??_lightDiod 0008  
         _updateStateOfTheReset FD60  
